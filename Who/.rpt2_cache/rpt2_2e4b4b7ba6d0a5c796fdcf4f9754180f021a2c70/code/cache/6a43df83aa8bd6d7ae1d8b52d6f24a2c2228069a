{
  "code": "import { lwg3D } from \"../Frame/lwg3D\";\r\nimport { Tools, EventAdmin, Animation3D } from \"../Frame/lwg\";\r\nexport var Game3D;\r\n(function (Game3D) {\r\n    Game3D.myCardArr = [];\r\n    Game3D.oppositeCardArr = [];\r\n    Game3D.questionArr = [];\r\n    function randomlyTakeOut(type) {\r\n        let index16 = Tools.arrayRandomGetOut(Game3D.CardData, 16);\r\n        if (type === WhichScard.MyCard) {\r\n            Game3D.oppositeHandCard = Tools.arrayRandomGetOut(Tools.array_Copy(index16), 1);\r\n        }\r\n        else if (type === WhichScard.OppositeCard) {\r\n            Game3D.myHandCard = Tools.arrayRandomGetOut(Tools.array_Copy(index16), 1);\r\n        }\r\n        let startZ = 0.3;\r\n        for (let index = 0; index < index16.length; index++) {\r\n            const element = Game3D.AllCardTem.getChildByName(index16[index][CardProperty.name]);\r\n            if (type === WhichScard.MyCard) {\r\n                if (element.name === Game3D.oppositeHandCard[0][CardProperty.name]) {\r\n                    let HandCard = element.clone();\r\n                    Game3D.OppositeHandParent.addChild(HandCard);\r\n                    HandCard.transform.localPosition = new Laya.Vector3(0, 0, 0);\r\n                }\r\n                Game3D.myCardArr.push(index16[index]);\r\n                Game3D.MyCard.addChild(element);\r\n                if (index % 4 == 0) {\r\n                    startZ -= 0.5;\r\n                }\r\n                element.transform.localPosition = new Laya.Vector3(0.5 * (index % 4) - 0.5, 0, startZ);\r\n                element.transform.localRotationEulerX = 10;\r\n            }\r\n            else if (type === WhichScard.OppositeCard) {\r\n                Game3D.oppositeCardArr.push(index16[index]);\r\n                Game3D.OppositeCard.addChild(element);\r\n                if (index % 4 == 0) {\r\n                    startZ += 0.5;\r\n                }\r\n                element.transform.localPosition = new Laya.Vector3(0.5 * (index % 4) - 0.5, 0, startZ);\r\n                element.transform.localRotationEulerX = -10;\r\n            }\r\n            element[CardProperty.characteristicsArr] = index16[index][CardProperty.characteristicsArr];\r\n        }\r\n    }\r\n    Game3D.randomlyTakeOut = randomlyTakeOut;\r\n    function randomTaskCard(type) {\r\n        let contrastArr = [];\r\n        for (let index = 0; index < Game3D.characteristicsData.length; index++) {\r\n            let index1 = Game3D.characteristicsData[index][CharacteristicsProperty.index];\r\n            contrastArr.push({\r\n                index: index1,\r\n                value: 0\r\n            });\r\n        }\r\n        let whichArr;\r\n        if (type === WhichScard.MyCard) {\r\n            whichArr = Game3D.MyCard;\r\n        }\r\n        else {\r\n            whichArr = Game3D.OppositeCard;\r\n        }\r\n        for (let i = 0; i < Game3D.myCardArr.length; i++) {\r\n            const characteristicsArr = Game3D.myCardArr[i][CardProperty.characteristicsArr];\r\n            for (let j = 0; j < characteristicsArr.length; j++) {\r\n                const characteristicsIndex = characteristicsArr[j];\r\n                contrastArr[characteristicsIndex - 1]['value']++;\r\n            }\r\n        }\r\n        for (let index = 0; index < contrastArr.length; index++) {\r\n            const element = contrastArr[index];\r\n            if (element['value'] === 0) {\r\n                contrastArr.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n        console.log('提问前：', contrastArr);\r\n        Tools.objArrPropertySort(contrastArr, 'value');\r\n        if (whichArr.numChildren == 1) {\r\n            Game3D.questionArr = ['是谁？'];\r\n        }\r\n        else if (whichArr.numChildren == 2) {\r\n            Game3D.questionArr = ['是谁？'];\r\n        }\r\n        else if (whichArr.numChildren == 3) {\r\n            Game3D.questionArr = questionForindex(contrastArr);\r\n        }\r\n        else if (whichArr.numChildren >= 4) {\r\n            Game3D.questionArr = questionForindex(contrastArr);\r\n        }\r\n        console.log(contrastArr, Game3D.questionArr);\r\n    }\r\n    Game3D.randomTaskCard = randomTaskCard;\r\n    function questionForindex(contrastArr) {\r\n        let indexArr = [];\r\n        let content1 = contrastArr[0]['index'];\r\n        let content2 = contrastArr[1]['index'];\r\n        let content3 = contrastArr[2]['index'];\r\n        let content4 = contrastArr[3]['index'];\r\n        indexArr.push(content1, content2, content3, content4);\r\n        let arr = [];\r\n        for (let i = 0; i < Game3D.characteristicsData.length; i++) {\r\n            for (let j = 0; j < indexArr.length; j++) {\r\n                if (Game3D.characteristicsData[i][CharacteristicsProperty.index] == indexArr[j]) {\r\n                    arr.push(Game3D.characteristicsData[i][CharacteristicsProperty.question]);\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    Game3D.questionForindex = questionForindex;\r\n    function getCharacteristicsOfName(name) {\r\n        let arr;\r\n        for (let index = 0; index < Game3D.characteristicsData.length; index++) {\r\n            const element = Game3D.characteristicsData[index];\r\n            if (Game3D.characteristicsData[index][CardProperty.name] === name) {\r\n                arr = Game3D.characteristicsData[index][CardProperty.characteristicsArr];\r\n                break;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    Game3D.getCharacteristicsOfName = getCharacteristicsOfName;\r\n    let WhichScard;\r\n    (function (WhichScard) {\r\n        WhichScard[\"OppositeCard\"] = \"OppositeCard\";\r\n        WhichScard[\"MyCard\"] = \"MyCard\";\r\n    })(WhichScard = Game3D.WhichScard || (Game3D.WhichScard = {}));\r\n    Game3D.characteristicsData = [];\r\n    let CharacteristicsProperty;\r\n    (function (CharacteristicsProperty) {\r\n        CharacteristicsProperty[\"index\"] = \"index\";\r\n        CharacteristicsProperty[\"describe\"] = \"describe\";\r\n        CharacteristicsProperty[\"question\"] = \"question\";\r\n    })(CharacteristicsProperty = Game3D.CharacteristicsProperty || (Game3D.CharacteristicsProperty = {}));\r\n    Game3D.CardData = [];\r\n    let CardProperty;\r\n    (function (CardProperty) {\r\n        CardProperty[\"characteristicsArr\"] = \"characteristicsArr\";\r\n        CardProperty[\"ChName\"] = \"ChName\";\r\n        CardProperty[\"name\"] = \"name\";\r\n    })(CardProperty = Game3D.CardProperty || (Game3D.CardProperty = {}));\r\n    let WhichBoutType;\r\n    (function (WhichBoutType) {\r\n        WhichBoutType[\"me\"] = \"me\";\r\n        WhichBoutType[\"opposite\"] = \"opposite\";\r\n    })(WhichBoutType = Game3D.WhichBoutType || (Game3D.WhichBoutType = {}));\r\n    let EventType;\r\n    (function (EventType) {\r\n        EventType[\"judgeQuestion\"] = \"judgeQuestion\";\r\n        EventType[\"cardClick\"] = \"cardClick\";\r\n    })(EventType = Game3D.EventType || (Game3D.EventType = {}));\r\n    let CameraMoveType;\r\n    (function (CameraMoveType) {\r\n        CameraMoveType[\"nod\"] = \"nod\";\r\n        CameraMoveType[\"shake\"] = \"shake\";\r\n    })(CameraMoveType = Game3D.CameraMoveType || (Game3D.CameraMoveType = {}));\r\n    function dataInit() {\r\n        Game3D.characteristicsData = Laya.loader.getRes(\"GameData/Game/characteristics.json\")['RECORDS'];\r\n        Game3D.CardData = Laya.loader.getRes(\"GameData/Game/Card.json\")['RECORDS'];\r\n    }\r\n    Game3D.dataInit = dataInit;\r\n    class MainScene extends lwg3D.Scene3D {\r\n        lwgOnAwake() {\r\n            Game3D.Scene3D = this.self;\r\n            Game3D.MainCamera = Game3D.Scene3D.getChildByName('Main Camera');\r\n            Game3D.MyCard = Game3D.Scene3D.getChildByName('MyCard');\r\n            Game3D.OppositeCard = Game3D.Scene3D.getChildByName('OppositeCard');\r\n            Game3D.OppositeHandParent = Game3D.Scene3D.getChildByName('OppositeHandParent');\r\n            Game3D.AllCardTem = Game3D.Scene3D.getChildByName('AllCard');\r\n        }\r\n        lwgEventReg() {\r\n            EventAdmin.reg(EventType.judgeQuestion, this, (question) => {\r\n                let ChaIndex;\r\n                for (let i = 0; i < Game3D.characteristicsData.length; i++) {\r\n                    if (question === Game3D.characteristicsData[i][CharacteristicsProperty.question]) {\r\n                        ChaIndex = Game3D.characteristicsData[i][CharacteristicsProperty.index];\r\n                    }\r\n                }\r\n                let CardArr;\r\n                if (Game3D.whichBout == WhichBoutType.me) {\r\n                    CardArr = Game3D.MyCard;\r\n                }\r\n                else if (WhichBoutType.opposite) {\r\n                    CardArr = Game3D.OppositeCard;\r\n                }\r\n                let haveCardArr = [];\r\n                let nohaveCardArr = [];\r\n                for (let i = 0; i < CardArr.numChildren; i++) {\r\n                    let element = CardArr.getChildAt(i);\r\n                    let have;\r\n                    for (let j = 0; j < element[CardProperty.characteristicsArr].length; j++) {\r\n                        if (ChaIndex === element[CardProperty.characteristicsArr][j]) {\r\n                            haveCardArr.push(element.name);\r\n                            have = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!have) {\r\n                        nohaveCardArr.push(element.name);\r\n                    }\r\n                }\r\n                console.log(haveCardArr);\r\n                console.log(nohaveCardArr);\r\n                console.log(Game3D.oppositeHandCard[0]['name']);\r\n                let matching;\r\n                for (let index = 0; index < haveCardArr.length; index++) {\r\n                    if (haveCardArr[index] == Game3D.oppositeHandCard[0]['name']) {\r\n                        matching = true;\r\n                    }\r\n                }\r\n                if (matching) {\r\n                    console.log('特征正确！');\r\n                    Animation3D.rock(Game3D.MainCamera, new Laya.Vector3(1, 0, 0), 500, this, () => {\r\n                        this.carFallAni(nohaveCardArr);\r\n                    });\r\n                }\r\n                else {\r\n                    console.log('特征错误！');\r\n                    Animation3D.rock(Game3D.MainCamera, new Laya.Vector3(0, 3, 0), 500, this, () => {\r\n                        this.carFallAni(haveCardArr);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        carFallAni(arr) {\r\n            let CardArr;\r\n            if (Game3D.whichBout == WhichBoutType.me) {\r\n                CardArr = Game3D.MyCard;\r\n            }\r\n            else if (WhichBoutType.opposite) {\r\n                CardArr = Game3D.OppositeCard;\r\n            }\r\n            for (let i = 0; i < CardArr.numChildren; i++) {\r\n                for (let j = 0; j < arr.length; j++) {\r\n                    if (arr[j] == CardArr.getChildAt(i).name) {\r\n                        CardArr.getChildAt(i).removeSelf();\r\n                        Game3D.myCardArr.splice(i, 1);\r\n                        i;\r\n                    }\r\n                }\r\n            }\r\n            this.nextRound();\r\n        }\r\n        cameraNodOrShaking(type) {\r\n            if (type === CameraMoveType.nod) {\r\n                Animation3D.rock(Game3D.MainCamera, new Laya.Vector3(3, 0, 0), 500, this, () => {\r\n                    console.log('点头完成');\r\n                });\r\n            }\r\n            else {\r\n                Animation3D.rock(Game3D.MainCamera, new Laya.Vector3(0, 3, 0), 500, this, () => {\r\n                    console.log('摇头完成！');\r\n                });\r\n            }\r\n        }\r\n        nextRound() {\r\n            randomTaskCard(WhichScard.MyCard);\r\n            EventAdmin.notify('nextRound');\r\n        }\r\n        lwgOnEnable() {\r\n            this.opening();\r\n        }\r\n        opening() {\r\n            Game3D.whichBout = WhichBoutType.me;\r\n            if (Game3D.MyCard.numChildren > 0) {\r\n                Game3D.MyCard.removeChildren(0, Game3D.MyCard.numChildren - 1);\r\n            }\r\n            if (Game3D.OppositeCard.numChildren > 0) {\r\n                Game3D.OppositeCard.removeChildren(0, Game3D.OppositeCard.numChildren - 1);\r\n            }\r\n            randomlyTakeOut(WhichScard.MyCard);\r\n            randomTaskCard(WhichScard.MyCard);\r\n        }\r\n    }\r\n    Game3D.MainScene = MainScene;\r\n})(Game3D || (Game3D = {}));\r\nexport default Game3D;\r\n",
  "references": [
    "D:/Game/project/Who/Project/Who/src/script/Frame/lwg3D.ts",
    "D:/Game/project/Who/Project/Who/src/script/Frame/lwg.ts"
  ]
}
