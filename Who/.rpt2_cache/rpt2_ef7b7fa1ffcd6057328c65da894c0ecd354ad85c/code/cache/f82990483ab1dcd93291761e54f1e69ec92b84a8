{
  "code": "import { lwg, EventAdmin, Admin, Animation3D } from \"../Lwg_Template/lwg\";\r\nimport GameMain3D_Razor from \"./GameMain3D_Razor\";\r\nimport GameMain3D_Floor from \"./GameMain3D_Floor\";\r\nimport { GEnum, GSene3D } from \"../Lwg_Template/Global\";\r\nimport GameMain3D_knife from \"./GameMain3D_knife\";\r\nexport default class GameMain3D extends lwg.Admin.Scene3D {\r\n    constructor() {\r\n        super();\r\n        this.moveSpeed = 1000;\r\n    }\r\n    lwgOnAwake() {\r\n        GSene3D.GameMain3D = this.self;\r\n        GSene3D.MainCamera = this.MainCamera;\r\n        GSene3D.PhotoCameraMark = this.self.getChildByName('PhotoCameraMark');\r\n        GSene3D.LevelTem = this.self.getChildByName('Level_001');\r\n        GSene3D.LevelFpos.x = GSene3D.LevelTem.transform.position.x;\r\n        GSene3D.LevelFpos.y = GSene3D.LevelTem.transform.position.y;\r\n        GSene3D.LevelFpos.z = GSene3D.LevelTem.transform.position.z;\r\n        GSene3D.Landmark_Side = this.self.getChildByName('Landmark_Side');\r\n        GSene3D.Landmark_Right = this.self.getChildByName('Landmark_Right');\r\n        GSene3D.Landmark_Middle = this.self.getChildByName('Landmark_Middle');\r\n        GSene3D.Landmark_Left = this.self.getChildByName('Landmark_Left');\r\n        GSene3D.Landmark_UpRight = this.self.getChildByName('Landmark_UpRight');\r\n        GSene3D.Landmark_UpLeft = this.self.getChildByName('Landmark_UpLeft');\r\n        GSene3D.LeftSignknife = this.self.getChildByName('LeftSignknife');\r\n        GSene3D.MiddleSignknife = this.self.getChildByName('MiddleSignknife');\r\n        GSene3D.RightSignknife = this.self.getChildByName('RightSignknife');\r\n        GSene3D.UpRightKnife = this.self.getChildByName('UpRightKnife');\r\n        GSene3D.UpLeftKnife = this.self.getChildByName('UpLeftKnife');\r\n        GSene3D.Floor = this.self.getChildByName('Floor');\r\n        GSene3D.Razor = this.self.getChildByName('Razor');\r\n        GSene3D.razorFPos.x = GSene3D.Razor.transform.position.x;\r\n        GSene3D.razorFPos.y = GSene3D.Razor.transform.position.y;\r\n        GSene3D.razorFPos.z = GSene3D.Razor.transform.position.z;\r\n        GSene3D.knifeParent = this.self.getChildByName('knifeParent');\r\n        GSene3D.knife = GSene3D.knifeParent.getChildByName('knife');\r\n        this.createLevel();\r\n    }\r\n    createLevel() {\r\n        GSene3D.Level = GSene3D.LevelTem.clone();\r\n        this.self.addChild(GSene3D.Level);\r\n        GSene3D.LevelTem.removeSelf();\r\n    }\r\n    lwgNodeDec() {\r\n        GSene3D.Head = GSene3D.Level.getChildByName('Head');\r\n        GSene3D.Headcollision = GSene3D.Head.getChildByName('Headcollision');\r\n        GSene3D.HingeMiddle = GSene3D.Headcollision.getChildByName('HingeMiddle');\r\n        GSene3D.HingeUp = GSene3D.Headcollision.getChildByName('HingeUp');\r\n        GSene3D.HingeDown = GSene3D.Headcollision.getChildByName('HingeDown');\r\n        let TouchHeadRig = GSene3D.Headcollision.getComponent(Laya.Rigidbody3D);\r\n        TouchHeadRig.restitution = 0;\r\n        GSene3D.HairParent = GSene3D.Head.getChildByName('HairParent');\r\n        GSene3D.LeftBeard = GSene3D.Head.getChildByName('LeftBeard');\r\n        GSene3D.RightBeard = GSene3D.Head.getChildByName('RightBeard');\r\n        GSene3D.MiddleBeard = GSene3D.Head.getChildByName('MiddleBeard');\r\n        GSene3D.UpRightBeard = GSene3D.Head.getChildByName('UpRightBeard');\r\n        GSene3D.UpLeftBeard = GSene3D.Head.getChildByName('UpLeftBeard');\r\n        GSene3D.TouchScreen = this.self.getChildByName('TouchScreen');\r\n        GSene3D.HeadSimulate = GSene3D.Head.getChildByName('HeadSimulate');\r\n    }\r\n    lwgOnEnable() {\r\n        GSene3D.Floor.addComponent(GameMain3D_Floor);\r\n        GSene3D.Razor.addComponent(GameMain3D_Razor);\r\n        GSene3D.knife.addComponent(GameMain3D_knife);\r\n    }\r\n    lwgEventReg() {\r\n        EventAdmin.reg(EventAdmin.EventType.scene3DRefresh, this, () => {\r\n            this.refreshScene();\r\n        });\r\n        EventAdmin.reg(GEnum.EventType.cameraMove, this, (direction) => {\r\n            this.cameraMove(direction);\r\n        });\r\n        EventAdmin.reg(EventAdmin.EventType.scene3DResurgence, this, (direction) => {\r\n            GSene3D.Razor.transform.position = new Laya.Vector3(GSene3D.razorFPos.x, GSene3D.razorFPos.y, GSene3D.razorFPos.z);\r\n        });\r\n    }\r\n    ;\r\n    refreshScene() {\r\n        GSene3D.Level.removeSelf();\r\n        this.createLevel();\r\n        this.lwgNodeDec();\r\n        GSene3D.Razor.transform.position = new Laya.Vector3(GSene3D.razorFPos.x, GSene3D.razorFPos.y, GSene3D.razorFPos.z);\r\n    }\r\n    cameraMove(direction) {\r\n        switch (direction) {\r\n            case GEnum.TaskType.sideHair:\r\n                Animation3D.MoveTo(GSene3D.MainCamera, GSene3D.Landmark_Side.transform.position, this.moveSpeed, this, null, () => {\r\n                    Admin._gameStart = true;\r\n                });\r\n                Animation3D.RotateTo(GSene3D.MainCamera, GSene3D.Landmark_Side.transform.localRotationEuler, this.moveSpeed, this);\r\n                Animation3D.RotateTo(GSene3D.TouchScreen, GSene3D.Landmark_Side.transform.localRotationEuler, this.moveSpeed, this);\r\n                break;\r\n            case GEnum.TaskType.rightBeard:\r\n                GSene3D.knife.transform.position = GSene3D.RightSignknife.transform.position;\r\n                GSene3D.HingeMiddle.transform.position = new Laya.Vector3(GSene3D.HingeMiddle.transform.position.x, GSene3D.knife.transform.position.y, GSene3D.HingeMiddle.transform.position.z);\r\n                GSene3D.knife.transform.lookAt(GSene3D.HingeMiddle.transform.position, new Laya.Vector3(0, 1, 0));\r\n                Animation3D.MoveTo(GSene3D.MainCamera, GSene3D.Landmark_Right.transform.position, this.moveSpeed, this, null, () => {\r\n                    Admin._gameStart = true;\r\n                });\r\n                Animation3D.RotateTo(GSene3D.MainCamera, GSene3D.Landmark_Right.transform.localRotationEuler, this.moveSpeed, this);\r\n                Animation3D.RotateTo(GSene3D.TouchScreen, GSene3D.Landmark_Right.transform.localRotationEuler, this.moveSpeed, this);\r\n                break;\r\n            case GEnum.TaskType.leftBeard:\r\n                GSene3D.knife.transform.position = GSene3D.LeftSignknife.transform.position;\r\n                GSene3D.HingeMiddle.transform.position = new Laya.Vector3(GSene3D.HingeMiddle.transform.position.x, GSene3D.knife.transform.position.y, GSene3D.HingeMiddle.transform.position.z);\r\n                GSene3D.knife.transform.lookAt(GSene3D.HingeMiddle.transform.position, new Laya.Vector3(0, 1, 0));\r\n                Animation3D.MoveTo(GSene3D.MainCamera, GSene3D.Landmark_Left.transform.position, this.moveSpeed, this, null, () => {\r\n                    Admin._gameStart = true;\r\n                });\r\n                Animation3D.RotateTo(GSene3D.MainCamera, GSene3D.Landmark_Left.transform.localRotationEuler, this.moveSpeed, this);\r\n                Animation3D.RotateTo(GSene3D.TouchScreen, GSene3D.Landmark_Left.transform.localRotationEuler, this.moveSpeed, this);\r\n                break;\r\n            case GEnum.TaskType.middleBeard:\r\n                GSene3D.knife.transform.position = GSene3D.MiddleSignknife.transform.position;\r\n                GSene3D.HingeMiddle.transform.position = new Laya.Vector3(GSene3D.HingeMiddle.transform.position.x, GSene3D.knife.transform.position.y, GSene3D.HingeMiddle.transform.position.z);\r\n                GSene3D.knife.transform.lookAt(GSene3D.HingeMiddle.transform.position, new Laya.Vector3(0, 1, 0));\r\n                Animation3D.MoveTo(GSene3D.MainCamera, GSene3D.Landmark_Middle.transform.position, this.moveSpeed, this, null, () => {\r\n                    Admin._gameStart = true;\r\n                });\r\n                Animation3D.RotateTo(GSene3D.MainCamera, GSene3D.Landmark_Middle.transform.localRotationEuler, this.moveSpeed, this);\r\n                Animation3D.RotateTo(GSene3D.TouchScreen, GSene3D.Landmark_Middle.transform.localRotationEuler, this.moveSpeed, this);\r\n                break;\r\n            case GEnum.TaskType.upLeftBeard:\r\n                GSene3D.knife.transform.position = GSene3D.UpLeftKnife.transform.position;\r\n                GSene3D.knife.transform.lookAt(GSene3D.HingeUp.transform.position, new Laya.Vector3(0, 1, 0));\r\n                let Model2 = GSene3D.knife.getChildAt(0);\r\n                Model2.transform.localRotationEulerX = -180;\r\n                Animation3D.MoveTo(GSene3D.MainCamera, GSene3D.Landmark_UpLeft.transform.position, this.moveSpeed, null, () => {\r\n                    Admin._gameStart = true;\r\n                });\r\n                Animation3D.RotateTo(GSene3D.MainCamera, GSene3D.Landmark_UpLeft.transform.localRotationEuler, this.moveSpeed, this);\r\n                Animation3D.RotateTo(GSene3D.TouchScreen, GSene3D.Landmark_UpLeft.transform.localRotationEuler, this.moveSpeed, this);\r\n                break;\r\n            case GEnum.TaskType.upRightBeard:\r\n                GSene3D.knife.transform.position = GSene3D.UpRightKnife.transform.position;\r\n                GSene3D.knife.transform.lookAt(GSene3D.HingeUp.transform.position, new Laya.Vector3(0, 1, 0));\r\n                let Model1 = GSene3D.knife.getChildAt(0);\r\n                Model1.transform.localRotationEulerX = -180;\r\n                Animation3D.MoveTo(GSene3D.MainCamera, GSene3D.Landmark_UpRight.transform.position, this.moveSpeed, this, null, () => {\r\n                    Admin._gameStart = true;\r\n                });\r\n                Animation3D.RotateTo(GSene3D.MainCamera, GSene3D.Landmark_UpRight.transform.localRotationEuler, this.moveSpeed, this);\r\n                Animation3D.RotateTo(GSene3D.TouchScreen, GSene3D.Landmark_UpRight.transform.localRotationEuler, this.moveSpeed, this);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    lwgOnUpDate() {\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/CutHair/Project/CutHair/src/script/Lwg_Template/lwg.ts",
    "D:/Game/project/CutHair/Project/CutHair/src/script/Game/GameMain3D_Razor.ts",
    "D:/Game/project/CutHair/Project/CutHair/src/script/Game/GameMain3D_Moustache.ts",
    "D:/Game/project/CutHair/Project/CutHair/src/script/Game/GameMain3D_Floor.ts",
    "D:/Game/project/CutHair/Project/CutHair/src/script/Lwg_Template/Global.ts",
    "D:/Game/project/CutHair/Project/CutHair/src/script/Game/GameMain3D_knife.ts"
  ]
}
