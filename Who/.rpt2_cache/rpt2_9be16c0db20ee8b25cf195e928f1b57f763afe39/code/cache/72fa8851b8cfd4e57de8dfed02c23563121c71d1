{
  "code": "import { lwg3D } from \"../Frame/lwg3D\";\r\nimport { Tools } from \"../Frame/lwg\";\r\nexport var Game3D;\r\n(function (Game3D) {\r\n    Game3D.myCardArr = [];\r\n    Game3D.oppositeCardArr = [];\r\n    Game3D.questionArr = [];\r\n    function randomlyTakeOut(type) {\r\n        let index16 = Tools.arrayRandomGetOut(Game3D.personData, 16);\r\n        let startZ = 0.3;\r\n        for (let index = 0; index < index16.length; index++) {\r\n            const element = Game3D.AllCardTem.getChildByName(index16[index]['name']);\r\n            if (type === WhichScard.MyCard) {\r\n                Game3D.myCardArr.push(index16[index]);\r\n                Game3D.MyCard.addChild(element);\r\n                if (index % 4 == 0) {\r\n                    startZ -= 0.5;\r\n                }\r\n                element.transform.localPosition = new Laya.Vector3(0.5 * (index % 4) - 0.5, 0, startZ);\r\n                element.transform.localRotationEulerX = 10;\r\n            }\r\n            else if (type === WhichScard.OppositeCard) {\r\n                Game3D.oppositeCardArr.push(index16[index]);\r\n                Game3D.OppositeCard.addChild(element);\r\n                if (index % 4 == 0) {\r\n                    startZ += 0.5;\r\n                }\r\n                element.transform.localPosition = new Laya.Vector3(0.5 * (index % 4) - 0.5, 0, startZ);\r\n                element.transform.localRotationEulerX = -10;\r\n            }\r\n        }\r\n    }\r\n    Game3D.randomlyTakeOut = randomlyTakeOut;\r\n    function randomTaskCard(type) {\r\n        let contrastArr = [];\r\n        for (let index = 0; index < Game3D.characteristicsData.length; index++) {\r\n            let index1 = Game3D.characteristicsData[index][characteristicsProperty.index];\r\n            contrastArr.push({\r\n                index: index1,\r\n                value: 0\r\n            });\r\n        }\r\n        let whichArr;\r\n        if (type === WhichScard.MyCard) {\r\n            whichArr = Game3D.myCardArr;\r\n        }\r\n        else {\r\n            whichArr = Game3D.oppositeCardArr;\r\n        }\r\n        for (let i = 0; i < Game3D.myCardArr.length; i++) {\r\n            const characteristicsArr = Game3D.myCardArr[i][personProperty.characteristicsArr];\r\n            for (let j = 0; j < characteristicsArr.length; j++) {\r\n                const characteristicsIndex = characteristicsArr[j];\r\n                contrastArr[characteristicsIndex - 1]['value']++;\r\n            }\r\n        }\r\n        for (let index = 0; index < contrastArr.length; index++) {\r\n            const element = contrastArr[index];\r\n            if (element['value'] === 0) {\r\n                contrastArr.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n        Tools.objArrPropertySort(contrastArr, 'value');\r\n        Tools.objArrUnique(contrastArr, 'value');\r\n        var fetch = () => {\r\n            if (contrastArr.length === 4) {\r\n            }\r\n            else {\r\n            }\r\n        };\r\n        if (whichArr.length == 1) {\r\n        }\r\n        else if (whichArr.length == 2) {\r\n        }\r\n        else if (whichArr.length == 3) {\r\n        }\r\n        else if (whichArr.length >= 4) {\r\n            fetch();\r\n        }\r\n    }\r\n    Game3D.randomTaskCard = randomTaskCard;\r\n    let WhichScard;\r\n    (function (WhichScard) {\r\n        WhichScard[\"OppositeCard\"] = \"OppositeCard\";\r\n        WhichScard[\"MyCard\"] = \"MyCard\";\r\n    })(WhichScard = Game3D.WhichScard || (Game3D.WhichScard = {}));\r\n    Game3D.characteristicsData = [];\r\n    let characteristicsProperty;\r\n    (function (characteristicsProperty) {\r\n        characteristicsProperty[\"index\"] = \"index\";\r\n        characteristicsProperty[\"describe\"] = \"describe\";\r\n        characteristicsProperty[\"question\"] = \"question\";\r\n    })(characteristicsProperty = Game3D.characteristicsProperty || (Game3D.characteristicsProperty = {}));\r\n    Game3D.personData = [];\r\n    let personProperty;\r\n    (function (personProperty) {\r\n        personProperty[\"characteristicsArr\"] = \"characteristicsArr\";\r\n        personProperty[\"ChName\"] = \"ChName\";\r\n        personProperty[\"name\"] = \"name\";\r\n    })(personProperty = Game3D.personProperty || (Game3D.personProperty = {}));\r\n    function dataInit() {\r\n        Game3D.characteristicsData = Laya.loader.getRes(\"GameData/Game/characteristics.json\")['RECORDS'];\r\n        Game3D.personData = Laya.loader.getRes(\"GameData/Game/Person.json\")['RECORDS'];\r\n    }\r\n    Game3D.dataInit = dataInit;\r\n    class MainScene extends lwg3D.Scene3D {\r\n        lwgOnAwake() {\r\n            Game3D.Scene3D = this.self;\r\n            Game3D.MainCamera = Game3D.Scene3D.getChildByName('Main Camera');\r\n            Game3D.MyCard = Game3D.Scene3D.getChildByName('MyCard');\r\n            Game3D.OppositeCard = Game3D.Scene3D.getChildByName('OppositeCard');\r\n            Game3D.AllCardTem = Game3D.Scene3D.getChildByName('AllCard');\r\n        }\r\n        lwgOnEnable() {\r\n            randomlyTakeOut(WhichScard.MyCard);\r\n            randomlyTakeOut(WhichScard.OppositeCard);\r\n            randomTaskCard(WhichScard.MyCard);\r\n        }\r\n    }\r\n    Game3D.MainScene = MainScene;\r\n})(Game3D || (Game3D = {}));\r\nexport default Game3D;\r\n",
  "references": [
    "D:/Game/project/Who/Project/Who/src/script/Frame/lwg3D.ts",
    "D:/Game/project/Who/Project/Who/src/script/Frame/lwg.ts"
  ]
}
