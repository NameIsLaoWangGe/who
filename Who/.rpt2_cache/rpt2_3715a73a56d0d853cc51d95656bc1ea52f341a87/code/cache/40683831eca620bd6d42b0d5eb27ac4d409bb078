{
  "code": "import { Admin, Click, EventAdmin, Tools, Animation2D, Gold } from \"../Frame/lwg\";\r\nimport { Game3D } from \"./Game3D\";\r\nexport default class GameScene extends Admin.Scene {\r\n    lwgOnAwake() {\r\n        Gold.goldAppear();\r\n    }\r\n    lwgNodeDec() {\r\n        this.OptionParent = this.self['OptionParent'];\r\n    }\r\n    lwgEventReg() {\r\n        EventAdmin.reg(Game3D.EventType.oppositeAnswer, this, (questionAndYesOrNo, cardName) => {\r\n            Admin._clickLock.switch = true;\r\n            Animation2D.fadeOut(this.OptionParent, this.OptionParent.alpha, 0, 300, 0, () => {\r\n                Tools.node_RemoveAllChildren(this.OptionParent);\r\n                this.createOppositeQuestion(questionAndYesOrNo, cardName);\r\n                Admin._clickLock.switch = false;\r\n            });\r\n        });\r\n        EventAdmin.reg(Game3D.EventType.meAnswer, this, (questionArr) => {\r\n            Admin._clickLock.switch = true;\r\n            this.createQuestion(questionArr);\r\n            Animation2D.fadeOut(this.OptionParent, 0, 1, 300, 0, () => {\r\n                Admin._clickLock.switch = false;\r\n            });\r\n        });\r\n        EventAdmin.reg(EventAdmin.EventType.victory, this, () => {\r\n            Admin._gameSwitch = false;\r\n            Admin._openScene(Admin.SceneName.UIVictory, this.self);\r\n        });\r\n        EventAdmin.reg(EventAdmin.EventType.defeated, this, () => {\r\n            Admin._openScene(Admin.SceneName.UIDefeated, this.self);\r\n        });\r\n        EventAdmin.reg(Game3D.EventType.hideOption, this, () => {\r\n            Animation2D.fadeOut(this.OptionParent, 1, 0.5, 500, 100, () => { });\r\n        });\r\n    }\r\n    lwgAdaptive() {\r\n        this.self['SceneContent'].y = Laya.stage.height * 0.792;\r\n    }\r\n    lwgOnEnable() {\r\n        EventAdmin.notify(Game3D.EventType.opening);\r\n    }\r\n    createQuestion(questionArr) {\r\n        if (questionArr.length < 3) {\r\n            this.createOption(this.self['OptionParent'], this.self['OptionParent'].width / 2, this.self['OptionParent'].height / 2, questionArr[0], false);\r\n        }\r\n        else {\r\n            for (let index = 0; index < questionArr.length; index++) {\r\n                let x, y;\r\n                switch (index) {\r\n                    case 0:\r\n                        x = this.self['OptionParent'].width * 0.25;\r\n                        y = this.self['OptionParent'].height * 0.25;\r\n                        break;\r\n                    case 1:\r\n                        x = this.self['OptionParent'].width * 0.75;\r\n                        y = this.self['OptionParent'].height * 0.25;\r\n                        break;\r\n                    case 2:\r\n                        x = this.self['OptionParent'].width * 0.25;\r\n                        y = this.self['OptionParent'].height * 0.75;\r\n                        break;\r\n                    case 3:\r\n                        x = this.self['OptionParent'].width * 0.75;\r\n                        y = this.self['OptionParent'].height * 0.75;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.createOption(this.self['OptionParent'], x, y, questionArr[index], true);\r\n            }\r\n        }\r\n    }\r\n    createOption(parent, x, y, question, click) {\r\n        let Option = Laya.Pool.getItemByCreateFun('Option', this.Option.create, this.Option);\r\n        let Content = Option.getChildByName('Content');\r\n        Content.text = question;\r\n        parent.addChild(Option);\r\n        Option.pos(x, y);\r\n        if (Content.text.length >= 10) {\r\n            Content.fontSize = 22;\r\n        }\r\n        else if (Content.text.length >= 8 && Content.text.length < 10) {\r\n            Content.fontSize = 25;\r\n        }\r\n        else if (Content.text.length >= 6 && Content.text.length < 8) {\r\n            Content.fontSize = 28;\r\n        }\r\n        else if (Content.text.length < 6) {\r\n            Content.fontSize = 30;\r\n        }\r\n        if (click) {\r\n            Click.on(Click.Type.largen, Option, this, null, null, () => {\r\n                EventAdmin.notify(Game3D.EventType.judgeMeAnswer, question);\r\n            });\r\n        }\r\n        return Option;\r\n    }\r\n    lwgBtnClick() {\r\n    }\r\n    createOppositeQuestion(questionAndYesOrNo, cardName) {\r\n        let GuessCard = Laya.Pool.getItemByCreateFun('GuessCard', this.GuessCard.create, this.GuessCard);\r\n        this.self.addChild(GuessCard);\r\n        GuessCard.pos(0, 0);\r\n        let QuestionBaord = GuessCard.getChildByName('QuestionBaord');\r\n        let Question = QuestionBaord.getChildByName('Question');\r\n        Question.text = questionAndYesOrNo[0];\r\n        Animation2D.bombs_Appear(QuestionBaord, 0, 1, 1.1, 0, 100, 50, 600);\r\n        let Card = GuessCard.getChildByName('Card');\r\n        let CardName = Card.getChildByName('CardName');\r\n        CardName.text = cardName;\r\n        Card.y = Laya.stage.height * 0.483;\r\n        Animation2D.cardRotateX_TowFace(Card, 500, () => {\r\n        });\r\n        Animation2D.move_Simple(Card, -800, Card.y, Laya.stage.width / 2, Card.y, 800);\r\n        let BtnYes = GuessCard.getChildByName('BtnYes');\r\n        Click.on(Click.Type.largen, BtnYes, this, null, null, () => {\r\n            if (questionAndYesOrNo[1]) {\r\n                GuessCard.removeSelf();\r\n                EventAdmin.notify(Game3D.EventType.judgeOppositeAnswer, [questionAndYesOrNo[0], true]);\r\n            }\r\n            else {\r\n                console.log('不可胡乱回答！');\r\n            }\r\n        });\r\n        let BtnNo = GuessCard.getChildByName('BtnNo');\r\n        Click.on(Click.Type.largen, BtnNo, this, null, null, () => {\r\n            if (!questionAndYesOrNo[1]) {\r\n                GuessCard.removeSelf();\r\n                EventAdmin.notify(Game3D.EventType.judgeOppositeAnswer, [questionAndYesOrNo[0], false]);\r\n            }\r\n            else {\r\n                console.log('不可胡乱回答！');\r\n            }\r\n        });\r\n        BtnYes.y = Laya.stage.height * 0.874;\r\n        BtnNo.y = Laya.stage.height * 0.874;\r\n        Animation2D.blink_FadeOut(BtnNo, 0, 1, 100, 600);\r\n        Animation2D.blink_FadeOut(BtnYes, 0, 1, 100, 600);\r\n    }\r\n    onStageMouseDown(e) {\r\n        let MainCamera = Game3D.MainCamera.getChildAt(0);\r\n        let hitResult = Tools.d3_rayScanning(MainCamera, Game3D.Scene3D, new Laya.Vector2(e.stageX, e.stageY))[0];\r\n        let sprite3D;\r\n        if (hitResult) {\r\n            sprite3D = hitResult.collider.owner;\r\n            EventAdmin.notify(Game3D.EventType.judgeMeClickCard, sprite3D);\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/Who/Project/Who/src/script/Frame/lwg.ts",
    "D:/Game/project/Who/Project/Who/src/script/Game/Game3D.ts"
  ]
}
