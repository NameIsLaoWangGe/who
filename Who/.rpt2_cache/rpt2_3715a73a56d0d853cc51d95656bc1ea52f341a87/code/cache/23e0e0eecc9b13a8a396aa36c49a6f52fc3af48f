{
  "code": "import ADManager, { TaT } from \"../../TJ/Admanager\";\r\nexport var lwg;\r\n(function (lwg) {\r\n    let Pause;\r\n    (function (Pause) {\r\n        function _createBtnPause(parent) {\r\n            let sp;\r\n            Laya.loader.load('prefab/BtnPause.json', Laya.Handler.create(this, function (prefab) {\r\n                let _prefab = new Laya.Prefab();\r\n                _prefab.json = prefab;\r\n                sp = Laya.Pool.getItemByCreateFun('prefab', _prefab.create, _prefab);\r\n                parent.addChild(sp);\r\n                sp.pos(645, 167);\r\n                sp.zOrder = 0;\r\n                Pause.BtnPauseNode = sp;\r\n                Pause.BtnPauseNode.name = 'BtnPauseNode';\r\n                Click.on(Click.Type.largen, sp, null, null, null, btnPauseUp, null);\r\n            }));\r\n        }\r\n        Pause._createBtnPause = _createBtnPause;\r\n        function btnPauseUp(event) {\r\n            event.stopPropagation();\r\n            event.currentTarget.scale(1, 1);\r\n            lwg.Admin._openScene('UIPause', null, null, null);\r\n        }\r\n        Pause.btnPauseUp = btnPauseUp;\r\n    })(Pause = lwg.Pause || (lwg.Pause = {}));\r\n    let Elect;\r\n    (function (Elect) {\r\n        function _createP201_01(parent) {\r\n            let sp;\r\n            Laya.loader.load('prefab/P201.json', Laya.Handler.create(this, function (prefab) {\r\n                let _prefab = new Laya.Prefab();\r\n                _prefab.json = prefab;\r\n                sp = Laya.Pool.getItemByCreateFun('P201', _prefab.create, _prefab);\r\n                parent.addChild(sp);\r\n                sp.pos(80, 290);\r\n                sp.zOrder = 65;\r\n            }));\r\n        }\r\n        Elect._createP201_01 = _createP201_01;\r\n    })(Elect = lwg.Elect || (lwg.Elect = {}));\r\n    let Dialog;\r\n    (function (Dialog) {\r\n        let HintContent;\r\n        (function (HintContent) {\r\n            HintContent[HintContent[\"\\u91D1\\u5E01\\u4E0D\\u591F\\u4E86\\uFF01\"] = 0] = \"\\u91D1\\u5E01\\u4E0D\\u591F\\u4E86\\uFF01\";\r\n            HintContent[HintContent[\"\\u6CA1\\u6709\\u53EF\\u4EE5\\u8D2D\\u4E70\\u7684\\u76AE\\u80A4\\u4E86\\uFF01\"] = 1] = \"\\u6CA1\\u6709\\u53EF\\u4EE5\\u8D2D\\u4E70\\u7684\\u76AE\\u80A4\\u4E86\\uFF01\";\r\n            HintContent[HintContent[\"\\u6682\\u65F6\\u6CA1\\u6709\\u5E7F\\u544A\\uFF0C\\u8FC7\\u4F1A\\u513F\\u518D\\u8BD5\\u8BD5\\u5427\\uFF01\"] = 2] = \"\\u6682\\u65F6\\u6CA1\\u6709\\u5E7F\\u544A\\uFF0C\\u8FC7\\u4F1A\\u513F\\u518D\\u8BD5\\u8BD5\\u5427\\uFF01\";\r\n            HintContent[HintContent[\"\\u6682\\u65E0\\u76AE\\u80A4!\"] = 3] = \"\\u6682\\u65E0\\u76AE\\u80A4!\";\r\n            HintContent[HintContent[\"\\u6682\\u65E0\\u5206\\u4EAB!\"] = 4] = \"\\u6682\\u65E0\\u5206\\u4EAB!\";\r\n            HintContent[HintContent[\"\\u6682\\u65E0\\u63D0\\u793A\\u673A\\u4F1A!\"] = 5] = \"\\u6682\\u65E0\\u63D0\\u793A\\u673A\\u4F1A!\";\r\n            HintContent[HintContent[\"\\u89C2\\u770B\\u5B8C\\u6574\\u5E7F\\u544A\\u624D\\u80FD\\u83B7\\u53D6\\u5956\\u52B1\\u54E6\\uFF01\"] = 6] = \"\\u89C2\\u770B\\u5B8C\\u6574\\u5E7F\\u544A\\u624D\\u80FD\\u83B7\\u53D6\\u5956\\u52B1\\u54E6\\uFF01\";\r\n            HintContent[HintContent[\"\\u901A\\u5173\\u4E0A\\u4E00\\u5173\\u624D\\u80FD\\u89E3\\u9501\\u672C\\u5173\\uFF01\"] = 7] = \"\\u901A\\u5173\\u4E0A\\u4E00\\u5173\\u624D\\u80FD\\u89E3\\u9501\\u672C\\u5173\\uFF01\";\r\n            HintContent[HintContent[\"\\u5206\\u4EAB\\u6210\\u529F\\u540E\\u624D\\u80FD\\u83B7\\u53D6\\u5956\\u52B1\\uFF01\"] = 8] = \"\\u5206\\u4EAB\\u6210\\u529F\\u540E\\u624D\\u80FD\\u83B7\\u53D6\\u5956\\u52B1\\uFF01\";\r\n            HintContent[HintContent[\"\\u5206\\u4EAB\\u6210\\u529F!\"] = 9] = \"\\u5206\\u4EAB\\u6210\\u529F!\";\r\n            HintContent[HintContent[\"\\u6682\\u65E0\\u89C6\\u9891\\uFF0C\\u73A9\\u4E00\\u5C40\\u6E38\\u620F\\u4E4B\\u540E\\u5206\\u4EAB\\uFF01\"] = 10] = \"\\u6682\\u65E0\\u89C6\\u9891\\uFF0C\\u73A9\\u4E00\\u5C40\\u6E38\\u620F\\u4E4B\\u540E\\u5206\\u4EAB\\uFF01\";\r\n            HintContent[HintContent[\"\\u6D88\\u80172\\u70B9\\u4F53\\u529B\\uFF01\"] = 11] = \"\\u6D88\\u80172\\u70B9\\u4F53\\u529B\\uFF01\";\r\n            HintContent[HintContent[\"\\u4ECA\\u65E5\\u4F53\\u529B\\u798F\\u5229\\u5DF2\\u9886\\u53D6\\uFF01\"] = 12] = \"\\u4ECA\\u65E5\\u4F53\\u529B\\u798F\\u5229\\u5DF2\\u9886\\u53D6\\uFF01\";\r\n            HintContent[HintContent[\"\\u5206\\u4EAB\\u6210\\u529F\\uFF0C\\u83B7\\u5F97125\\u91D1\\u5E01\\uFF01\"] = 13] = \"\\u5206\\u4EAB\\u6210\\u529F\\uFF0C\\u83B7\\u5F97125\\u91D1\\u5E01\\uFF01\";\r\n            HintContent[HintContent[\"\\u5206\\u4EAB\\u6210\\u529F\\uFF0C\\u83B7\\u5F9750\\u91D1\\u5E01\\uFF01\"] = 14] = \"\\u5206\\u4EAB\\u6210\\u529F\\uFF0C\\u83B7\\u5F9750\\u91D1\\u5E01\\uFF01\";\r\n            HintContent[HintContent[\"\\u9650\\u5B9A\\u76AE\\u80A4\\u5DF2\\u7ECF\\u83B7\\u5F97\\uFF0C\\u8BF7\\u524D\\u5F80\\u76AE\\u80A4\\u754C\\u9762\\u67E5\\u770B\\u3002\"] = 15] = \"\\u9650\\u5B9A\\u76AE\\u80A4\\u5DF2\\u7ECF\\u83B7\\u5F97\\uFF0C\\u8BF7\\u524D\\u5F80\\u76AE\\u80A4\\u754C\\u9762\\u67E5\\u770B\\u3002\";\r\n            HintContent[HintContent[\"\\u5206\\u4EAB\\u5931\\u8D25\\uFF01\"] = 16] = \"\\u5206\\u4EAB\\u5931\\u8D25\\uFF01\";\r\n            HintContent[HintContent[\"\\u5151\\u6362\\u7801\\u9519\\u8BEF\\uFF01\"] = 17] = \"\\u5151\\u6362\\u7801\\u9519\\u8BEF\\uFF01\";\r\n            HintContent[HintContent[\"\\u5C1A\\u672A\\u83B7\\u5F97\\u8BE5\\u5546\\u54C1!\"] = 18] = \"\\u5C1A\\u672A\\u83B7\\u5F97\\u8BE5\\u5546\\u54C1!\";\r\n            HintContent[HintContent[\"\\u606D\\u559C\\u83B7\\u5F97\\u65B0\\u76AE\\u80A4!\"] = 19] = \"\\u606D\\u559C\\u83B7\\u5F97\\u65B0\\u76AE\\u80A4!\";\r\n            HintContent[HintContent[\"\\u8BF7\\u524D\\u5F80\\u76AE\\u80A4\\u9650\\u5B9A\\u754C\\u9762\\u83B7\\u53D6!\"] = 20] = \"\\u8BF7\\u524D\\u5F80\\u76AE\\u80A4\\u9650\\u5B9A\\u754C\\u9762\\u83B7\\u53D6!\";\r\n            HintContent[HintContent[\"\\u901A\\u8FC7\\u76F8\\u5E94\\u7684\\u5173\\u5361\\u6570\\u8FBE\\u5230\\u5C31\\u53EF\\u4EE5\\u5F97\\u5230\\u4E86!\"] = 21] = \"\\u901A\\u8FC7\\u76F8\\u5E94\\u7684\\u5173\\u5361\\u6570\\u8FBE\\u5230\\u5C31\\u53EF\\u4EE5\\u5F97\\u5230\\u4E86!\";\r\n            HintContent[HintContent[\"\\u70B9\\u51FB\\u91D1\\u5E01\\u62BD\\u5956\\u6309\\u94AE\\u8D2D\\u4E70!\"] = 22] = \"\\u70B9\\u51FB\\u91D1\\u5E01\\u62BD\\u5956\\u6309\\u94AE\\u8D2D\\u4E70!\";\r\n            HintContent[HintContent[\"\\u6CA1\\u6709\\u9886\\u53D6\\u6B21\\u6570\\u4E86\\uFF01\"] = 23] = \"\\u6CA1\\u6709\\u9886\\u53D6\\u6B21\\u6570\\u4E86\\uFF01\";\r\n            HintContent[HintContent[\"\\u589E\\u52A0\\u4E09\\u6B21\\u5F00\\u542F\\u5B9D\\u7BB1\\u6B21\\u6570\\uFF01\"] = 24] = \"\\u589E\\u52A0\\u4E09\\u6B21\\u5F00\\u542F\\u5B9D\\u7BB1\\u6B21\\u6570\\uFF01\";\r\n            HintContent[HintContent[\"\\u89C2\\u770B\\u5E7F\\u544A\\u53EF\\u4EE5\\u83B7\\u5F97\\u4E09\\u6B21\\u5F00\\u5B9D\\u7BB1\\u6B21\\u6570\\uFF01\"] = 25] = \"\\u89C2\\u770B\\u5E7F\\u544A\\u53EF\\u4EE5\\u83B7\\u5F97\\u4E09\\u6B21\\u5F00\\u5B9D\\u7BB1\\u6B21\\u6570\\uFF01\";\r\n            HintContent[HintContent[\"\\u6CA1\\u6709\\u5B9D\\u7BB1\\u9886\\u53EF\\u4EE5\\u9886\\u4E86\\uFF01\"] = 26] = \"\\u6CA1\\u6709\\u5B9D\\u7BB1\\u9886\\u53EF\\u4EE5\\u9886\\u4E86\\uFF01\";\r\n            HintContent[HintContent[\"\\u8BF7\\u524D\\u5F80\\u76AE\\u80A4\\u754C\\u9762\\u8D2D\\u4E70\\uFF01\"] = 27] = \"\\u8BF7\\u524D\\u5F80\\u76AE\\u80A4\\u754C\\u9762\\u8D2D\\u4E70\\uFF01\";\r\n            HintContent[HintContent[\"\\u4ECA\\u5929\\u5DF2\\u7ECF\\u7B7E\\u5230\\u8FC7\\u4E86\\uFF01\"] = 28] = \"\\u4ECA\\u5929\\u5DF2\\u7ECF\\u7B7E\\u5230\\u8FC7\\u4E86\\uFF01\";\r\n        })(HintContent = Dialog.HintContent || (Dialog.HintContent = {}));\r\n        let Skin;\r\n        (function (Skin) {\r\n            Skin[\"blackBord\"] = \"Frame/UI/ui_orthogon_black.png\";\r\n        })(Skin || (Skin = {}));\r\n        function createHint_Middle(describe) {\r\n            let Hint_M = Laya.Pool.getItemByClass('Hint_M', Laya.Sprite);\r\n            Hint_M.name = 'Hint_M';\r\n            Laya.stage.addChild(Hint_M);\r\n            Hint_M.width = Laya.stage.width;\r\n            Hint_M.height = 100;\r\n            Hint_M.pivotY = Hint_M.height / 2;\r\n            Hint_M.pivotX = Laya.stage.width / 2;\r\n            Hint_M.x = Laya.stage.width / 2;\r\n            Hint_M.y = Laya.stage.height / 2;\r\n            Hint_M.zOrder = 100;\r\n            let Pic = new Laya.Image();\r\n            Hint_M.addChild(Pic);\r\n            Pic.skin = Skin.blackBord;\r\n            Pic.width = Laya.stage.width;\r\n            Pic.pivotX = Laya.stage.width / 2;\r\n            Pic.height = 100;\r\n            Pic.pivotY = Pic.height / 2;\r\n            Pic.y = Hint_M.height / 2;\r\n            Pic.x = Laya.stage.width / 2;\r\n            Pic.alpha = 0.6;\r\n            let Dec = new Laya.Label();\r\n            Hint_M.addChild(Dec);\r\n            Dec.width = Laya.stage.width;\r\n            Dec.text = HintContent[describe];\r\n            Dec.pivotX = Laya.stage.width / 2;\r\n            Dec.x = Laya.stage.width / 2;\r\n            Dec.height = 100;\r\n            Dec.pivotY = 50;\r\n            Dec.y = Hint_M.height / 2;\r\n            Dec.bold = true;\r\n            Dec.fontSize = 35;\r\n            Dec.color = '#ffffff';\r\n            Dec.align = 'center';\r\n            Dec.valign = 'middle';\r\n            Dec.alpha = 0;\r\n            Animation2D.scale_Alpha(Hint_M, 0, 1, 0, 1, 1, 1, 200, 0, f => {\r\n                Animation2D.fadeOut(Dec, 0, 1, 150, 0, f => {\r\n                    Animation2D.fadeOut(Dec, 1, 0, 200, 800, f => {\r\n                        Animation2D.scale_Alpha(Hint_M, 1, 1, 1, 1, 0, 0, 200, 0, f => {\r\n                            Hint_M.removeSelf();\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        Dialog.createHint_Middle = createHint_Middle;\r\n        Dialog._dialogContent = {\r\n            get Array() {\r\n                return Laya.loader.getRes(\"GameData/Dialog/Dialog.json\")['RECORDS'] !== null ? Laya.loader.getRes(\"GameData/Dialog/Dialog.json\")['RECORDS'] : [];\r\n            },\r\n        };\r\n        function getDialogContent(useWhere, name) {\r\n            let dia;\r\n            for (let index = 0; index < Dialog._dialogContent.Array.length; index++) {\r\n                const element = Dialog._dialogContent.Array[index];\r\n                if (element['useWhere'] == useWhere && element['name'] == name) {\r\n                    dia = element;\r\n                    break;\r\n                }\r\n            }\r\n            let arr = [];\r\n            for (const key in dia) {\r\n                if (dia.hasOwnProperty(key)) {\r\n                    const value = dia[key];\r\n                    if (key.substring(0, 7) == 'content' || value !== -1) {\r\n                        arr.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return arr;\r\n        }\r\n        Dialog.getDialogContent = getDialogContent;\r\n        function getDialogContent_Random(useWhere) {\r\n            let contentArr = [];\r\n            let whereArr = getUseWhere(useWhere);\r\n            let index = Math.floor(Math.random() * whereArr.length);\r\n            for (const key in whereArr[index]) {\r\n                if (whereArr[index].hasOwnProperty(key)) {\r\n                    const value = whereArr[index][key];\r\n                    if (key.substring(0, 7) == 'content' && value !== \"-1\") {\r\n                        contentArr.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return contentArr;\r\n        }\r\n        Dialog.getDialogContent_Random = getDialogContent_Random;\r\n        function getUseWhere(useWhere) {\r\n            let arr = [];\r\n            for (let index = 0; index < Dialog._dialogContent.Array.length; index++) {\r\n                const element = Dialog._dialogContent.Array[index];\r\n                if (element['useWhere'] == useWhere) {\r\n                    arr.push(element);\r\n                }\r\n            }\r\n            return arr;\r\n        }\r\n        Dialog.getUseWhere = getUseWhere;\r\n        let UseWhere;\r\n        (function (UseWhere) {\r\n            UseWhere[\"scene1\"] = \"scene1\";\r\n            UseWhere[\"scene2\"] = \"scene2\";\r\n            UseWhere[\"scene3\"] = \"scene3\";\r\n        })(UseWhere = Dialog.UseWhere || (Dialog.UseWhere = {}));\r\n        let DialogProperty;\r\n        (function (DialogProperty) {\r\n            DialogProperty[\"name\"] = \"name\";\r\n            DialogProperty[\"useWhere\"] = \"useWhere\";\r\n            DialogProperty[\"content\"] = \"content\";\r\n            DialogProperty[\"max\"] = \"max\";\r\n        })(DialogProperty = Dialog.DialogProperty || (Dialog.DialogProperty = {}));\r\n        let PlayMode;\r\n        (function (PlayMode) {\r\n            PlayMode[\"voluntarily\"] = \"voluntarily\";\r\n            PlayMode[\"manual\"] = \"manual\";\r\n            PlayMode[\"clickContent\"] = \"clickContent\";\r\n        })(PlayMode = Dialog.PlayMode || (Dialog.PlayMode = {}));\r\n        function createVoluntarilyDialogue(x, y, useWhere, startDelayed, delayed, parent, content) {\r\n            if (startDelayed == undefined) {\r\n                startDelayed = 0;\r\n            }\r\n            Laya.timer.once(startDelayed, this, () => {\r\n                let Pre_Dialogue;\r\n                Laya.loader.load('Prefab/Dialogue_Common.json', Laya.Handler.create(this, function (prefab) {\r\n                    let _prefab = new Laya.Prefab();\r\n                    _prefab.json = prefab;\r\n                    Pre_Dialogue = Laya.Pool.getItemByCreateFun('Pre_Dialogue', _prefab.create, _prefab);\r\n                    if (parent) {\r\n                        parent.addChild(Pre_Dialogue);\r\n                    }\r\n                    else {\r\n                        Laya.stage.addChild(Pre_Dialogue);\r\n                    }\r\n                    Pre_Dialogue.x = x;\r\n                    Pre_Dialogue.y = y;\r\n                    let ContentLabel = Pre_Dialogue.getChildByName('Content');\r\n                    let contentArr;\r\n                    if (content !== undefined) {\r\n                        ContentLabel.text = content[0];\r\n                    }\r\n                    else {\r\n                        contentArr = getDialogContent_Random(useWhere);\r\n                        ContentLabel.text = contentArr[0];\r\n                    }\r\n                    Pre_Dialogue.zOrder = 100;\r\n                    if (delayed == undefined) {\r\n                        delayed = 1000;\r\n                    }\r\n                    Animation2D.scale_Alpha(Pre_Dialogue, 0, 0, 0, 1, 1, 1, 150, 1000, () => {\r\n                        for (let index = 0; index < contentArr.length; index++) {\r\n                            Laya.timer.once(index * delayed, this, () => {\r\n                                ContentLabel.text = contentArr[index];\r\n                                if (index == contentArr.length - 1) {\r\n                                    Laya.timer.once(delayed, this, () => {\r\n                                        Animation2D.scale_Alpha(Pre_Dialogue, 1, 1, 1, 0, 0, 0, 150, 1000, () => {\r\n                                            Pre_Dialogue.removeSelf();\r\n                                        });\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                    Dialog.DialogueNode = Pre_Dialogue;\r\n                }));\r\n            });\r\n        }\r\n        Dialog.createVoluntarilyDialogue = createVoluntarilyDialogue;\r\n        function createCommonDialog(parent, x, y, content) {\r\n            let Dialogue_Common;\r\n            Laya.loader.load('Prefab/Dialogue_Common.json', Laya.Handler.create(this, function (prefab) {\r\n                let _prefab = new Laya.Prefab();\r\n                _prefab.json = prefab;\r\n                Dialogue_Common = Laya.Pool.getItemByCreateFun('Dialogue_Common', _prefab.create, _prefab);\r\n                parent.addChild(Dialogue_Common);\r\n                Dialogue_Common.pos(x, y);\r\n                let Content = Dialogue_Common.getChildByName('Dialogue_Common');\r\n                Content.text = content;\r\n            }));\r\n        }\r\n        Dialog.createCommonDialog = createCommonDialog;\r\n    })(Dialog = lwg.Dialog || (lwg.Dialog = {}));\r\n    let Execution;\r\n    (function (Execution) {\r\n        Execution._execution = {\r\n            get value() {\r\n                return Laya.LocalStorage.getItem('_execution') ? Number(Laya.LocalStorage.getItem('_execution')) : 15;\r\n            },\r\n            set value(val) {\r\n                Laya.LocalStorage.setItem('_execution', val.toString());\r\n            }\r\n        };\r\n        function _createExecutionNum(parent) {\r\n            let sp;\r\n            Laya.loader.load('prefab/ExecutionNum.json', Laya.Handler.create(this, function (prefab) {\r\n                let _prefab = new Laya.Prefab();\r\n                _prefab.json = prefab;\r\n                sp = Laya.Pool.getItemByCreateFun('prefab', _prefab.create, _prefab);\r\n                parent.addChild(sp);\r\n                let num = sp.getChildByName('Num');\r\n                sp.pos(297, 90);\r\n                sp.zOrder = 50;\r\n                Execution.ExecutionNumNode = sp;\r\n                Execution.ExecutionNumNode.name = 'ExecutionNumNode';\r\n            }));\r\n        }\r\n        Execution._createExecutionNum = _createExecutionNum;\r\n        function _createAddExecution(x, y, func) {\r\n            let sp;\r\n            Laya.loader.load('prefab/execution.json', Laya.Handler.create(this, function (prefab) {\r\n                let _prefab = new Laya.Prefab();\r\n                _prefab.json = prefab;\r\n                sp = Laya.Pool.getItemByCreateFun('prefab', _prefab.create, _prefab);\r\n                Laya.stage.addChild(sp);\r\n                sp.x = Laya.stage.width / 2;\r\n                sp.y = Laya.stage.height / 2;\r\n                sp.zOrder = 50;\r\n                if (Execution.ExecutionNumNode) {\r\n                    Animation2D.move_Simple_01(sp, sp.x, sp.y, Execution.ExecutionNumNode.x, Execution.ExecutionNumNode.y, 800, null, 100, f => {\r\n                        Animation2D.fadeOut(sp, 1, 0, 200, 0, f => {\r\n                            lwg.Animation2D.upDwon_Shake(Execution.ExecutionNumNode, 10, 80, 0, null);\r\n                            if (func) {\r\n                                func();\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }));\r\n        }\r\n        Execution._createAddExecution = _createAddExecution;\r\n        function createConsumeEx(subEx) {\r\n            let label = Laya.Pool.getItemByClass('label', Laya.Label);\r\n            label.name = 'label';\r\n            Laya.stage.addChild(label);\r\n            label.text = '-2';\r\n            label.fontSize = 40;\r\n            label.bold = true;\r\n            label.color = '#59245c';\r\n            label.x = Execution.ExecutionNumNode.x + 100;\r\n            label.y = Execution.ExecutionNumNode.y - label.height / 2 + 4;\r\n            label.zOrder = 100;\r\n            lwg.Animation2D.fadeOut(label, 0, 1, 200, 150, f => {\r\n                lwg.Animation2D.leftRight_Shake(Execution.ExecutionNumNode, 15, 60, 0, null);\r\n                lwg.Animation2D.fadeOut(label, 1, 0, 600, 400, f => {\r\n                });\r\n            });\r\n        }\r\n        Execution.createConsumeEx = createConsumeEx;\r\n    })(Execution = lwg.Execution || (lwg.Execution = {}));\r\n    let Gold;\r\n    (function (Gold_1) {\r\n        Gold_1._num = {\r\n            get value() {\r\n                return Laya.LocalStorage.getItem('_goldNum') ? Number(Laya.LocalStorage.getItem('_goldNum')) : 0;\r\n            },\r\n            set value(val) {\r\n                Laya.LocalStorage.setItem('_goldNum', val.toString());\r\n            }\r\n        };\r\n        function createGoldNode(x, y, parent) {\r\n            if (!parent) {\r\n                parent = Laya.stage;\r\n            }\r\n            if (Gold_1.GoldNode) {\r\n                Gold_1.GoldNode.removeSelf();\r\n            }\r\n            let sp;\r\n            Laya.loader.load('Prefab/PreGold.json', Laya.Handler.create(this, function (prefab) {\r\n                let _prefab = new Laya.Prefab();\r\n                _prefab.json = prefab;\r\n                sp = Laya.Pool.getItemByCreateFun('gold', _prefab.create, _prefab);\r\n                let Num = sp.getChildByName('Num');\r\n                Num.text = Gold_1._num.value.toString();\r\n                parent.addChild(sp);\r\n                let Pic = sp.getChildByName('Pic');\r\n                sp.pos(x, y);\r\n                sp.zOrder = 100;\r\n                Gold_1.GoldNode = sp;\r\n            }));\r\n        }\r\n        Gold_1.createGoldNode = createGoldNode;\r\n        function addGold(number) {\r\n            Gold_1._num.value += number;\r\n            let Num = Gold_1.GoldNode.getChildByName('Num');\r\n            Num.text = Gold_1._num.value.toString();\r\n        }\r\n        Gold_1.addGold = addGold;\r\n        function addGoldDisPlay(number) {\r\n            let Num = Gold_1.GoldNode.getChildByName('Num');\r\n            Num.value = (Number(Num.value) + number).toString();\r\n        }\r\n        Gold_1.addGoldDisPlay = addGoldDisPlay;\r\n        function addGoldNoDisPlay(number) {\r\n            Gold_1._num.value += number;\r\n        }\r\n        Gold_1.addGoldNoDisPlay = addGoldNoDisPlay;\r\n        function goldAppear(delayed, x, y) {\r\n            if (delayed) {\r\n                Animation2D.scale_Alpha(Gold_1.GoldNode, 0, 1, 1, 1, 1, 1, delayed, 0, f => {\r\n                    Gold_1.GoldNode.visible = true;\r\n                });\r\n            }\r\n            else {\r\n                Gold_1.GoldNode.visible = true;\r\n            }\r\n            if (x) {\r\n                Gold_1.GoldNode.x = x;\r\n            }\r\n            if (y) {\r\n                Gold_1.GoldNode.y = y;\r\n            }\r\n        }\r\n        Gold_1.goldAppear = goldAppear;\r\n        function goldVinish(delayed) {\r\n            if (delayed) {\r\n                Animation2D.scale_Alpha(Gold_1.GoldNode, 1, 1, 1, 1, 1, 0, delayed, 0, f => {\r\n                    Gold_1.GoldNode.visible = false;\r\n                });\r\n            }\r\n            else {\r\n                Gold_1.GoldNode.visible = false;\r\n            }\r\n        }\r\n        Gold_1.goldVinish = goldVinish;\r\n        let SkinUrl;\r\n        (function (SkinUrl) {\r\n            SkinUrl[SkinUrl[\"Frame/Effects/icon_gold.png\"] = 0] = \"Frame/Effects/icon_gold.png\";\r\n        })(SkinUrl || (SkinUrl = {}));\r\n        function createOneGold(width, height, url) {\r\n            let Gold = Laya.Pool.getItemByClass('addGold', Laya.Image);\r\n            Gold.name = 'addGold';\r\n            let num = Math.floor(Math.random() * 12);\r\n            Gold.alpha = 1;\r\n            Gold.zOrder = 60;\r\n            Gold.width = width;\r\n            Gold.height = height;\r\n            Gold.pivotX = width / 2;\r\n            Gold.pivotY = height / 2;\r\n            if (!url) {\r\n                Gold.skin = SkinUrl[0];\r\n            }\r\n            else {\r\n                Gold.skin = url;\r\n            }\r\n            return Gold;\r\n        }\r\n        Gold_1.createOneGold = createOneGold;\r\n        function getGoldAni_Single(parent, number, width, height, url, firstPoint, targetPoint, func1, func2) {\r\n            for (let index = 0; index < number; index++) {\r\n                Laya.timer.once(index * 30, this, () => {\r\n                    let Gold = createOneGold(width, height, url);\r\n                    parent.addChild(Gold);\r\n                    Animation2D.move_Scale(Gold, 1, firstPoint.x, firstPoint.y, targetPoint.x, targetPoint.y, 1, 350, 0, null, () => {\r\n                        if (index === number - 1) {\r\n                            Laya.timer.once(200, this, () => {\r\n                                if (func2) {\r\n                                    func2();\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            if (func1) {\r\n                                func1();\r\n                            }\r\n                        }\r\n                        Gold.removeSelf();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        Gold_1.getGoldAni_Single = getGoldAni_Single;\r\n        function getGoldAni_Heap(parent, number, width, height, url, firstPoint, targetPoint, func1, func2) {\r\n            for (let index = 0; index < number; index++) {\r\n                let Gold = createOneGold(width, height, url);\r\n                parent.addChild(Gold);\r\n                if (!url) {\r\n                    Gold.skin = SkinUrl[0];\r\n                }\r\n                else {\r\n                    Gold.skin = url;\r\n                }\r\n                let x = Math.floor(Math.random() * 2) == 1 ? firstPoint.x + Math.random() * 100 : firstPoint.x - Math.random() * 100;\r\n                let y = Math.floor(Math.random() * 2) == 1 ? firstPoint.y + Math.random() * 100 : firstPoint.y - Math.random() * 100;\r\n                Animation2D.move_Scale(Gold, 0.5, firstPoint.x, firstPoint.y, x, y, 1, 300, Math.random() * 100 + 100, Laya.Ease.expoIn, () => {\r\n                    Animation2D.move_Scale(Gold, 1, Gold.x, Gold.y, targetPoint.x, targetPoint.y, 1, 400, Math.random() * 200 + 100, Laya.Ease.cubicOut, () => {\r\n                        if (index === number - 1) {\r\n                            Laya.timer.once(200, this, () => {\r\n                                if (func2) {\r\n                                    func2();\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            if (func1) {\r\n                                func1();\r\n                            }\r\n                        }\r\n                        Gold.removeSelf();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        Gold_1.getGoldAni_Heap = getGoldAni_Heap;\r\n        class GoldAniBase extends Laya.Script {\r\n            onAwake() {\r\n                this.initProperty();\r\n            }\r\n            onEnable() {\r\n                this.self = this.owner;\r\n                this.selfScene = this.self.scene;\r\n                let calssName = this['__proto__']['constructor'].name;\r\n                this.self[calssName] = this;\r\n                this.timer = 0;\r\n                this.lwgInit();\r\n                this.propertyAssign();\r\n            }\r\n            lwgInit() {\r\n            }\r\n            initProperty() {\r\n            }\r\n            propertyAssign() {\r\n                if (this.startAlpha) {\r\n                    this.self.alpha = this.startAlpha;\r\n                }\r\n                if (this.startScale) {\r\n                    this.self.scale(this.startScale, this.startScale);\r\n                }\r\n                if (this.startRotat) {\r\n                    this.self.rotation = this.startRotat;\r\n                }\r\n            }\r\n            commonSpeedXYByAngle(angle, speed) {\r\n                this.self.x += Tools.point_speedXYByAngle(angle, speed + this.accelerated).x;\r\n                this.self.y += Tools.point_speedXYByAngle(angle, speed + this.accelerated).y;\r\n            }\r\n            moveRules() {\r\n            }\r\n            onUpdate() {\r\n                this.moveRules();\r\n            }\r\n            onDisable() {\r\n                Laya.Pool.recover(this.self.name, this.self);\r\n                this.destroy();\r\n                Laya.Tween.clearAll(this);\r\n                Laya.timer.clearAll(this);\r\n            }\r\n        }\r\n        Gold_1.GoldAniBase = GoldAniBase;\r\n        class AddGold extends GoldAniBase {\r\n            lwgInit() {\r\n                this.self.width = 115;\r\n                this.self.height = 111;\r\n                this.self.pivotX = this.self.width / 2;\r\n                this.self.pivotY = this.self.height / 2;\r\n            }\r\n            initProperty() {\r\n            }\r\n            moveRules() {\r\n                if (this.moveSwitch) {\r\n                    this.timer++;\r\n                    if (this.timer > 0) {\r\n                        lwg.Animation2D.move_Scale(this.self, 1, this.self.x, this.self.y, this.targetX, this.targetY, 0.35, 250, 0, f => {\r\n                            this.self.removeSelf();\r\n                            if (this.func !== null) {\r\n                                this.func();\r\n                            }\r\n                        });\r\n                        this.moveSwitch = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Gold_1.AddGold = AddGold;\r\n    })(Gold = lwg.Gold || (lwg.Gold = {}));\r\n    let EventAdmin;\r\n    (function (EventAdmin) {\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"taskReach\"] = \"taskReach\";\r\n            EventType[\"startGame\"] = \"startGame\";\r\n            EventType[\"defeated\"] = \"defeated\";\r\n            EventType[\"victory\"] = \"victory\";\r\n            EventType[\"scene3DRefresh\"] = \"Scene3DRefresh\";\r\n            EventType[\"gameSceneRefresh\"] = \"gameSceneRefresh\";\r\n            EventType[\"nextCustoms\"] = \"nextCustoms\";\r\n            EventType[\"resurgence\"] = \"resurgence\";\r\n        })(EventType = EventAdmin.EventType || (EventAdmin.EventType = {}));\r\n        EventAdmin.dispatcher = new Laya.EventDispatcher();\r\n        function reg(type, caller, listener) {\r\n            if (!caller) {\r\n                console.error(\"事件的执行域必须存在!\");\r\n            }\r\n            EventAdmin.dispatcher.on(type.toString(), caller, listener);\r\n        }\r\n        EventAdmin.reg = reg;\r\n        function regOnce(type, caller, listener) {\r\n            if (!caller) {\r\n                console.error(\"事件的执行域必须存在!\");\r\n            }\r\n            EventAdmin.dispatcher.once(type.toString(), caller, listener);\r\n        }\r\n        EventAdmin.regOnce = regOnce;\r\n        function notify(type, args) {\r\n            EventAdmin.dispatcher.event(type.toString(), args);\r\n        }\r\n        EventAdmin.notify = notify;\r\n        function off(type, caller, listener) {\r\n            this.dispatcher.off(type.toString(), caller, listener);\r\n        }\r\n        EventAdmin.off = off;\r\n        function offAll(type) {\r\n            EventAdmin.dispatcher.offAll(type.toString());\r\n        }\r\n        EventAdmin.offAll = offAll;\r\n        function offCaller(caller) {\r\n            EventAdmin.dispatcher.offAllCaller(caller);\r\n        }\r\n        EventAdmin.offCaller = offCaller;\r\n    })(EventAdmin = lwg.EventAdmin || (lwg.EventAdmin = {}));\r\n    let DateAdmin;\r\n    (function (DateAdmin) {\r\n        DateAdmin._date = {\r\n            get Year() {\r\n                return (new Date()).getFullYear();\r\n            },\r\n            get Month() {\r\n                return (new Date()).getMonth();\r\n            },\r\n            get Date() {\r\n                return (new Date()).getDate();\r\n            },\r\n            get Day() {\r\n                return (new Date()).getDay();\r\n            },\r\n            get Hours() {\r\n                return (new Date()).getHours();\r\n            },\r\n            get Minutes() {\r\n                return (new Date()).getMinutes();\r\n            },\r\n            get Seconds() {\r\n                return (new Date()).getSeconds();\r\n            },\r\n            get Milliseconds() {\r\n                return (new Date()).getMilliseconds();\r\n            },\r\n            get toLocaleDateString() {\r\n                return (new Date()).toLocaleDateString();\r\n            },\r\n            get toLocaleTimeString() {\r\n                return (new Date()).toLocaleTimeString();\r\n            }\r\n        };\r\n        DateAdmin._loginDate = {\r\n            get value() {\r\n                let data = Laya.LocalStorage.getJSON('Date_loginDate');\r\n                let dataArr = [];\r\n                let d = new Date();\r\n                let date1 = [d.getFullYear(), d.getMonth() + 1, d.getDate(), d.getDay()];\r\n                if (data) {\r\n                    dataArr = JSON.parse(data);\r\n                    let equal = false;\r\n                    for (let index = 0; index < dataArr.length; index++) {\r\n                        if (dataArr[index].toString() == date1.toString()) {\r\n                            equal = true;\r\n                        }\r\n                    }\r\n                    if (!equal) {\r\n                        dataArr.push(date1);\r\n                    }\r\n                }\r\n                if (dataArr.length == 0) {\r\n                    dataArr.push(date1);\r\n                }\r\n                Laya.LocalStorage.setJSON('Date_loginDate', JSON.stringify(dataArr));\r\n                return dataArr;\r\n            },\r\n        };\r\n        DateAdmin._loginNumber = {\r\n            get value() {\r\n                return Laya.LocalStorage.getItem('_loginNumber') ? Number(Laya.LocalStorage.getItem('_loginNumber')) : 1;\r\n            },\r\n            set value(val) {\r\n                Laya.LocalStorage.setItem('_loginNumber', val.toString());\r\n            }\r\n        };\r\n    })(DateAdmin = lwg.DateAdmin || (lwg.DateAdmin = {}));\r\n    let Admin;\r\n    (function (Admin) {\r\n        let _platformTpye;\r\n        (function (_platformTpye) {\r\n            _platformTpye[\"WeChat\"] = \"WeChat\";\r\n            _platformTpye[\"OPPO\"] = \"OPPO\";\r\n            _platformTpye[\"Bytedance\"] = \"Bytedance\";\r\n            _platformTpye[\"All\"] = \"All\";\r\n        })(_platformTpye = Admin._platformTpye || (Admin._platformTpye = {}));\r\n        Admin._platform = _platformTpye.Bytedance;\r\n        Admin._gameSwitch = false;\r\n        Admin._gameLevel = {\r\n            get value() {\r\n                return Laya.LocalStorage.getItem('_gameLevel') ? Number(Laya.LocalStorage.getItem('_gameLevel')) : 1;\r\n            },\r\n            set value(val) {\r\n                Laya.LocalStorage.setItem('_gameLevel', val.toString());\r\n            }\r\n        };\r\n        Admin._practicalLevel = {\r\n            get value() {\r\n                return Laya.LocalStorage.getItem('_practicalLevel') ? Number(Laya.LocalStorage.getItem('_practicalLevel')) : Admin._gameLevel.value;\r\n            },\r\n            set value(val) {\r\n                Laya.LocalStorage.setItem('_practicalLevel', val.toString());\r\n            }\r\n        };\r\n        function _createLevel(parent, x, y) {\r\n            let sp;\r\n            Laya.loader.load('prefab/LevelNode.json', Laya.Handler.create(this, function (prefab) {\r\n                let _prefab = new Laya.Prefab();\r\n                _prefab.json = prefab;\r\n                sp = Laya.Pool.getItemByCreateFun('prefab', _prefab.create, _prefab);\r\n                parent.addChild(sp);\r\n                sp.pos(x, y);\r\n                sp.zOrder = 0;\r\n                let level = sp.getChildByName('level');\r\n                Admin.LevelNode = sp;\r\n            }));\r\n        }\r\n        Admin._createLevel = _createLevel;\r\n        Admin._pause = {\r\n            get switch() {\r\n                return Admin._gameSwitch;\r\n            },\r\n            set switch(bool) {\r\n                this.bool = bool;\r\n                if (bool) {\r\n                    Admin._gameSwitch = false;\r\n                    Laya.timer.pause();\r\n                }\r\n                else {\r\n                    Admin._gameSwitch = true;\r\n                    Laya.timer.resume();\r\n                }\r\n            }\r\n        };\r\n        Admin._clickLock = {\r\n            get switch() {\r\n                return Laya.stage.getChildByName('__stageClickLock__') ? true : false;\r\n            },\r\n            set switch(bool) {\r\n                if (bool) {\r\n                    if (!Laya.stage.getChildByName('__stageClickLock__')) {\r\n                        let __stageClickLock__ = new Laya.Sprite();\r\n                        __stageClickLock__.name = '__stageClickLock__';\r\n                        Laya.stage.addChild(__stageClickLock__);\r\n                        __stageClickLock__.zOrder = 1000;\r\n                        __stageClickLock__.width = Laya.stage.width;\r\n                        __stageClickLock__.height = Laya.stage.height;\r\n                        __stageClickLock__.pos(0, 0);\r\n                        Click.on(Click.Type.noEffect, __stageClickLock__, this, null, null, (e) => {\r\n                            console.log('舞台点击被锁住了！请用admin._clickLock=false解锁');\r\n                            e.stopPropagation();\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    if (Laya.stage.getChildByName('__stageClickLock__')) {\r\n                        Laya.stage.getChildByName('__stageClickLock__').removeSelf();\r\n                        console.log('场景点击解锁！');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        function _secneLockClick(scene) {\r\n            _unlockPreventClick(scene);\r\n            let __lockClick__ = new Laya.Sprite();\r\n            scene.addChild(__lockClick__);\r\n            __lockClick__.zOrder = 1000;\r\n            __lockClick__.name = '__lockClick__';\r\n            __lockClick__.width = Laya.stage.width;\r\n            __lockClick__.height = Laya.stage.height;\r\n            __lockClick__.pos(0, 0);\r\n            Click.on(Click.Type.noEffect, __lockClick__, this, null, null, (e) => {\r\n                console.log('场景点击被锁住了！请用admin._unlockPreventClick（）解锁');\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n        Admin._secneLockClick = _secneLockClick;\r\n        function _unlockPreventClick(scene) {\r\n            let __lockClick__ = scene.getChildByName('__lockClick__');\r\n            if (__lockClick__) {\r\n                __lockClick__.removeSelf();\r\n            }\r\n        }\r\n        Admin._unlockPreventClick = _unlockPreventClick;\r\n        Admin._sceneControl = {};\r\n        let OpenAniType;\r\n        (function (OpenAniType) {\r\n            OpenAniType[\"fadeOut\"] = \"fadeOut\";\r\n            OpenAniType[\"leftMove\"] = \"fadeOut\";\r\n            OpenAniType[\"rightMove\"] = \"rightMove\";\r\n            OpenAniType[\"centerRotate\"] = \"centerRotate\";\r\n        })(OpenAniType = Admin.OpenAniType || (Admin.OpenAniType = {}));\r\n        Admin._commonOpenAni = OpenAniType.fadeOut;\r\n        Admin._commonVanishAni = false;\r\n        let SceneName;\r\n        (function (SceneName) {\r\n            SceneName[\"UILoding\"] = \"UILoding\";\r\n            SceneName[\"UIStart\"] = \"UIStart\";\r\n            SceneName[\"UISkin\"] = \"UISkin\";\r\n            SceneName[\"UIShop\"] = \"UIShop\";\r\n            SceneName[\"UITask\"] = \"UITask\";\r\n            SceneName[\"UISet\"] = \"UISet\";\r\n            SceneName[\"UIPifu\"] = \"UIPifu\";\r\n            SceneName[\"UIPuase\"] = \"UIPuase\";\r\n            SceneName[\"UIShare\"] = \"UIShare\";\r\n            SceneName[\"GameMain3D\"] = \"GameMain3D\";\r\n            SceneName[\"UIVictory\"] = \"UIVictory\";\r\n            SceneName[\"UIDefeated\"] = \"UIDefeated\";\r\n            SceneName[\"UIPassHint\"] = \"UIPassHint\";\r\n            SceneName[\"UISkinXD\"] = \"UISkinXD\";\r\n            SceneName[\"UISkinTry\"] = \"UISkinTry\";\r\n            SceneName[\"UIRedeem\"] = \"UIRedeem\";\r\n            SceneName[\"UIAnchorXD\"] = \"UIAnchorXD\";\r\n            SceneName[\"UITurntable\"] = \"UITurntable\";\r\n            SceneName[\"UICaiDanQiang\"] = \"UICaiDanQiang\";\r\n            SceneName[\"UICaidanPifu\"] = \"UICaidanPifu\";\r\n            SceneName[\"UIOperation\"] = \"UIOperation\";\r\n            SceneName[\"UIVictoryBox\"] = \"UIVictoryBox\";\r\n            SceneName[\"UICheckIn\"] = \"UICheckIn\";\r\n            SceneName[\"UIResurgence\"] = \"UIResurgence\";\r\n            SceneName[\"UIEasterEgg\"] = \"UIEasterEgg\";\r\n            SceneName[\"UIADSHint\"] = \"UIADSHint\";\r\n            SceneName[\"LwgInit\"] = \"LwgInit\";\r\n            SceneName[\"GameScene\"] = \"GameScene\";\r\n            SceneName[\"UISmallHint\"] = \"UISmallHint\";\r\n            SceneName[\"UIExecutionHint\"] = \"UIExecutionHint\";\r\n        })(SceneName = Admin.SceneName || (Admin.SceneName = {}));\r\n        function _openScene(openName, cloesScene, func, zOder) {\r\n            Laya.Scene.load('Scene/' + openName + '.json', Laya.Handler.create(this, function (scene) {\r\n                scene.width = Laya.stage.width;\r\n                scene.height = Laya.stage.height;\r\n                var openf = () => {\r\n                    if (zOder) {\r\n                        Laya.stage.addChildAt(scene, zOder);\r\n                    }\r\n                    else {\r\n                        Laya.stage.addChild(scene);\r\n                    }\r\n                };\r\n                scene.name = openName;\r\n                Admin._sceneControl[openName] = scene;\r\n                let background = scene.getChildByName('Background');\r\n                if (background) {\r\n                    background.width = Laya.stage.width;\r\n                    background.height = Laya.stage.height;\r\n                }\r\n                if (cloesScene) {\r\n                    _closeScene(cloesScene, openf);\r\n                }\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }));\r\n        }\r\n        Admin._openScene = _openScene;\r\n        function _closeScene(cloesScene, func) {\r\n            var closef = () => {\r\n                if (func) {\r\n                    func();\r\n                }\r\n                Admin._clickLock.switch = false;\r\n                cloesScene.close();\r\n            };\r\n            if (!Admin._commonVanishAni) {\r\n                closef();\r\n                return;\r\n            }\r\n            var vanishAni = () => {\r\n                let time = 0;\r\n                let delay = 0;\r\n                switch (Admin._commonOpenAni) {\r\n                    case OpenAniType.fadeOut:\r\n                        time = 150;\r\n                        delay = 50;\r\n                        if (cloesScene['Background']) {\r\n                            Animation2D.fadeOut(cloesScene, 1, 0, time / 2);\r\n                        }\r\n                        Animation2D.fadeOut(cloesScene, 1, 0, time, delay, () => {\r\n                            closef();\r\n                        });\r\n                        break;\r\n                    case OpenAniType.leftMove:\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            };\r\n            let cloesSceneScript = cloesScene[cloesScene.name];\r\n            if (cloesSceneScript) {\r\n                if (cloesSceneScript) {\r\n                    Admin._clickLock.switch = true;\r\n                    let time0 = cloesSceneScript.lwgVanishAni();\r\n                    if (time0 !== null) {\r\n                        Laya.timer.once(time0, this, () => {\r\n                            closef();\r\n                            Admin._clickLock.switch = false;\r\n                        });\r\n                    }\r\n                    else {\r\n                        vanishAni();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                console.log('界面关闭失败，可能是脚本名称与场景名称不一样');\r\n            }\r\n        }\r\n        Admin._closeScene = _closeScene;\r\n        let GameState;\r\n        (function (GameState) {\r\n            GameState[\"Start\"] = \"Start\";\r\n            GameState[\"Play\"] = \"Play\";\r\n            GameState[\"Pause\"] = \"pause\";\r\n            GameState[\"Victory\"] = \"victory\";\r\n            GameState[\"Defeated\"] = \"defeated\";\r\n        })(GameState = Admin.GameState || (Admin.GameState = {}));\r\n        function gameState(calssName) {\r\n            switch (calssName) {\r\n                case SceneName.UIStart:\r\n                    Admin._gameState = GameState.Start;\r\n                    break;\r\n                case SceneName.GameScene:\r\n                    Admin._gameState = GameState.Play;\r\n                    break;\r\n                case SceneName.UIDefeated:\r\n                    Admin._gameState = GameState.Defeated;\r\n                    break;\r\n                case SceneName.UIVictory:\r\n                    Admin._gameState = GameState.Victory;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        Admin.gameState = gameState;\r\n        function commonOpenAni(scene) {\r\n            let time = 0;\r\n            let delay = 0;\r\n            switch (Admin._commonOpenAni) {\r\n                case OpenAniType.fadeOut:\r\n                    time = 400;\r\n                    delay = 300;\r\n                    if (scene['Background']) {\r\n                        Animation2D.fadeOut(scene, 0, 1, time / 2, delay);\r\n                    }\r\n                    Animation2D.fadeOut(scene, 0, 1, time);\r\n                    break;\r\n                case OpenAniType.leftMove:\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return time;\r\n        }\r\n        Admin.commonOpenAni = commonOpenAni;\r\n        class Scene extends Laya.Script {\r\n            constructor() {\r\n                super();\r\n                this.aniTime = 100;\r\n                this.aniDelayde = 100;\r\n            }\r\n            onAwake() {\r\n                this.self = this.owner;\r\n                this.calssName = this['__proto__']['constructor'].name;\r\n                this.self[this.calssName] = this;\r\n                gameState(this.calssName);\r\n                this.lwgNodeDec();\r\n                this.moduleOnAwake();\r\n                this.lwgOnAwake();\r\n                this.lwgAdaptive();\r\n            }\r\n            lwgOnAwake() { }\r\n            ;\r\n            moduleOnAwake() { }\r\n            onEnable() {\r\n                this.moduleEventReg();\r\n                this.lwgEventReg();\r\n                this.moduleOnEnable();\r\n                this.lwgOnEnable();\r\n                this.btnAndlwgOpenAni();\r\n            }\r\n            moduleOnEnable() { }\r\n            ;\r\n            lwgNodeDec() { }\r\n            ;\r\n            lwgEventReg() { }\r\n            ;\r\n            moduleEventReg() { }\r\n            ;\r\n            lwgOnEnable() { }\r\n            btnAndlwgOpenAni() {\r\n                let time = this.lwgOpenAni();\r\n                if (time == null) {\r\n                    time = commonOpenAni(this.self);\r\n                    if (time == null) {\r\n                        time = 0;\r\n                    }\r\n                }\r\n                Laya.timer.once(time, this, f => {\r\n                    this.lwgBtnClick();\r\n                });\r\n            }\r\n            lwgOpenAni() { return null; }\r\n            ;\r\n            lwgBtnClick() { }\r\n            ;\r\n            lwgAdaptive() { }\r\n            ;\r\n            onUpdate() { this.lwgOnUpdate(); }\r\n            ;\r\n            lwgOnUpdate() { }\r\n            ;\r\n            lwgVanishAni() { return null; }\r\n            ;\r\n            onDisable() {\r\n                Animation2D.fadeOut(this.self, 1, 0, 2000, 1);\r\n                this.lwgOnDisable();\r\n                Laya.timer.clearAll(this);\r\n                Laya.Tween.clearAll(this);\r\n                EventAdmin.offCaller(this);\r\n            }\r\n            lwgOnDisable() { }\r\n            ;\r\n        }\r\n        Admin.Scene = Scene;\r\n        class Person extends Laya.Script {\r\n            constructor() {\r\n                super();\r\n            }\r\n            onAwake() {\r\n                this.lwgOnAwake();\r\n            }\r\n            lwgOnAwake() {\r\n            }\r\n            onEnable() {\r\n                this.self = this.owner;\r\n                this.selfScene = this.self.scene;\r\n                this.rig = this.self.getComponent(Laya.RigidBody);\r\n                let calssName = this['__proto__']['constructor'].name;\r\n                this.self[calssName] = this;\r\n                this.lwgOnEnable();\r\n            }\r\n            lwgOnEnable() {\r\n                console.log('父类的初始化！');\r\n            }\r\n        }\r\n        Admin.Person = Person;\r\n        class Object extends Laya.Script {\r\n            constructor() {\r\n                super();\r\n            }\r\n            onAwake() {\r\n                this.self = this.owner;\r\n                this.selfScene = this.self.scene;\r\n                let calssName = this['__proto__']['constructor'].name;\r\n                this.self[calssName] = this;\r\n                this.lwgNodeDec();\r\n                this.lwgOnAwake();\r\n            }\r\n            lwgNodeDec() { }\r\n            lwgOnAwake() { }\r\n            onEnable() {\r\n                this.lwgBtnClick();\r\n                this.lwgEventReg();\r\n                this.lwgOnEnable();\r\n            }\r\n            lwgOnEnable() { }\r\n            lwgBtnClick() { }\r\n            lwgEventReg() { }\r\n            onUpdate() {\r\n                this.lwgOnUpdate();\r\n            }\r\n            lwgOnUpdate() { }\r\n            onDisable() {\r\n                this.lwgOnDisable();\r\n                Laya.timer.clearAll(this);\r\n                EventAdmin.offCaller(this);\r\n            }\r\n            lwgOnDisable() { }\r\n        }\r\n        Admin.Object = Object;\r\n    })(Admin = lwg.Admin || (lwg.Admin = {}));\r\n    let Effects;\r\n    (function (Effects) {\r\n        let SkinUrl;\r\n        (function (SkinUrl) {\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_white.png\"] = 0] = \"Frame/Effects/cir_white.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_black.png\"] = 1] = \"Frame/Effects/cir_black.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_blue.png\"] = 2] = \"Frame/Effects/cir_blue.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_bluish.png\"] = 3] = \"Frame/Effects/cir_bluish.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_cyan.png\"] = 4] = \"Frame/Effects/cir_cyan.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_grass.png\"] = 5] = \"Frame/Effects/cir_grass.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_green.png\"] = 6] = \"Frame/Effects/cir_green.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_orange.png\"] = 7] = \"Frame/Effects/cir_orange.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_pink.png\"] = 8] = \"Frame/Effects/cir_pink.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_purple.png\"] = 9] = \"Frame/Effects/cir_purple.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_red.png\"] = 10] = \"Frame/Effects/cir_red.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/cir_yellow.png\"] = 11] = \"Frame/Effects/cir_yellow.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_black.png\"] = 12] = \"Frame/Effects/star_black.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_blue.png\"] = 13] = \"Frame/Effects/star_blue.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_bluish.png\"] = 14] = \"Frame/Effects/star_bluish.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_cyan.png\"] = 15] = \"Frame/Effects/star_cyan.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_grass.png\"] = 16] = \"Frame/Effects/star_grass.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_green.png\"] = 17] = \"Frame/Effects/star_green.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_orange.png\"] = 18] = \"Frame/Effects/star_orange.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_pink.png\"] = 19] = \"Frame/Effects/star_pink.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_purple.png\"] = 20] = \"Frame/Effects/star_purple.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_red.png\"] = 21] = \"Frame/Effects/star_red.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_white.png\"] = 22] = \"Frame/Effects/star_white.png\";\r\n            SkinUrl[SkinUrl[\"Frame/Effects/star_yellow.png\"] = 23] = \"Frame/Effects/star_yellow.png\";\r\n        })(SkinUrl = Effects.SkinUrl || (Effects.SkinUrl = {}));\r\n        let SkinStyle;\r\n        (function (SkinStyle) {\r\n            SkinStyle[\"star\"] = \"star\";\r\n            SkinStyle[\"dot\"] = \"dot\";\r\n        })(SkinStyle = Effects.SkinStyle || (Effects.SkinStyle = {}));\r\n        class EffectsBase extends Laya.Script {\r\n            onAwake() {\r\n                this.initProperty();\r\n            }\r\n            onEnable() {\r\n                this.self = this.owner;\r\n                this.selfScene = this.self.scene;\r\n                let calssName = this['__proto__']['constructor'].name;\r\n                this.self[calssName] = this;\r\n                this.timer = 0;\r\n                this.lwgInit();\r\n                this.propertyAssign();\r\n            }\r\n            lwgInit() {\r\n            }\r\n            initProperty() {\r\n            }\r\n            propertyAssign() {\r\n                if (this.startAlpha) {\r\n                    this.self.alpha = this.startAlpha;\r\n                }\r\n                if (this.startScale) {\r\n                    this.self.scale(this.startScale, this.startScale);\r\n                }\r\n                if (this.startRotat) {\r\n                    this.self.rotation = this.startRotat;\r\n                }\r\n            }\r\n            commonSpeedXYByAngle(angle, speed) {\r\n                this.self.x += Tools.point_speedXYByAngle(angle, speed + this.accelerated).x;\r\n                this.self.y += Tools.point_speedXYByAngle(angle, speed + this.accelerated).y;\r\n            }\r\n            moveRules() {\r\n            }\r\n            onUpdate() {\r\n                this.moveRules();\r\n            }\r\n            onDisable() {\r\n                Laya.Pool.recover(this.self.name, this.self);\r\n                this.destroy();\r\n                Laya.Tween.clearAll(this);\r\n                Laya.timer.clearAll(this);\r\n            }\r\n        }\r\n        Effects.EffectsBase = EffectsBase;\r\n        function createCommonExplosion(parent, quantity, x, y, style, speed, continueTime) {\r\n            for (let index = 0; index < quantity; index++) {\r\n                let ele = Laya.Pool.getItemByClass('ele', Laya.Image);\r\n                ele.name = 'ele';\r\n                let num;\r\n                if (style === 'star') {\r\n                    num = 12 + Math.floor(Math.random() * 12);\r\n                }\r\n                else if (style === 'dot') {\r\n                    num = Math.floor(Math.random() * 12);\r\n                }\r\n                ele.skin = SkinUrl[num];\r\n                ele.alpha = 1;\r\n                parent.addChild(ele);\r\n                ele.pos(x, y);\r\n                let scirpt = ele.addComponent(commonExplosion);\r\n                scirpt.startSpeed = Math.random() * speed;\r\n                scirpt.continueTime = 2 * Math.random() + continueTime;\r\n            }\r\n        }\r\n        Effects.createCommonExplosion = createCommonExplosion;\r\n        class commonExplosion extends lwg.Effects.EffectsBase {\r\n            lwgInit() {\r\n                this.self.width = 25;\r\n                this.self.height = 25;\r\n                this.self.pivotX = this.self.width / 2;\r\n                this.self.pivotY = this.self.height / 2;\r\n            }\r\n            initProperty() {\r\n                this.startAngle = 360 * Math.random();\r\n                this.startSpeed = 5 * Math.random() + 8;\r\n                this.startScale = 0.4 + Math.random() * 0.6;\r\n                this.accelerated = 2;\r\n                this.continueTime = 8 + Math.random() * 10;\r\n                this.rotateDir = Math.floor(Math.random() * 2) === 1 ? 'left' : 'right';\r\n                this.rotateRan = Math.random() * 10;\r\n            }\r\n            moveRules() {\r\n                this.timer++;\r\n                if (this.rotateDir === 'left') {\r\n                    this.self.rotation += this.rotateRan;\r\n                }\r\n                else {\r\n                    this.self.rotation -= this.rotateRan;\r\n                }\r\n                if (this.timer >= this.continueTime / 2) {\r\n                    this.self.alpha -= 0.04;\r\n                    if (this.self.alpha <= 0.65) {\r\n                        this.self.removeSelf();\r\n                    }\r\n                }\r\n                this.commonSpeedXYByAngle(this.startAngle, this.startSpeed + this.accelerated);\r\n                this.accelerated += 0.2;\r\n            }\r\n        }\r\n        Effects.commonExplosion = commonExplosion;\r\n        function createExplosion_Rotate(parent, quantity, x, y, style, speed, rotate) {\r\n            for (let index = 0; index < quantity; index++) {\r\n                let ele = Laya.Pool.getItemByClass('ele', Laya.Image);\r\n                ele.name = 'ele';\r\n                let num;\r\n                if (style === SkinStyle.star) {\r\n                    num = 12 + Math.floor(Math.random() * 12);\r\n                }\r\n                else if (style === SkinStyle.dot) {\r\n                    num = Math.floor(Math.random() * 12);\r\n                }\r\n                ele.skin = SkinUrl[num];\r\n                ele.alpha = 1;\r\n                parent.addChild(ele);\r\n                ele.pos(x, y);\r\n                let scirpt = ele.addComponent(Explosion_Rotate);\r\n                scirpt.startSpeed = 2 + Math.random() * speed;\r\n                scirpt.rotateRan = Math.random() * rotate;\r\n            }\r\n        }\r\n        Effects.createExplosion_Rotate = createExplosion_Rotate;\r\n        class Explosion_Rotate extends lwg.Effects.EffectsBase {\r\n            lwgInit() {\r\n                this.self.width = 41;\r\n                this.self.height = 41;\r\n                this.self.pivotX = this.self.width / 2;\r\n                this.self.pivotY = this.self.height / 2;\r\n            }\r\n            initProperty() {\r\n                this.startAngle = 360 * Math.random();\r\n                this.startSpeed = 5 * Math.random() + 8;\r\n                this.startScale = 0.4 + Math.random() * 0.6;\r\n                this.accelerated = 0;\r\n                this.continueTime = 5 + Math.random() * 20;\r\n                this.rotateDir = Math.floor(Math.random() * 2) === 1 ? 'left' : 'right';\r\n                this.rotateRan = Math.random() * 15;\r\n            }\r\n            moveRules() {\r\n                if (this.rotateDir === 'left') {\r\n                    this.self.rotation += this.rotateRan;\r\n                }\r\n                else {\r\n                    this.self.rotation -= this.rotateRan;\r\n                }\r\n                if (this.startSpeed - this.accelerated <= 0.1) {\r\n                    this.self.alpha -= 0.03;\r\n                    if (this.self.alpha <= 0) {\r\n                        this.self.removeSelf();\r\n                    }\r\n                }\r\n                else {\r\n                    this.accelerated += 0.2;\r\n                }\r\n                this.commonSpeedXYByAngle(this.startAngle, this.startSpeed - this.accelerated);\r\n            }\r\n        }\r\n        Effects.Explosion_Rotate = Explosion_Rotate;\r\n        function createFireworks(parent, quantity, x, y) {\r\n            for (let index = 0; index < quantity; index++) {\r\n                let ele = Laya.Pool.getItemByClass('fireworks', Laya.Image);\r\n                ele.name = 'fireworks';\r\n                let num = 12 + Math.floor(Math.random() * 11);\r\n                ele.alpha = 1;\r\n                ele.skin = SkinUrl[num];\r\n                parent.addChild(ele);\r\n                ele.pos(x, y);\r\n                let scirpt = ele.getComponent(Fireworks);\r\n                if (!scirpt) {\r\n                    ele.addComponent(Fireworks);\r\n                }\r\n            }\r\n        }\r\n        Effects.createFireworks = createFireworks;\r\n        class Fireworks extends lwg.Effects.EffectsBase {\r\n            lwgInit() {\r\n                this.self.width = 41;\r\n                this.self.height = 41;\r\n                this.self.pivotX = this.self.width / 2;\r\n                this.self.pivotY = this.self.height / 2;\r\n            }\r\n            initProperty() {\r\n                this.startAngle = 360 * Math.random();\r\n                this.startSpeed = 5 * Math.random() + 5;\r\n                this.startScale = 0.4 + Math.random() * 0.6;\r\n                this.accelerated = 0.1;\r\n                this.continueTime = 200 + Math.random() * 10;\r\n            }\r\n            moveRules() {\r\n                this.timer++;\r\n                if (this.timer >= this.continueTime * 3 / 5) {\r\n                    this.self.alpha -= 0.1;\r\n                }\r\n                if (this.timer >= this.continueTime) {\r\n                    this.self.removeSelf();\r\n                }\r\n                else {\r\n                    this.commonSpeedXYByAngle(this.startAngle, this.startSpeed);\r\n                }\r\n                if (this.self.scaleX < 0) {\r\n                    this.self.scaleX += 0.01;\r\n                }\r\n                else if (this.self.scaleX >= this.startScale) {\r\n                    this.self.scaleX -= 0.01;\r\n                }\r\n            }\r\n        }\r\n        Effects.Fireworks = Fireworks;\r\n        function createLeftOrRightJet(parent, direction, quantity, x, y) {\r\n            for (let index = 0; index < quantity; index++) {\r\n                let ele = Laya.Pool.getItemByClass('Jet', Laya.Image);\r\n                ele.name = 'Jet';\r\n                let num = 12 + Math.floor(Math.random() * 11);\r\n                ele.skin = SkinUrl[num];\r\n                ele.alpha = 1;\r\n                parent.addChild(ele);\r\n                ele.pos(x, y);\r\n                let scirpt = ele.getComponent(leftOrRightJet);\r\n                if (!scirpt) {\r\n                    ele.addComponent(leftOrRightJet);\r\n                    let scirpt1 = ele.getComponent(leftOrRightJet);\r\n                    scirpt1.direction = direction;\r\n                    scirpt1.initProperty();\r\n                }\r\n                else {\r\n                    scirpt.direction = direction;\r\n                    scirpt.initProperty();\r\n                }\r\n            }\r\n        }\r\n        Effects.createLeftOrRightJet = createLeftOrRightJet;\r\n        class leftOrRightJet extends lwg.Effects.EffectsBase {\r\n            lwgInit() {\r\n                this.self.width = 41;\r\n                this.self.height = 41;\r\n                this.self.pivotX = this.self.width / 2;\r\n                this.self.pivotY = this.self.height / 2;\r\n            }\r\n            initProperty() {\r\n                if (this.direction === 'left') {\r\n                    this.startAngle = 100 * Math.random() - 90 + 45 - 10 - 20;\r\n                }\r\n                else if (this.direction === 'right') {\r\n                    this.startAngle = 100 * Math.random() + 90 + 45 + 20;\r\n                }\r\n                this.startSpeed = 10 * Math.random() + 3;\r\n                this.startScale = 0.4 + Math.random() * 0.6;\r\n                this.accelerated = 0.1;\r\n                this.continueTime = 300 + Math.random() * 50;\r\n                this.randomRotate = 1 + Math.random() * 20;\r\n            }\r\n            moveRules() {\r\n                this.timer++;\r\n                if (this.timer >= this.continueTime * 3 / 5) {\r\n                    this.self.alpha -= 0.1;\r\n                }\r\n                if (this.timer >= this.continueTime) {\r\n                    this.self.removeSelf();\r\n                }\r\n                else {\r\n                    this.commonSpeedXYByAngle(this.startAngle, this.startSpeed);\r\n                }\r\n                this.self.rotation += this.randomRotate;\r\n                if (this.self.scaleX < 0) {\r\n                    this.self.scaleX += 0.01;\r\n                }\r\n                else if (this.self.scaleX >= this.startScale) {\r\n                    this.self.scaleX -= 0.01;\r\n                }\r\n            }\r\n        }\r\n        Effects.leftOrRightJet = leftOrRightJet;\r\n    })(Effects = lwg.Effects || (lwg.Effects = {}));\r\n    let Sk;\r\n    (function (Sk) {\r\n        function skLoding() {\r\n        }\r\n        Sk.skLoding = skLoding;\r\n        function onCompelet(tem) {\r\n            console.log(tem['_skBufferUrl'], '加载成功');\r\n        }\r\n        Sk.onCompelet = onCompelet;\r\n        function onError(url) {\r\n            console.log(url, '加载失败！');\r\n        }\r\n        Sk.onError = onError;\r\n    })(Sk = lwg.Sk || (lwg.Sk = {}));\r\n    let Click;\r\n    (function (Click) {\r\n        function createButton() {\r\n            let Btn = new Laya.Sprite();\r\n            let img = new Laya.Image();\r\n            let label = new Laya.Label();\r\n        }\r\n        Click.createButton = createButton;\r\n        let Type;\r\n        (function (Type) {\r\n            Type[\"noEffect\"] = \"noEffect\";\r\n            Type[\"largen\"] = \"largen\";\r\n            Type[\"balloon\"] = \"balloon\";\r\n            Type[\"beetle\"] = \"beetle\";\r\n        })(Type = Click.Type || (Click.Type = {}));\r\n        function on(effect, target, caller, down, move, up, out) {\r\n            let btnEffect;\r\n            switch (effect) {\r\n                case Type.noEffect:\r\n                    btnEffect = new Btn_NoEffect();\r\n                    break;\r\n                case Type.largen:\r\n                    btnEffect = new Btn_LargenEffect();\r\n                    break;\r\n                case Type.balloon:\r\n                    btnEffect = new Btn_Balloon();\r\n                    break;\r\n                case Type.balloon:\r\n                    btnEffect = new Btn_Beetle();\r\n                    break;\r\n                default:\r\n                    btnEffect = new Btn_LargenEffect();\r\n                    break;\r\n            }\r\n            target.on(Laya.Event.MOUSE_DOWN, caller, down);\r\n            target.on(Laya.Event.MOUSE_MOVE, caller, move);\r\n            target.on(Laya.Event.MOUSE_UP, caller, up);\r\n            target.on(Laya.Event.MOUSE_OUT, caller, out);\r\n            target.on(Laya.Event.MOUSE_DOWN, caller, btnEffect.down);\r\n            target.on(Laya.Event.MOUSE_MOVE, caller, btnEffect.move);\r\n            target.on(Laya.Event.MOUSE_UP, caller, btnEffect.up);\r\n            target.on(Laya.Event.MOUSE_OUT, caller, btnEffect.out);\r\n        }\r\n        Click.on = on;\r\n        function off(effect, target, caller, down, move, up, out) {\r\n            let btnEffect;\r\n            switch (effect) {\r\n                case Type.noEffect:\r\n                    btnEffect = new Btn_NoEffect();\r\n                    break;\r\n                case Type.largen:\r\n                    btnEffect = new Btn_LargenEffect();\r\n                    break;\r\n                case Type.balloon:\r\n                    btnEffect = new Btn_Balloon();\r\n                    break;\r\n                case Type.balloon:\r\n                    btnEffect = new Btn_Beetle();\r\n                    break;\r\n                default:\r\n                    btnEffect = new Btn_LargenEffect();\r\n                    break;\r\n            }\r\n            target.off(Laya.Event.MOUSE_DOWN, caller, down);\r\n            target.off(Laya.Event.MOUSE_MOVE, caller, move);\r\n            target.off(Laya.Event.MOUSE_UP, caller, up);\r\n            target.off(Laya.Event.MOUSE_OUT, caller, out);\r\n            target.off(Laya.Event.MOUSE_DOWN, caller, btnEffect.down);\r\n            target.off(Laya.Event.MOUSE_MOVE, caller, btnEffect.move);\r\n            target.off(Laya.Event.MOUSE_UP, caller, btnEffect.up);\r\n            target.off(Laya.Event.MOUSE_OUT, caller, btnEffect.out);\r\n        }\r\n        Click.off = off;\r\n    })(Click = lwg.Click || (lwg.Click = {}));\r\n    class Btn_NoEffect {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n        }\r\n        move(event) {\r\n        }\r\n        up(event) {\r\n        }\r\n        out(event) {\r\n        }\r\n    }\r\n    lwg.Btn_NoEffect = Btn_NoEffect;\r\n    class Btn_LargenEffect {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n            event.currentTarget.scale(1.1, 1.1);\r\n            PalyAudio.playSound(Click.audioUrl);\r\n        }\r\n        move(event) {\r\n        }\r\n        up(event) {\r\n            event.currentTarget.scale(1, 1);\r\n        }\r\n        out(event) {\r\n            event.currentTarget.scale(1, 1);\r\n        }\r\n    }\r\n    lwg.Btn_LargenEffect = Btn_LargenEffect;\r\n    class Btn_Balloon {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n            event.currentTarget.scale(Click.balloonScale + 0.06, Click.balloonScale + 0.06);\r\n            PalyAudio.playSound(Click.audioUrl);\r\n        }\r\n        up(event) {\r\n            event.currentTarget.scale(Click.balloonScale, Click.balloonScale);\r\n        }\r\n        move(event) {\r\n            event.currentTarget.scale(Click.balloonScale, Click.balloonScale);\r\n        }\r\n        out(event) {\r\n            event.currentTarget.scale(Click.balloonScale, Click.balloonScale);\r\n        }\r\n    }\r\n    lwg.Btn_Balloon = Btn_Balloon;\r\n    class Btn_Beetle {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n            event.currentTarget.scale(Click.beetleScale + 0.06, Click.beetleScale + 0.06);\r\n            PalyAudio.playSound(Click.audioUrl);\r\n        }\r\n        up(event) {\r\n            event.currentTarget.scale(Click.beetleScale, Click.beetleScale);\r\n        }\r\n        move(event) {\r\n            event.currentTarget.scale(Click.beetleScale, Click.beetleScale);\r\n        }\r\n        out(event) {\r\n            event.currentTarget.scale(Click.beetleScale, Click.beetleScale);\r\n        }\r\n    }\r\n    lwg.Btn_Beetle = Btn_Beetle;\r\n    let Animation3D;\r\n    (function (Animation3D) {\r\n        Animation3D.tweenMap = {};\r\n        Animation3D.frameRate = 1;\r\n        function moveTo(target, toPos, duration, caller, ease, complete, delay = 0, coverBefore = true, update, frame) {\r\n            let position = target.transform.position.clone();\r\n            if (duration == 0 || duration === undefined || duration === null) {\r\n                target.transform.position = toPos.clone();\r\n                complete && complete.apply(caller);\r\n                return;\r\n            }\r\n            if (frame <= 0 || frame === undefined || frame === null) {\r\n                frame = Animation3D.frameRate;\r\n            }\r\n            let updateRenderPos = function () {\r\n                if (target.transform) {\r\n                    target.transform.position = position;\r\n                }\r\n                update && update();\r\n            };\r\n            Laya.timer.once(delay, target, function () {\r\n                Laya.timer.frameLoop(frame, target, updateRenderPos);\r\n            });\r\n            let endTween = function () {\r\n                if (target.transform) {\r\n                    target.transform.position = toPos.clone();\r\n                    Laya.timer.clear(target, updateRenderPos);\r\n                }\r\n                complete && complete.apply(caller);\r\n            };\r\n            let tween = Laya.Tween.to(position, { x: toPos.x, y: toPos.y, z: toPos.z }, duration, ease, Laya.Handler.create(target, endTween), delay, coverBefore);\r\n            if (!Animation3D.tweenMap[target.id]) {\r\n                Animation3D.tweenMap[target.id] = [];\r\n            }\r\n            Animation3D.tweenMap[target.id].push(tween);\r\n        }\r\n        Animation3D.moveTo = moveTo;\r\n        function rotateTo(target, toRotation, duration, caller, ease, complete, delay, coverBefore, update, frame) {\r\n            let rotation = target.transform.localRotationEuler.clone();\r\n            if (duration == 0 || duration === undefined || duration === null) {\r\n                target.transform.localRotationEuler = toRotation.clone();\r\n                complete && complete.apply(caller);\r\n                return;\r\n            }\r\n            if (frame <= 0 || frame === undefined || frame === null) {\r\n                frame = Animation3D.frameRate;\r\n            }\r\n            let updateRenderRotation = function () {\r\n                if (target.transform) {\r\n                    target.transform.localRotationEuler = rotation;\r\n                }\r\n                update && update();\r\n            };\r\n            Laya.timer.once(delay, target, function () {\r\n                Laya.timer.frameLoop(frame, target, updateRenderRotation);\r\n            });\r\n            let endTween = function () {\r\n                if (target.transform) {\r\n                    target.transform.localRotationEuler = toRotation.clone();\r\n                    Laya.timer.clear(target, updateRenderRotation);\r\n                }\r\n                complete && complete.apply(caller);\r\n            };\r\n            let tween = Laya.Tween.to(rotation, { x: toRotation.x, y: toRotation.y, z: toRotation.z }, duration, ease, Laya.Handler.create(target, endTween), delay, coverBefore);\r\n            if (!Animation3D.tweenMap[target.id]) {\r\n                Animation3D.tweenMap[target.id] = [];\r\n            }\r\n            Animation3D.tweenMap[target.id].push(tween);\r\n        }\r\n        Animation3D.rotateTo = rotateTo;\r\n        function scaleTo(target, toScale, duration, caller, ease, complete, delay, coverBefore, update, frame) {\r\n            let localScale = target.transform.localScale.clone();\r\n            if (duration == 0 || duration === undefined || duration === null) {\r\n                target.transform.localScale = toScale.clone();\r\n                complete && complete.apply(caller);\r\n                return;\r\n            }\r\n            if (frame <= 0 || frame === undefined || frame === null) {\r\n                frame = Animation3D.frameRate;\r\n            }\r\n            let updateRenderPos = function () {\r\n                target.transform.localScale = localScale.clone();\r\n                update && update();\r\n            };\r\n            Laya.timer.once(delay, this, function () {\r\n                Laya.timer.frameLoop(frame, target, updateRenderPos);\r\n            });\r\n            let endTween = function () {\r\n                target.transform.localScale = toScale.clone();\r\n                Laya.timer.clear(target, updateRenderPos);\r\n                complete && complete.apply(caller);\r\n            };\r\n            let tween = Laya.Tween.to(localScale, { x: toScale.x, y: toScale.y, z: toScale.z }, duration, ease, Laya.Handler.create(target, endTween), delay, coverBefore);\r\n            if (!Animation3D.tweenMap[target.id]) {\r\n                Animation3D.tweenMap[target.id] = [];\r\n            }\r\n            Animation3D.tweenMap[target.id].push(tween);\r\n        }\r\n        Animation3D.scaleTo = scaleTo;\r\n        function ClearTween(target) {\r\n            let tweens = Animation3D.tweenMap[target.id];\r\n            if (tweens && tweens.length) {\r\n                while (tweens.length > 0) {\r\n                    let tween = tweens.pop();\r\n                    tween.clear();\r\n                }\r\n            }\r\n            Laya.timer.clearAll(target);\r\n        }\r\n        Animation3D.ClearTween = ClearTween;\r\n        function rock(target, range, duration, caller, func, delayed, ease) {\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            let v1 = new Laya.Vector3(target.transform.localRotationEulerX + range.x, target.transform.localRotationEulerY + range.y, target.transform.localRotationEulerZ + range.z);\r\n            rotateTo(target, v1, duration / 2, caller, ease, () => {\r\n                let v2 = new Laya.Vector3(target.transform.localRotationEulerX - range.x * 2, target.transform.localRotationEulerY - range.y * 2, target.transform.localRotationEulerZ - range.z * 2);\r\n                rotateTo(target, v2, duration, caller, ease, () => {\r\n                    let v3 = new Laya.Vector3(target.transform.localRotationEulerX + range.x, target.transform.localRotationEulerY + range.y, target.transform.localRotationEulerZ + range.z);\r\n                    rotateTo(target, v3, duration / 2, caller, ease, () => {\r\n                        if (func) {\r\n                            func();\r\n                        }\r\n                    });\r\n                });\r\n            }, delayed);\r\n        }\r\n        Animation3D.rock = rock;\r\n        function moveRotateTo(Sp3d, Target, duration, caller, ease, complete, delay, coverBefore, update, frame) {\r\n            moveTo(Sp3d, Target.transform.position, duration, caller, ease, complete, delay, coverBefore, update, frame);\r\n            rotateTo(Sp3d, Target.transform.localRotationEuler, duration, caller, ease, null, delay, coverBefore, null, frame);\r\n        }\r\n        Animation3D.moveRotateTo = moveRotateTo;\r\n    })(Animation3D = lwg.Animation3D || (lwg.Animation3D = {}));\r\n    let Animation2D;\r\n    (function (Animation2D) {\r\n        function simple_Rotate(node, Frotate, Erotate, time, delayed, func) {\r\n            node.rotation = Frotate;\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            Laya.Tween.to(node, { rotation: Erotate }, time, null, Laya.Handler.create(this, function () {\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.simple_Rotate = simple_Rotate;\r\n        function upDown_Overturn(node, time, func) {\r\n            Laya.Tween.to(node, { scaleY: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { scaleY: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { scaleY: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                        Laya.Tween.to(node, { scaleY: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                            if (func !== null || func !== undefined) {\r\n                                func();\r\n                            }\r\n                        }), 0);\r\n                    }), 0);\r\n                }), 0);\r\n            }), 0);\r\n        }\r\n        Animation2D.upDown_Overturn = upDown_Overturn;\r\n        function leftRight_Overturn(node, time, func) {\r\n            Laya.Tween.to(node, { scaleX: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { scaleX: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { scaleX: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                        Laya.Tween.to(node, { scaleX: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                        }), 0);\r\n                        if (func !== null) {\r\n                            func();\r\n                        }\r\n                    }), 0);\r\n                }), 0);\r\n            }), 0);\r\n        }\r\n        Animation2D.leftRight_Overturn = leftRight_Overturn;\r\n        function leftRight_Shake(node, range, time, delayed, func, click) {\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            if (!click) {\r\n                Admin._clickLock.switch = true;\r\n            }\r\n            Laya.Tween.to(node, { x: node.x - range }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { x: node.x + range * 2 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { x: node.x - range }, time, null, Laya.Handler.create(this, function () {\r\n                        if (func) {\r\n                            func();\r\n                        }\r\n                        if (!click) {\r\n                            Admin._clickLock.switch = false;\r\n                        }\r\n                    }));\r\n                }));\r\n            }), delayed);\r\n        }\r\n        Animation2D.leftRight_Shake = leftRight_Shake;\r\n        function upDwon_Shake(node, range, time, delayed, func) {\r\n            Laya.Tween.to(node, { y: node.y + range }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { y: node.y - range * 2 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { y: node.y + range }, time, null, Laya.Handler.create(this, function () {\r\n                        if (func !== null) {\r\n                            func();\r\n                        }\r\n                    }));\r\n                }));\r\n            }), delayed);\r\n        }\r\n        Animation2D.upDwon_Shake = upDwon_Shake;\r\n        function fadeOut(node, alpha1, alpha2, time, delayed, func) {\r\n            node.alpha = alpha1;\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            Laya.Tween.to(node, { alpha: alpha2 }, time, null, Laya.Handler.create(this, function () {\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.fadeOut = fadeOut;\r\n        function fadeOut_KickBack(node, alpha1, alpha2, time, delayed, func) {\r\n            node.alpha = alpha1;\r\n            Laya.Tween.to(node, { alpha: alpha2 }, time, null, Laya.Handler.create(this, function () {\r\n                if (func !== null) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.fadeOut_KickBack = fadeOut_KickBack;\r\n        function move_FadeOut(node, firstX, firstY, targetX, targetY, time, delayed, func) {\r\n            node.alpha = 0;\r\n            node.x = firstX;\r\n            node.y = firstY;\r\n            Laya.Tween.to(node, { alpha: 1, x: targetX, y: targetY }, time, null, Laya.Handler.create(this, function () {\r\n                if (func !== null) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_FadeOut = move_FadeOut;\r\n        function move_Fade_Out(node, firstX, firstY, targetX, targetY, time, delayed, func) {\r\n            node.alpha = 1;\r\n            node.x = firstX;\r\n            node.y = firstY;\r\n            Laya.Tween.to(node, { alpha: 0, x: targetX, y: targetY }, time, null, Laya.Handler.create(this, function () {\r\n                if (func !== null) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_Fade_Out = move_Fade_Out;\r\n        function move_FadeOut_Scale_01(node, firstX, firstY, targetX, targetY, time, delayed, func) {\r\n            node.alpha = 0;\r\n            node.targetX = 0;\r\n            node.targetY = 0;\r\n            node.x = firstX;\r\n            node.y = firstY;\r\n            Laya.Tween.to(node, { alpha: 1, x: targetX, y: targetY, scaleX: 1, scaleY: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                if (func !== null) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_FadeOut_Scale_01 = move_FadeOut_Scale_01;\r\n        function move_Scale(node, fScale, fX, fY, tX, tY, eScale, time, delayed, ease, func) {\r\n            node.scaleX = fScale;\r\n            node.scaleY = fScale;\r\n            node.x = fX;\r\n            node.y = fY;\r\n            Laya.Tween.to(node, { x: tX, y: tY, scaleX: eScale, scaleY: eScale }, time, ease ? null : ease, Laya.Handler.create(this, function () {\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_Scale = move_Scale;\r\n        function rotate_Scale(target, fRotate, fScaleX, fScaleY, eRotate, eScaleX, eScaleY, time, delayed, func) {\r\n            target.scaleX = fScaleX;\r\n            target.scaleY = fScaleY;\r\n            target.rotation = fRotate;\r\n            Laya.Tween.to(target, { rotation: eRotate, scaleX: eScaleX, scaleY: eScaleY }, time, null, Laya.Handler.create(this, () => {\r\n                if (func) {\r\n                    func();\r\n                }\r\n                target.rotation = 0;\r\n            }), delayed ? delayed : 0);\r\n        }\r\n        Animation2D.rotate_Scale = rotate_Scale;\r\n        function drop_Simple(node, fY, tY, rotation, time, delayed, func) {\r\n            node.y = fY;\r\n            Laya.Tween.to(node, { y: tY, rotation: rotation }, time, Laya.Ease.circOut, Laya.Handler.create(this, function () {\r\n                if (func !== null) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.drop_Simple = drop_Simple;\r\n        function drop_KickBack(target, fAlpha, firstY, targetY, extendY, time1, delayed, func) {\r\n            target.alpha = fAlpha;\r\n            target.y = firstY;\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            Laya.Tween.to(target, { alpha: 1, y: targetY + extendY }, time1, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(target, { y: targetY - extendY / 2 }, time1 / 2, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(target, { y: targetY }, time1 / 4, null, Laya.Handler.create(this, function () {\r\n                        if (func) {\r\n                            func();\r\n                        }\r\n                    }), 0);\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.drop_KickBack = drop_KickBack;\r\n        function drop_Excursion(node, targetY, targetX, rotation, time, delayed, func) {\r\n            Laya.Tween.to(node, { x: node.x + targetX, y: node.y + targetY * 1 / 6 }, time, Laya.Ease.expoIn, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { x: node.x + targetX + 50, y: targetY, rotation: rotation }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func !== null) {\r\n                        func();\r\n                    }\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.drop_Excursion = drop_Excursion;\r\n        function goUp_Simple(node, initialY, initialR, targetY, time, delayed, func) {\r\n            node.y = initialY;\r\n            node.rotation = initialR;\r\n            Laya.Tween.to(node, { y: targetY, rotation: 0 }, time, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {\r\n                if (func !== null) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.goUp_Simple = goUp_Simple;\r\n        function cardRotateX_TowFace(node, time, func1, delayed, func2) {\r\n            Laya.Tween.to(node, { scaleX: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                Tools.node_ChildrenVisible(node, false);\r\n                if (func1) {\r\n                    func1();\r\n                }\r\n                Laya.Tween.to(node, { scaleX: 1 }, time * 0.9, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { scaleX: 0 }, time * 0.8, null, Laya.Handler.create(this, function () {\r\n                        Tools.node_ChildrenVisible(node, true);\r\n                        Laya.Tween.to(node, { scaleX: 1 }, time * 0.7, null, Laya.Handler.create(this, function () {\r\n                            if (func2) {\r\n                                func2();\r\n                            }\r\n                        }), 0);\r\n                    }), 0);\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.cardRotateX_TowFace = cardRotateX_TowFace;\r\n        function cardRotateX_OneFace(node, func1, time, delayed, func2) {\r\n            Laya.Tween.to(node, { scaleX: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                if (func1 !== null) {\r\n                    func1();\r\n                }\r\n                Laya.Tween.to(node, { scaleX: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func2 !== null) {\r\n                        func2();\r\n                    }\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.cardRotateX_OneFace = cardRotateX_OneFace;\r\n        function cardRotateY_TowFace(node, time, func1, delayed, func2) {\r\n            Laya.Tween.to(node, { scaleY: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                Tools.node_ChildrenVisible(node, false);\r\n                if (func1) {\r\n                    func1();\r\n                }\r\n                Laya.Tween.to(node, { scaleY: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { scaleY: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                        Laya.Tween.to(node, { scaleY: 1 }, time * 1 / 2, null, Laya.Handler.create(this, function () {\r\n                            Tools.node_ChildrenVisible(node, true);\r\n                            if (func2) {\r\n                                func2();\r\n                            }\r\n                        }), 0);\r\n                    }), 0);\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.cardRotateY_TowFace = cardRotateY_TowFace;\r\n        function cardRotateY_OneFace(node, func1, time, delayed, func2) {\r\n            Laya.Tween.to(node, { scaleY: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                if (func1 !== null) {\r\n                    func1();\r\n                }\r\n                Laya.Tween.to(node, { scaleY: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func2 !== null) {\r\n                        func2();\r\n                    }\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.cardRotateY_OneFace = cardRotateY_OneFace;\r\n        function move_changeRotate(node, targetX, targetY, per, rotation_pe, time, func) {\r\n            let targetPerX = targetX * per + node.x * (1 - per);\r\n            let targetPerY = targetY * per + node.y * (1 - per);\r\n            Laya.Tween.to(node, { x: targetPerX, y: targetPerY, rotation: 45 }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { x: targetX, y: targetY, rotation: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func !== null) {\r\n                        func();\r\n                    }\r\n                }), 0);\r\n            }), 0);\r\n        }\r\n        Animation2D.move_changeRotate = move_changeRotate;\r\n        function bombs_Appear(node, firstAlpha, firstScale, scale1, rotation, time1, time2, delayed, audioType, func) {\r\n            node.scale(0, 0);\r\n            node.alpha = firstAlpha;\r\n            Laya.Tween.to(node, { scaleX: scale1, scaleY: scale1, alpha: 1, rotation: rotation }, time1, Laya.Ease.cubicInOut, Laya.Handler.create(this, function () {\r\n                switch (audioType) {\r\n                    case 'balloon':\r\n                        break;\r\n                    case 'common':\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                Laya.Tween.to(node, { scaleX: firstScale, scaleY: firstScale, rotation: 0 }, time2, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { scaleX: firstScale + (scale1 - firstScale) * 0.2, scaleY: firstScale + (scale1 - firstScale) * 0.2, rotation: 0 }, time2, null, Laya.Handler.create(this, function () {\r\n                        Laya.Tween.to(node, { scaleX: firstScale, scaleY: firstScale, rotation: 0 }, time2, null, Laya.Handler.create(this, function () {\r\n                            if (func) {\r\n                                func();\r\n                            }\r\n                        }), 0);\r\n                    }), 0);\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.bombs_Appear = bombs_Appear;\r\n        function bombs_Vanish(node, scale, alpha, rotation, time, delayed, func) {\r\n            Laya.Tween.to(node, { scaleX: scale, scaleY: scale, alpha: alpha, rotation: rotation }, time, Laya.Ease.cubicOut, Laya.Handler.create(this, function () {\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.bombs_Vanish = bombs_Vanish;\r\n        function swell_shrink(node, firstScale, scale1, time, delayed, func) {\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            Laya.Tween.to(node, { scaleX: scale1, scaleY: scale1, alpha: 1, }, time, Laya.Ease.cubicInOut, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { scaleX: firstScale, scaleY: firstScale, rotation: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { scaleX: firstScale + (scale1 - firstScale) * 0.5, scaleY: firstScale + (scale1 - firstScale) * 0.5, rotation: 0 }, time * 0.5, null, Laya.Handler.create(this, function () {\r\n                        Laya.Tween.to(node, { scaleX: firstScale, scaleY: firstScale, rotation: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                            if (func) {\r\n                                func();\r\n                            }\r\n                        }), 0);\r\n                    }), 0);\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.swell_shrink = swell_shrink;\r\n        function move_Simple(node, fX, fY, targetX, targetY, time, delayed, func, ease) {\r\n            node.x = fX;\r\n            node.y = fY;\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            Laya.Tween.to(node, { x: targetX, y: targetY }, time, ease ? ease : null, Laya.Handler.create(this, function () {\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_Simple = move_Simple;\r\n        function move_Simple_01(node, firstX, firstY, targetX, targetY, time, ease, delayed, func) {\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            if (!ease) {\r\n                ease = null;\r\n            }\r\n            node.x = firstX;\r\n            node.y = firstY;\r\n            Laya.Tween.to(node, { x: targetX, y: targetY }, time, ease, Laya.Handler.create(this, function () {\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_Simple_01 = move_Simple_01;\r\n        function move_Deform_X(node, firstX, firstR, targetX, scaleX, scaleY, time, delayed, func) {\r\n            node.alpha = 0;\r\n            node.x = firstX;\r\n            node.rotation = firstR;\r\n            Laya.Tween.to(node, { x: targetX, scaleX: 1 + scaleX, scaleY: 1 + scaleY, rotation: firstR / 3, alpha: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { scaleX: 1, scaleY: 1, rotation: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func !== null) {\r\n                        func();\r\n                    }\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_Deform_X = move_Deform_X;\r\n        function move_Deform_Y(target, firstY, firstR, targeY, scaleX, scaleY, time, delayed, func) {\r\n            target.alpha = 0;\r\n            if (firstY) {\r\n                target.y = firstY;\r\n            }\r\n            target.rotation = firstR;\r\n            Laya.Tween.to(target, { y: targeY, scaleX: 1 + scaleX, scaleY: 1 + scaleY, rotation: firstR / 3, alpha: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(target, { scaleX: 1, scaleY: 1, rotation: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func !== null) {\r\n                        func();\r\n                    }\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.move_Deform_Y = move_Deform_Y;\r\n        function blink_FadeOut_v(target, minAlpha, maXalpha, time, delayed, func) {\r\n            target.alpha = minAlpha;\r\n            Laya.Tween.to(target, { alpha: maXalpha }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(target, { alpha: minAlpha }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func !== null) {\r\n                        func();\r\n                    }\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.blink_FadeOut_v = blink_FadeOut_v;\r\n        function blink_FadeOut(target, minAlpha, maXalpha, time, delayed, func) {\r\n            target.alpha = minAlpha;\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            Laya.Tween.to(target, { alpha: minAlpha }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(target, { alpha: maXalpha }, time, null, Laya.Handler.create(this, function () {\r\n                    if (func) {\r\n                        func();\r\n                    }\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.blink_FadeOut = blink_FadeOut;\r\n        function shookHead_Simple(target, rotate, time, delayed, func) {\r\n            let firstR = target.rotation;\r\n            Laya.Tween.to(target, { rotation: firstR + rotate }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(target, { rotation: firstR - rotate * 2 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(target, { rotation: firstR + rotate }, time, null, Laya.Handler.create(this, function () {\r\n                        Laya.Tween.to(target, { rotation: firstR }, time, null, Laya.Handler.create(this, function () {\r\n                            if (func !== null) {\r\n                                func();\r\n                            }\r\n                        }), 0);\r\n                    }), 0);\r\n                }), 0);\r\n            }), delayed);\r\n        }\r\n        Animation2D.shookHead_Simple = shookHead_Simple;\r\n        function HintAni_01(target, upNum, time1, stopTime, downNum, time2, func) {\r\n            target.alpha = 0;\r\n            Laya.Tween.to(target, { alpha: 1, y: target.y - upNum }, time1, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(target, { y: target.y - 15 }, stopTime, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(target, { alpha: 0, y: target.y + upNum + downNum }, time2, null, Laya.Handler.create(this, function () {\r\n                        if (func !== null) {\r\n                            func();\r\n                        }\r\n                    }), 0);\r\n                }), 0);\r\n            }), 0);\r\n        }\r\n        Animation2D.HintAni_01 = HintAni_01;\r\n        function scale_Alpha(target, fAlpha, fScaleX, fScaleY, eScaleX, eScaleY, eAlpha, time, delayed, func, ease) {\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            if (!delayed) {\r\n                ease = null;\r\n            }\r\n            target.alpha = fAlpha;\r\n            target.scaleX = fScaleX;\r\n            target.scaleY = fScaleY;\r\n            Laya.Tween.to(target, { scaleX: eScaleX, scaleY: eScaleY, alpha: eAlpha }, time, ease, Laya.Handler.create(this, function () {\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }), delayed);\r\n        }\r\n        Animation2D.scale_Alpha = scale_Alpha;\r\n        function rotate_Magnify_KickBack(node, eAngle, eScale, time1, time2, delayed1, delayed2, func) {\r\n            node.alpha = 0;\r\n            node.scaleX = 0;\r\n            node.scaleY = 0;\r\n            Laya.Tween.to(node, { alpha: 1, rotation: 360 + eAngle, scaleX: 1 + eScale, scaleY: 1 + eScale }, time1, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(node, { rotation: 360 - eAngle / 2, scaleX: 1 + eScale / 2, scaleY: 1 + eScale / 2 }, time2, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(node, { rotation: 360 + eAngle / 3, scaleX: 1 + eScale / 5, scaleY: 1 + eScale / 5 }, time2, null, Laya.Handler.create(this, function () {\r\n                        Laya.Tween.to(node, { rotation: 360, scaleX: 1, scaleY: 1 }, time2, null, Laya.Handler.create(this, function () {\r\n                            node.rotation = 0;\r\n                            if (func !== null) {\r\n                                func();\r\n                            }\r\n                        }), 0);\r\n                    }), delayed2);\r\n                }), 0);\r\n            }), delayed1);\r\n        }\r\n        Animation2D.rotate_Magnify_KickBack = rotate_Magnify_KickBack;\r\n    })(Animation2D = lwg.Animation2D || (lwg.Animation2D = {}));\r\n    let Setting;\r\n    (function (Setting) {\r\n        Setting._sound = {\r\n            get switch() {\r\n                return Laya.LocalStorage.getItem('Setting_sound') == '0' ? false : true;\r\n            },\r\n            set switch(value) {\r\n                let val;\r\n                if (value) {\r\n                    val = 1;\r\n                }\r\n                else {\r\n                    val = 0;\r\n                }\r\n                Laya.LocalStorage.setItem('Setting_sound', val.toString());\r\n            }\r\n        };\r\n        Setting._bgMusic = {\r\n            get switch() {\r\n                return Laya.LocalStorage.getItem('Setting_bgMusic') == '0' ? false : true;\r\n            },\r\n            set switch(value) {\r\n                let val;\r\n                if (value) {\r\n                    val = 1;\r\n                    Laya.LocalStorage.setItem('Setting_bgMusic', val.toString());\r\n                    PalyAudio.playMusic();\r\n                }\r\n                else {\r\n                    val = 0;\r\n                    Laya.LocalStorage.setItem('Setting_bgMusic', val.toString());\r\n                    PalyAudio.stopMusic();\r\n                }\r\n            }\r\n        };\r\n        Setting._shake = {\r\n            get switch() {\r\n                return Laya.LocalStorage.getItem('Setting_shake') == '0' ? false : true;\r\n            },\r\n            set switch(value) {\r\n                let val;\r\n                if (value) {\r\n                    val = 1;\r\n                }\r\n                else {\r\n                    val = 0;\r\n                }\r\n                Laya.LocalStorage.setItem('Setting_shake', val.toString());\r\n            }\r\n        };\r\n        function createSetBtn(x, y, width, height, url, parent) {\r\n            let _url = 'Frame/UI/icon_set.png';\r\n            let btn = new Laya.Image;\r\n            if (width) {\r\n                btn.width = width;\r\n            }\r\n            else {\r\n                btn.width = 100;\r\n            }\r\n            if (height) {\r\n                btn.height = height;\r\n            }\r\n            else {\r\n                btn.height = 100;\r\n            }\r\n            if (url) {\r\n                btn.skin = url;\r\n            }\r\n            else {\r\n                btn.skin = _url;\r\n            }\r\n            if (parent) {\r\n                parent.addChild(btn);\r\n            }\r\n            else {\r\n                Laya.stage.addChild(btn);\r\n            }\r\n            btn.pivotX = btn.width / 2;\r\n            btn.pivotY = btn.height / 2;\r\n            btn.x = x;\r\n            btn.y = y;\r\n            btn.zOrder = 100;\r\n            var btnSetUp = function (e) {\r\n                e.stopPropagation();\r\n                Admin._openScene(Admin.SceneName.UISet);\r\n            };\r\n            Click.on(Click.Type.largen, btn, null, null, null, btnSetUp, null);\r\n            Setting.BtnSetNode = btn;\r\n            Setting.BtnSetNode.name = 'BtnSetNode';\r\n        }\r\n        Setting.createSetBtn = createSetBtn;\r\n        function setBtnAppear(delayed, x, y) {\r\n            if (delayed) {\r\n                Animation2D.scale_Alpha(Setting.BtnSetNode, 0, 1, 1, 1, 1, 1, delayed, 0, f => {\r\n                    Setting.BtnSetNode.visible = true;\r\n                });\r\n            }\r\n            else {\r\n                Setting.BtnSetNode.visible = true;\r\n            }\r\n            if (x) {\r\n                Setting.BtnSetNode.x = x;\r\n            }\r\n            if (y) {\r\n                Setting.BtnSetNode.y = y;\r\n            }\r\n        }\r\n        Setting.setBtnAppear = setBtnAppear;\r\n        function setBtnVinish(delayed) {\r\n            if (delayed) {\r\n                Animation2D.scale_Alpha(Setting.BtnSetNode, 1, 1, 1, 1, 1, 0, delayed, 0, f => {\r\n                    Setting.BtnSetNode.visible = false;\r\n                });\r\n            }\r\n            else {\r\n                Setting.BtnSetNode.visible = false;\r\n            }\r\n        }\r\n        Setting.setBtnVinish = setBtnVinish;\r\n    })(Setting = lwg.Setting || (lwg.Setting = {}));\r\n    let PalyAudio;\r\n    (function (PalyAudio) {\r\n        let voiceUrl;\r\n        (function (voiceUrl) {\r\n            voiceUrl[\"btn\"] = \"Frame/Voice/btn.wav\";\r\n            voiceUrl[\"bgm\"] = \"Frame/Voice/bgm.mp3\";\r\n            voiceUrl[\"victory\"] = \"Frame/Voice/guoguan.wav\";\r\n            voiceUrl[\"defeated\"] = \"Frame/Voice/wancheng.wav\";\r\n        })(voiceUrl = PalyAudio.voiceUrl || (PalyAudio.voiceUrl = {}));\r\n        function playSound(url, number, func) {\r\n            if (!url) {\r\n                url = voiceUrl.btn;\r\n            }\r\n            if (!number) {\r\n                number = 1;\r\n            }\r\n            if (Setting._sound.switch) {\r\n                Laya.SoundManager.playSound(url, number, Laya.Handler.create(this, function () {\r\n                    if (func) {\r\n                        func();\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        PalyAudio.playSound = playSound;\r\n        function playDefeatedSound(url, number, func) {\r\n            if (!url) {\r\n                url = voiceUrl.defeated;\r\n            }\r\n            if (!number) {\r\n                number = 1;\r\n            }\r\n            if (Setting._sound.switch) {\r\n                Laya.SoundManager.playSound(url, number, Laya.Handler.create(this, function () {\r\n                    if (func) {\r\n                        func();\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        PalyAudio.playDefeatedSound = playDefeatedSound;\r\n        function playVictorySound(url, number, func) {\r\n            if (!url) {\r\n                url = voiceUrl.victory;\r\n            }\r\n            if (!number) {\r\n                number = 1;\r\n            }\r\n            if (Setting._sound.switch) {\r\n                Laya.SoundManager.playSound(url, number, Laya.Handler.create(this, function () {\r\n                    if (func) {\r\n                        func();\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        PalyAudio.playVictorySound = playVictorySound;\r\n        function playMusic(url, number, delayed) {\r\n            if (!url) {\r\n                url = voiceUrl.bgm;\r\n            }\r\n            if (!number) {\r\n                number = 0;\r\n            }\r\n            if (!delayed) {\r\n                delayed = 0;\r\n            }\r\n            if (Setting._bgMusic.switch) {\r\n                Laya.SoundManager.playMusic(url, number, Laya.Handler.create(this, function () { }), delayed);\r\n            }\r\n        }\r\n        PalyAudio.playMusic = playMusic;\r\n        function stopMusic() {\r\n            Laya.SoundManager.stopMusic();\r\n        }\r\n        PalyAudio.stopMusic = stopMusic;\r\n    })(PalyAudio = lwg.PalyAudio || (lwg.PalyAudio = {}));\r\n    let Tools;\r\n    (function (Tools) {\r\n        function node_RemoveAllChildren(node) {\r\n            if (node.numChildren > 0) {\r\n                node.removeChildren(0, node.numChildren - 1);\r\n            }\r\n        }\r\n        Tools.node_RemoveAllChildren = node_RemoveAllChildren;\r\n        function node_ChildrenVisible(node, bool) {\r\n            for (let index = 0; index < node.numChildren; index++) {\r\n                const element = node.getChildAt(index);\r\n                if (bool) {\r\n                    element.active = false;\r\n                }\r\n                else {\r\n                    element.active = true;\r\n                }\r\n            }\r\n        }\r\n        Tools.node_ChildrenVisible = node_ChildrenVisible;\r\n        function node_3dFindChild(parent, name) {\r\n            var item = null;\r\n            item = parent.getChildByName(name);\r\n            if (item != null)\r\n                return item;\r\n            var go = null;\r\n            for (var i = 0; i < parent.numChildren; i++) {\r\n                go = node_3dFindChild(parent.getChildAt(i), name);\r\n                if (go != null)\r\n                    return go;\r\n            }\r\n            return null;\r\n        }\r\n        Tools.node_3dFindChild = node_3dFindChild;\r\n        function node_2dFindChild(parent, name) {\r\n            var item = null;\r\n            item = parent.getChildByName(name);\r\n            if (item != null)\r\n                return item;\r\n            var go = null;\r\n            for (var i = 0; i < parent.numChildren; i++) {\r\n                go = node_2dFindChild(parent.getChildAt(i), name);\r\n                if (go != null)\r\n                    return go;\r\n            }\r\n            return null;\r\n        }\r\n        Tools.node_2dFindChild = node_2dFindChild;\r\n        function randomOneHalf() {\r\n            let number;\r\n            number = Math.floor(Math.random() * 2);\r\n            return number;\r\n        }\r\n        Tools.randomOneHalf = randomOneHalf;\r\n        function randomNumber(section1, section2) {\r\n            if (section2) {\r\n                return Math.floor(Math.random() * (section2 - section1)) + section1;\r\n            }\r\n            else {\r\n                return Math.floor(Math.random() * section1);\r\n            }\r\n        }\r\n        Tools.randomNumber = randomNumber;\r\n        function randomCountNumer(section1, section2, count, intSet) {\r\n            let arr = [];\r\n            if (!count) {\r\n                count = 1;\r\n            }\r\n            if (!intSet) {\r\n                intSet = true;\r\n            }\r\n            if (section2) {\r\n                while (count > arr.length) {\r\n                    let num;\r\n                    if (intSet) {\r\n                        num = Math.floor(Math.random() * (section2 - section1)) + section1;\r\n                    }\r\n                    else {\r\n                        num = Math.random() * (section2 - section1) + section1;\r\n                    }\r\n                    arr.push(num);\r\n                    Tools.arrayUnique_01(arr);\r\n                }\r\n                ;\r\n                return arr;\r\n            }\r\n            else {\r\n                while (count > arr.length) {\r\n                    let num;\r\n                    if (intSet) {\r\n                        num = Math.floor(Math.random() * (section2 - section1)) + section1;\r\n                    }\r\n                    else {\r\n                        num = Math.random() * (section2 - section1) + section1;\r\n                    }\r\n                    arr.push(num);\r\n                    Tools.arrayUnique_01(arr);\r\n                }\r\n                return arr;\r\n            }\r\n        }\r\n        Tools.randomCountNumer = randomCountNumer;\r\n        function color_ToHexString(r, g, b) {\r\n            return '#' + (\"00000\" + (r << 16 | g << 8 | b).toString(16)).slice(-6);\r\n        }\r\n        Tools.color_ToHexString = color_ToHexString;\r\n        function color_Filter(node, arr, vanishtime) {\r\n            let cf = new Laya.ColorFilter();\r\n            cf.color(255, 0, 0, 1);\r\n            node.filters = [cf];\r\n            if (vanishtime) {\r\n                Laya.timer.once(vanishtime, this, () => {\r\n                    for (let index = 0; index < node.filters.length; index++) {\r\n                        if (node.filters[index] == cf) {\r\n                            node.filters = [];\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        Tools.color_Filter = color_Filter;\r\n        function d2_dotRotateXY(x0, y0, x1, y1, angle) {\r\n            let x2 = x0 + (x1 - x0) * Math.cos(angle * Math.PI / 180) - (y1 - y0) * Math.sin(angle * Math.PI / 180);\r\n            let y2 = y0 + (x1 - x0) * Math.sin(angle * Math.PI / 180) + (y1 - y0) * Math.cos(angle * Math.PI / 180);\r\n            return new Laya.Point(x2, y2);\r\n        }\r\n        Tools.d2_dotRotateXY = d2_dotRotateXY;\r\n        function d2_twoObjectsLen(obj1, obj2) {\r\n            let point = new Laya.Point(obj1.x, obj1.y);\r\n            let len = point.distance(obj2.x, obj2.y);\r\n            return len;\r\n        }\r\n        Tools.d2_twoObjectsLen = d2_twoObjectsLen;\r\n        function d2_Vector_Angle(x, y) {\r\n            let radian = Math.atan2(x, y);\r\n            let angle = 90 - radian * (180 / Math.PI);\r\n            if (angle <= 0) {\r\n                angle = 270 + (90 + angle);\r\n            }\r\n            return angle - 90;\r\n        }\r\n        Tools.d2_Vector_Angle = d2_Vector_Angle;\r\n        ;\r\n        function d2_angle_Vector(angle) {\r\n            angle -= 90;\r\n            let radian = (90 - angle) / (180 / Math.PI);\r\n            let p = new Laya.Point(Math.sin(radian), Math.cos(radian));\r\n            p.normalize();\r\n            return p;\r\n        }\r\n        Tools.d2_angle_Vector = d2_angle_Vector;\r\n        ;\r\n        function d3_twoObjectsLen(obj1, obj2) {\r\n            let obj1V3 = obj1.transform.position;\r\n            let obj2V3 = obj2.transform.position;\r\n            let p = new Laya.Vector3();\r\n            Laya.Vector3.subtract(obj1V3, obj2V3, p);\r\n            let lenp = Laya.Vector3.scalarLength(p);\r\n            return lenp;\r\n        }\r\n        Tools.d3_twoObjectsLen = d3_twoObjectsLen;\r\n        function d3_twoPositionLen(v1, v2) {\r\n            let p = d3_twoSubV3(v1, v2);\r\n            let lenp = Laya.Vector3.scalarLength(p);\r\n            return lenp;\r\n        }\r\n        Tools.d3_twoPositionLen = d3_twoPositionLen;\r\n        function d3_twoSubV3(V3_01, V3_02, normalizing) {\r\n            let p = new Laya.Vector3();\r\n            Laya.Vector3.subtract(V3_01, V3_02, p);\r\n            if (normalizing) {\r\n                let p1 = new Laya.Vector3();\r\n                Laya.Vector3.normalize(p, p1);\r\n                return p1;\r\n            }\r\n            else {\r\n                return p;\r\n            }\r\n        }\r\n        Tools.d3_twoSubV3 = d3_twoSubV3;\r\n        function d3_maximumDistanceLimi(originV3, obj, length) {\r\n            let subP = new Laya.Vector3();\r\n            let objP = obj.transform.position;\r\n            Laya.Vector3.subtract(objP, originV3, subP);\r\n            let lenP = Laya.Vector3.scalarLength(subP);\r\n            if (lenP >= length) {\r\n                let normalizP = new Laya.Vector3();\r\n                Laya.Vector3.normalize(subP, normalizP);\r\n                let x = originV3.x + normalizP.x * length;\r\n                let y = originV3.y + normalizP.y * length;\r\n                let z = originV3.z + normalizP.z * length;\r\n                let p = new Laya.Vector3(x, y, z);\r\n                obj.transform.position = p;\r\n                return p;\r\n            }\r\n        }\r\n        Tools.d3_maximumDistanceLimi = d3_maximumDistanceLimi;\r\n        function d3_rayScanning(camera, scene3D, vector2, filtrateName) {\r\n            let _ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0));\r\n            let outs = new Array();\r\n            camera.viewportPointToRay(vector2, _ray);\r\n            scene3D.physicsSimulation.rayCastAll(_ray, outs);\r\n            if (outs.length != 0 && filtrateName) {\r\n                let outsChaild = null;\r\n                for (var i = 0; i < outs.length; i++) {\r\n                    let hitResult = outs[i].collider.owner;\r\n                    if (hitResult.name === filtrateName) {\r\n                        outsChaild = outs[i];\r\n                    }\r\n                }\r\n                return outsChaild;\r\n            }\r\n            else {\r\n                return outs;\r\n            }\r\n        }\r\n        Tools.d3_rayScanning = d3_rayScanning;\r\n        function d3_TransitionScreenPointfor(v3, camera) {\r\n            let ScreenV3 = new Laya.Vector3();\r\n            camera.viewport.project(v3, camera.projectionViewMatrix, ScreenV3);\r\n            let point = new Laya.Vector2();\r\n            point.x = ScreenV3.x;\r\n            point.y = ScreenV3.y;\r\n            return point;\r\n        }\r\n        Tools.d3_TransitionScreenPointfor = d3_TransitionScreenPointfor;\r\n        function d3_animatorPlay(Sp3D, aniName, normalizedTime, layerIndex) {\r\n            let sp3DAni = Sp3D.getComponent(Laya.Animator);\r\n            if (!sp3DAni) {\r\n                console.log(Sp3D.name, '没有动画组件');\r\n                return;\r\n            }\r\n            if (!layerIndex) {\r\n                layerIndex = 0;\r\n            }\r\n            sp3DAni.play(aniName, layerIndex, normalizedTime);\r\n            return sp3DAni;\r\n        }\r\n        Tools.d3_animatorPlay = d3_animatorPlay;\r\n        function dAll_reverseVector(type, Vecoter1, Vecoter2, normalizing) {\r\n            let p;\r\n            if (type === '2d') {\r\n                p = new Laya.Point(Vecoter1.x - Vecoter2.x, Vecoter1.y - Vecoter2.y);\r\n                if (normalizing) {\r\n                    p.normalize();\r\n                }\r\n                return p;\r\n            }\r\n            else if (type === '3d') {\r\n                p = new Laya.Vector3(Vecoter1.x - Vecoter2.x, Vecoter1.y - Vecoter2.y, Vecoter1.z - Vecoter2.z);\r\n                if (normalizing) {\r\n                    let returnP = new Laya.Vector3();\r\n                    Laya.Vector3.normalize(p, returnP);\r\n                    return returnP;\r\n                }\r\n                else {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        Tools.dAll_reverseVector = dAll_reverseVector;\r\n        function sk_indexControl(sk, name) {\r\n            sk.play(name, true);\r\n            sk.player.currentTime = 15 * 1000 / sk.player.cacheFrameRate;\r\n        }\r\n        Tools.sk_indexControl = sk_indexControl;\r\n        function img_drawPieMask(parent, startAngle, endAngle) {\r\n            parent.cacheAs = \"bitmap\";\r\n            let drawPieSpt = new Laya.Sprite();\r\n            drawPieSpt.blendMode = \"destination-out\";\r\n            parent.addChild(drawPieSpt);\r\n            let drawPie = drawPieSpt.graphics.drawPie(parent.width / 2, parent.height / 2, parent.width / 2 + 10, startAngle, endAngle, \"#000000\");\r\n            return drawPie;\r\n        }\r\n        Tools.img_drawPieMask = img_drawPieMask;\r\n        function objArrPropertySort(array, property) {\r\n            var compare = function (obj1, obj2) {\r\n                var val1 = obj1[property];\r\n                var val2 = obj2[property];\r\n                if (!isNaN(Number(val1)) && !isNaN(Number(val2))) {\r\n                    val1 = Number(val1);\r\n                    val2 = Number(val2);\r\n                }\r\n                if (val1 < val2) {\r\n                    return -1;\r\n                }\r\n                else if (val1 > val2) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            };\r\n            array.sort(compare);\r\n            return array;\r\n        }\r\n        Tools.objArrPropertySort = objArrPropertySort;\r\n        function objArr2DifferentPropertyObjArr1(objArr1, objArr2, property) {\r\n            var result = [];\r\n            for (var i = 0; i < objArr1.length; i++) {\r\n                var obj1 = objArr1[i];\r\n                var obj1Name = obj1[property];\r\n                var isExist = false;\r\n                for (var j = 0; j < objArr2.length; j++) {\r\n                    var obj2 = objArr2[j];\r\n                    var obj2Name = obj2[property];\r\n                    if (obj2Name == obj1Name) {\r\n                        isExist = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!isExist) {\r\n                    result.push(obj1);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        Tools.objArr2DifferentPropertyObjArr1 = objArr2DifferentPropertyObjArr1;\r\n        function objArr1IdenticalPropertyObjArr2(data1, data2, property) {\r\n            var result = [];\r\n            for (var i = 0; i < data1.length; i++) {\r\n                var obj1 = data1[i];\r\n                var obj1Name = obj1[property];\r\n                var isExist = false;\r\n                for (var j = 0; j < data2.length; j++) {\r\n                    var obj2 = data2[j];\r\n                    var obj2Name = obj2[property];\r\n                    if (obj2Name == name) {\r\n                        isExist = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (isExist) {\r\n                    result.push(obj1);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        Tools.objArr1IdenticalPropertyObjArr2 = objArr1IdenticalPropertyObjArr2;\r\n        function objArrUnique(arr, property) {\r\n            for (var i = 0, len = arr.length; i < len; i++) {\r\n                for (var j = i + 1, len = arr.length; j < len; j++) {\r\n                    if (arr[i][property] === arr[j][property]) {\r\n                        arr.splice(j, 1);\r\n                        j--;\r\n                        len--;\r\n                    }\r\n                }\r\n            }\r\n            return arr;\r\n        }\r\n        Tools.objArrUnique = objArrUnique;\r\n        function objArrGetValue(objArr, property) {\r\n            let arr = [];\r\n            for (let i = 0; i < objArr.length; i++) {\r\n                if (objArr[i][property]) {\r\n                    arr.push(objArr[i][property]);\r\n                }\r\n            }\r\n            return arr;\r\n        }\r\n        Tools.objArrGetValue = objArrGetValue;\r\n        function objArray_Copy(ObjArray) {\r\n            var sourceCopy = ObjArray instanceof Array ? [] : {};\r\n            for (var item in ObjArray) {\r\n                sourceCopy[item] = typeof ObjArray[item] === 'object' ? obj_Copy(ObjArray[item]) : ObjArray[item];\r\n            }\r\n            return sourceCopy;\r\n        }\r\n        Tools.objArray_Copy = objArray_Copy;\r\n        function obj_Copy(obj) {\r\n            var objCopy = {};\r\n            for (const item in obj) {\r\n                if (obj.hasOwnProperty(item)) {\r\n                    const element = obj[item];\r\n                    if (typeof element === 'object') {\r\n                        if (Array.isArray(element)) {\r\n                            let arr1 = array_Copy(element);\r\n                            objCopy[item] = arr1;\r\n                        }\r\n                        else {\r\n                            obj_Copy(element);\r\n                        }\r\n                    }\r\n                    else {\r\n                        objCopy[item] = element;\r\n                    }\r\n                }\r\n            }\r\n            return objCopy;\r\n        }\r\n        Tools.obj_Copy = obj_Copy;\r\n        function arrayAddToarray(array1, array2) {\r\n            for (let index = 0; index < array2.length; index++) {\r\n                const element = array2[index];\r\n                array1.push(element);\r\n            }\r\n            return array1;\r\n        }\r\n        Tools.arrayAddToarray = arrayAddToarray;\r\n        function arrayRandomGetOut(arr, num) {\r\n            if (!num) {\r\n                num = 1;\r\n            }\r\n            let arr0 = [];\r\n            if (num > arr.length) {\r\n                return '数组长度小于取出的数！';\r\n            }\r\n            else {\r\n                for (let index = 0; index < num; index++) {\r\n                    let ran = Math.floor(Math.random() * (arr.length - 1));\r\n                    let a1 = arr[ran];\r\n                    arr.splice(ran, 1);\r\n                    arr0.push(a1);\r\n                }\r\n                return arr0;\r\n            }\r\n        }\r\n        Tools.arrayRandomGetOut = arrayRandomGetOut;\r\n        function array_Copy(arr1) {\r\n            var arr = [];\r\n            for (var i = 0; i < arr1.length; i++) {\r\n                arr.push(arr1[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        Tools.array_Copy = array_Copy;\r\n        function arrayUnique_01(arr) {\r\n            for (var i = 0, len = arr.length; i < len; i++) {\r\n                for (var j = i + 1, len = arr.length; j < len; j++) {\r\n                    if (arr[i] === arr[j]) {\r\n                        arr.splice(j, 1);\r\n                        j--;\r\n                        len--;\r\n                    }\r\n                }\r\n            }\r\n            return arr;\r\n        }\r\n        Tools.arrayUnique_01 = arrayUnique_01;\r\n        function arrayUnique_02(arr) {\r\n            arr = arr.sort();\r\n            var arr1 = [arr[0]];\r\n            for (var i = 1, len = arr.length; i < len; i++) {\r\n                if (arr[i] !== arr[i - 1]) {\r\n                    arr1.push(arr[i]);\r\n                }\r\n            }\r\n            return arr1;\r\n        }\r\n        Tools.arrayUnique_02 = arrayUnique_02;\r\n        function arrayUnique_03(arr) {\r\n            return Array.from(new Set(arr));\r\n        }\r\n        Tools.arrayUnique_03 = arrayUnique_03;\r\n        function array1ExcludeArray2(arr1, arr2) {\r\n            let arr1Capy = array_Copy(arr1);\r\n            let arr2Capy = array_Copy(arr2);\r\n            for (let i = 0; i < arr1Capy.length; i++) {\r\n                for (let j = 0; j < arr2Capy.length; j++) {\r\n                    if (arr1Capy[i] === arr2Capy[j]) {\r\n                        arr1Capy.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n            return arr1Capy;\r\n        }\r\n        Tools.array1ExcludeArray2 = array1ExcludeArray2;\r\n        function point_speedXYByAngle(angle, speed) {\r\n            if (angle % 90 === 0 || !angle) {\r\n            }\r\n            const speedXY = { x: 0, y: 0 };\r\n            speedXY.x = speed * Math.cos(angle * Math.PI / 180);\r\n            speedXY.y = speed * Math.sin(angle * Math.PI / 180);\r\n            return new Laya.Point(speedXY.x, speedXY.y);\r\n        }\r\n        Tools.point_speedXYByAngle = point_speedXYByAngle;\r\n        function point_GetRoundPos(angle, radius, centerPos) {\r\n            var center = centerPos;\r\n            var radius = radius;\r\n            var hudu = (2 * Math.PI / 360) * angle;\r\n            var X = center.x + Math.sin(hudu) * radius;\r\n            var Y = center.y - Math.cos(hudu) * radius;\r\n            return new Laya.Point(X, Y);\r\n        }\r\n        Tools.point_GetRoundPos = point_GetRoundPos;\r\n        function angle_GetRad(degree) {\r\n            return degree / 180 * Math.PI;\r\n        }\r\n        Tools.angle_GetRad = angle_GetRad;\r\n        function numberConverte(number) {\r\n            if (typeof (number) !== \"number\") {\r\n                console.warn(\"要转化的数字并不为number\");\r\n                return number;\r\n            }\r\n            let backNum;\r\n            if (number < 1000) {\r\n                backNum = \"\" + number;\r\n            }\r\n            else if (number < 1000000) {\r\n                backNum = \"\" + (number / 1000).toFixed(1) + \"k\";\r\n            }\r\n            else if (number < 10e8) {\r\n                backNum = \"\" + (number / 1000000).toFixed(1) + \"m\";\r\n            }\r\n            else {\r\n                backNum = \"\" + number;\r\n            }\r\n            return backNum;\r\n        }\r\n        Tools.numberConverte = numberConverte;\r\n        function jsonCompare(url, storageName, propertyName) {\r\n            let dataArr;\r\n            if (Laya.LocalStorage.getJSON(storageName)) {\r\n                dataArr = JSON.parse(Laya.LocalStorage.getJSON(storageName))[storageName];\r\n                console.log(storageName + '从本地缓存中获取到数据,将和文件夹的json文件进行对比');\r\n                try {\r\n                    let dataArr_0 = Laya.loader.getRes(url)['RECORDS'];\r\n                    if (dataArr_0.length >= dataArr.length) {\r\n                        let diffArray = Tools.objArr2DifferentPropertyObjArr1(dataArr_0, dataArr, propertyName);\r\n                        console.log('两个数据的差值为：', diffArray);\r\n                        Tools.arrayAddToarray(dataArr, diffArray);\r\n                    }\r\n                    else {\r\n                        console.log(storageName + '数据表填写有误，长度不能小于之前的长度');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    console.log(storageName, '数据赋值失败！请检查数据表或者手动赋值！');\r\n                }\r\n            }\r\n            else {\r\n                try {\r\n                    dataArr = Laya.loader.getRes(url)['RECORDS'];\r\n                }\r\n                catch (error) {\r\n                    console.log(storageName + '数据赋值失败！请检查数据表或者手动赋值！');\r\n                }\r\n            }\r\n            let data = {};\r\n            data[storageName] = dataArr;\r\n            Laya.LocalStorage.setJSON(storageName, JSON.stringify(data));\r\n            return dataArr;\r\n        }\r\n        Tools.jsonCompare = jsonCompare;\r\n    })(Tools = lwg.Tools || (lwg.Tools = {}));\r\n    let Task;\r\n    (function (Task) {\r\n        Task.TaskClassArr = [];\r\n        Task.todayData = {\r\n            get date() {\r\n                return Laya.LocalStorage.getItem('Task_todayData') ? Number(Laya.LocalStorage.getItem('Task_todayData')) : null;\r\n            },\r\n            set date(date) {\r\n                Laya.LocalStorage.setItem('Task_todayData', date.toString());\r\n            }\r\n        };\r\n        0;\r\n        function getProperty(ClassName, name, property) {\r\n            let pro = null;\r\n            let arr = getClassArr(ClassName);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (element['name'] === name) {\r\n                    pro = element[property];\r\n                    break;\r\n                }\r\n            }\r\n            if (pro !== null) {\r\n                return pro;\r\n            }\r\n            else {\r\n                console.log(name + '找不到属性:' + property, pro);\r\n                return null;\r\n            }\r\n        }\r\n        Task.getProperty = getProperty;\r\n        function setProperty(ClassName, name, property, value) {\r\n            let arr = getClassArr(ClassName);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (element['name'] === name) {\r\n                    element[property] = value;\r\n                    break;\r\n                }\r\n            }\r\n            let data = {};\r\n            data[ClassName] = arr;\r\n            Laya.LocalStorage.setJSON(ClassName, JSON.stringify(data));\r\n            if (Task._TaskList) {\r\n                Task._TaskList.refresh();\r\n            }\r\n        }\r\n        Task.setProperty = setProperty;\r\n        function getClassArr(ClassName) {\r\n            let arr = [];\r\n            switch (ClassName) {\r\n                case TaskClass.everyday:\r\n                    arr = Task.everydayTask;\r\n                    break;\r\n                case TaskClass.perpetual:\r\n                    arr = Task.perpetualTask;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return arr;\r\n        }\r\n        Task.getClassArr = getClassArr;\r\n        function doDetection(calssName, name, number) {\r\n            if (!number) {\r\n                number = 1;\r\n            }\r\n            let resCondition = Task.getProperty(calssName, name, Task.TaskProperty.resCondition);\r\n            let condition = Task.getProperty(calssName, name, Task.TaskProperty.condition);\r\n            if (Task.getProperty(calssName, name, Task.TaskProperty.get) !== -1) {\r\n                if (condition <= resCondition + number) {\r\n                    Task.setProperty(calssName, name, Task.TaskProperty.resCondition, condition);\r\n                    Task.setProperty(calssName, name, Task.TaskProperty.get, 1);\r\n                    if (Task._TaskList) {\r\n                        Task._TaskList.refresh();\r\n                    }\r\n                    return true;\r\n                }\r\n                else {\r\n                    Task.setProperty(calssName, name, Task.TaskProperty.resCondition, resCondition + number);\r\n                    if (Task._TaskList) {\r\n                        Task._TaskList.refresh();\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        Task.doDetection = doDetection;\r\n        let TaskProperty;\r\n        (function (TaskProperty) {\r\n            TaskProperty[\"name\"] = \"name\";\r\n            TaskProperty[\"explain\"] = \"explain\";\r\n            TaskProperty[\"taskType\"] = \"taskType\";\r\n            TaskProperty[\"condition\"] = \"condition\";\r\n            TaskProperty[\"resCondition\"] = \"resCondition\";\r\n            TaskProperty[\"rewardType\"] = \"rewardType\";\r\n            TaskProperty[\"rewardNum\"] = \"rewardNum\";\r\n            TaskProperty[\"arrange\"] = \"arrange\";\r\n            TaskProperty[\"time\"] = \"time\";\r\n            TaskProperty[\"get\"] = \"get\";\r\n        })(TaskProperty = Task.TaskProperty || (Task.TaskProperty = {}));\r\n        let TaskClass;\r\n        (function (TaskClass) {\r\n            TaskClass[\"everyday\"] = \"Task_Everyday\";\r\n            TaskClass[\"perpetual\"] = \"Task_Perpetual\";\r\n        })(TaskClass = Task.TaskClass || (Task.TaskClass = {}));\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"getAward\"] = \"getAward\";\r\n            EventType[\"adsGetAward_Every\"] = \"adsGetAward_Every\";\r\n            EventType[\"useSkins\"] = \"useSkins\";\r\n            EventType[\"victory\"] = \"victory\";\r\n            EventType[\"adsTime\"] = \"adsTime\";\r\n            EventType[\"victoryBox\"] = \"victoryBox\";\r\n        })(EventType = Task.EventType || (Task.EventType = {}));\r\n        let TaskType;\r\n        (function (TaskType) {\r\n            TaskType[\"ads\"] = \"ads\";\r\n            TaskType[\"victory\"] = \"victory\";\r\n            TaskType[\"useSkins\"] = \"useSkins\";\r\n            TaskType[\"treasureBox\"] = \"treasureBox\";\r\n        })(TaskType = Task.TaskType || (Task.TaskType = {}));\r\n        let TaskName;\r\n        (function (TaskName) {\r\n            TaskName[\"\\u89C2\\u770B\\u5E7F\\u544A\\u83B7\\u5F97\\u91D1\\u5E01\"] = \"\\u89C2\\u770B\\u5E7F\\u544A\\u83B7\\u5F97\\u91D1\\u5E01\";\r\n            TaskName[\"\\u6BCF\\u65E5\\u670D\\u52A110\\u4F4D\\u5BA2\\u4EBA\"] = \"\\u6BCF\\u65E5\\u670D\\u52A110\\u4F4D\\u5BA2\\u4EBA\";\r\n            TaskName[\"\\u6BCF\\u65E5\\u89C2\\u770B\\u4E24\\u4E2A\\u5E7F\\u544A\"] = \"\\u6BCF\\u65E5\\u89C2\\u770B\\u4E24\\u4E2A\\u5E7F\\u544A\";\r\n            TaskName[\"\\u6BCF\\u65E5\\u4F7F\\u75285\\u79CD\\u76AE\\u80A4\"] = \"\\u6BCF\\u65E5\\u4F7F\\u75285\\u79CD\\u76AE\\u80A4\";\r\n            TaskName[\"\\u6BCF\\u65E5\\u5F00\\u542F10\\u4E2A\\u5B9D\\u7BB1\"] = \"\\u6BCF\\u65E5\\u5F00\\u542F10\\u4E2A\\u5B9D\\u7BB1\";\r\n        })(TaskName = Task.TaskName || (Task.TaskName = {}));\r\n        function initTask() {\r\n            if (Task.todayData.date !== (new Date).getDate()) {\r\n                Task.everydayTask = Laya.loader.getRes('GameData/Task/everydayTask.json')['RECORDS'];\r\n                console.log('不是同一天，每日任务重制！');\r\n                Task.todayData.date = (new Date).getDate();\r\n            }\r\n            else {\r\n                Task.everydayTask = Tools.jsonCompare('GameData/Task/everydayTask.json', TaskClass.everyday, TaskProperty.name);\r\n                console.log('是同一天！，继续每日任务');\r\n            }\r\n        }\r\n        Task.initTask = initTask;\r\n        class TaskScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n                Task._TaskTap = this.self['TaskTap'];\r\n                Task._TaskList = this.self['TaskList'];\r\n                Task.TaskClassArr = [Task.everydayTask];\r\n            }\r\n            moduleOnEnable() {\r\n                this.taskTap_Create();\r\n                this.taskList_Create();\r\n            }\r\n            taskTap_Create() {\r\n                Task._TaskList.selectHandler = new Laya.Handler(this, this.taskTap_Select);\r\n            }\r\n            taskTap_Select(index) { }\r\n            taskList_Create() {\r\n                Task._TaskList.selectEnable = true;\r\n                Task._TaskList.vScrollBarSkin = \"\";\r\n                Task._TaskList.selectHandler = new Laya.Handler(this, this.taskList_Scelet);\r\n                Task._TaskList.renderHandler = new Laya.Handler(this, this.taskList_Update);\r\n                this.taskList_refresh();\r\n            }\r\n            taskList_Scelet(index) { }\r\n            taskList_Update(cell, index) { }\r\n            taskList_refresh() {\r\n                if (Task._TaskList && Task.TaskClassArr.length > 0) {\r\n                    Task._TaskList.array = Task.TaskClassArr[0];\r\n                    Task._TaskList.refresh();\r\n                }\r\n            }\r\n        }\r\n        Task.TaskScene = TaskScene;\r\n    })(Task = lwg.Task || (lwg.Task = {}));\r\n    let Shop;\r\n    (function (Shop) {\r\n        Shop.goodsClassArr = [];\r\n        Shop.classWarehouse = [];\r\n        Shop._tryName = [];\r\n        Shop.allSkin = [];\r\n        Shop._currentSkin = {\r\n            get name() {\r\n                return Laya.LocalStorage.getItem('Shop_currentSkin') ? Laya.LocalStorage.getItem('Shop_currentSkin') : null;\r\n            },\r\n            set name(name) {\r\n                Laya.LocalStorage.setItem('Shop_currentSkin', name);\r\n            }\r\n        };\r\n        Shop.allProps = [];\r\n        Shop._currentProp = {\r\n            get name() {\r\n                return Laya.LocalStorage.getItem('Shop_currentProp') ? Laya.LocalStorage.getItem('Shop_currentProp') : null;\r\n            },\r\n            set name(name) {\r\n                Laya.LocalStorage.setItem('Shop_currentProp', name);\r\n            }\r\n        };\r\n        Shop.allOther = [];\r\n        Shop._currentOther = {\r\n            get name() {\r\n                return Laya.LocalStorage.getItem('Shop_crrentOther') ? Laya.LocalStorage.getItem('Shop_crrentOther') : null;\r\n            },\r\n            set name(name) {\r\n                Laya.LocalStorage.setItem('Shop_crrentOther', name);\r\n            }\r\n        };\r\n        Shop.useSkinType = [];\r\n        function setUseSkinType() {\r\n            let arr;\r\n            if (Laya.LocalStorage.getJSON('Shop_useSkinType')) {\r\n                arr = JSON.parse(Laya.LocalStorage.getJSON('Shop_useSkinType'));\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            Shop.useSkinType = arr !== null ? arr['Shop_useSkinType'] : [];\r\n            Shop.useSkinType.push(Shop._currentOther.name, Shop._currentProp.name, Shop._currentSkin.name);\r\n            Shop.useSkinType = Tools.arrayUnique_03(Shop.useSkinType);\r\n            let data = {\r\n                Shop_useSkinType: Shop.useSkinType,\r\n            };\r\n            Laya.LocalStorage.setJSON('Shop_useSkinType', JSON.stringify(data));\r\n            return Shop.useSkinType.length;\r\n        }\r\n        Shop.setUseSkinType = setUseSkinType;\r\n        function getProperty(goodsClass, name, property) {\r\n            let pro = null;\r\n            let arr = getClassArr(goodsClass);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (element['name'] === name) {\r\n                    pro = element[property];\r\n                    break;\r\n                }\r\n            }\r\n            if (pro !== null) {\r\n                return pro;\r\n            }\r\n            else {\r\n                console.log(name + '找不到属性:' + property, pro);\r\n                return null;\r\n            }\r\n        }\r\n        Shop.getProperty = getProperty;\r\n        function setProperty(goodsClass, name, property, value) {\r\n            let arr = getClassArr(goodsClass);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (element['name'] === name) {\r\n                    element[property] = value;\r\n                    break;\r\n                }\r\n            }\r\n            let data = {};\r\n            data[goodsClass] = arr;\r\n            Laya.LocalStorage.setJSON(goodsClass, JSON.stringify(data));\r\n            if (Shop._ShopList) {\r\n                Shop._ShopList.refresh();\r\n            }\r\n        }\r\n        Shop.setProperty = setProperty;\r\n        function getHaveArr(goodsClass) {\r\n            let arr = getClassArr(goodsClass);\r\n            let arrHave = [];\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (element[GoodsProperty.have]) {\r\n                    arrHave.push(element);\r\n                }\r\n            }\r\n            return arrHave;\r\n        }\r\n        Shop.getHaveArr = getHaveArr;\r\n        function getwayGoldArr(goodsClass, have, excludeCurrent) {\r\n            let arr = getClassArr(goodsClass);\r\n            let arrNoHave = [];\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (have && have !== undefined) {\r\n                    if (element[GoodsProperty.have] && element[GoodsProperty.getway] === Getway.gold) {\r\n                        arrNoHave.push(element);\r\n                    }\r\n                }\r\n                else if (!have && have !== undefined) {\r\n                    if (!element[GoodsProperty.have] && element[GoodsProperty.getway] === Getway.gold) {\r\n                        arrNoHave.push(element);\r\n                    }\r\n                }\r\n                else if (have == undefined) {\r\n                    if (element[GoodsProperty.getway] === Getway.gold) {\r\n                        arrNoHave.push(element);\r\n                    }\r\n                }\r\n            }\r\n            if (excludeCurrent && excludeCurrent !== undefined) {\r\n                for (let index = 0; index < arrNoHave.length; index++) {\r\n                    const element = arrNoHave[index];\r\n                    if (element[GoodsProperty.name] === get_Current(goodsClass)) {\r\n                        arrNoHave.splice(index, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return arrNoHave;\r\n        }\r\n        Shop.getwayGoldArr = getwayGoldArr;\r\n        function getwayIneedwinArr(goodsClass, have) {\r\n            let arr = getClassArr(goodsClass);\r\n            let arrIneedwin = [];\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (have && have !== undefined) {\r\n                    if (element[GoodsProperty.have] && element[GoodsProperty.getway] === Getway.ineedwin) {\r\n                        arrIneedwin.push(element);\r\n                    }\r\n                }\r\n                else if (!have && have !== undefined) {\r\n                    if (!element[GoodsProperty.have] && element[GoodsProperty.getway] === Getway.ineedwin) {\r\n                        arrIneedwin.push(element);\r\n                    }\r\n                }\r\n                else if (have == undefined) {\r\n                    if (element[GoodsProperty.getway] === Getway.ineedwin) {\r\n                        arrIneedwin.push(element);\r\n                    }\r\n                }\r\n            }\r\n            return arrIneedwin;\r\n        }\r\n        Shop.getwayIneedwinArr = getwayIneedwinArr;\r\n        function get_Current(goodsClass) {\r\n            let _current = null;\r\n            switch (goodsClass) {\r\n                case GoodsClass.Skin:\r\n                    _current = Shop._currentSkin.name;\r\n                    break;\r\n                case GoodsClass.Props:\r\n                    _current = Shop._currentProp.name;\r\n                    break;\r\n                case GoodsClass.Other:\r\n                    _current = Shop._currentOther.name;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return _current;\r\n        }\r\n        Shop.get_Current = get_Current;\r\n        function getClassArr(goodsClass) {\r\n            let arr = [];\r\n            switch (goodsClass) {\r\n                case GoodsClass.Skin:\r\n                    arr = Shop.allSkin;\r\n                    break;\r\n                case GoodsClass.Props:\r\n                    arr = Shop.allProps;\r\n                    break;\r\n                case GoodsClass.Other:\r\n                    arr = Shop.allOther;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return arr;\r\n        }\r\n        Shop.getClassArr = getClassArr;\r\n        function buyGoods(calssName, name, number) {\r\n            if (!number) {\r\n                number = 1;\r\n            }\r\n            let resCondition = getProperty(calssName, name, GoodsProperty.resCondition);\r\n            let condition = getProperty(calssName, name, GoodsProperty.condition);\r\n            let have = getProperty(calssName, name, GoodsProperty.have);\r\n            if (have !== true && have !== null) {\r\n                if (condition <= resCondition + number) {\r\n                    setProperty(calssName, name, GoodsProperty.resCondition, condition);\r\n                    setProperty(calssName, name, GoodsProperty.have, true);\r\n                    if (Shop._ShopList) {\r\n                        Shop._ShopList.refresh();\r\n                    }\r\n                    return true;\r\n                }\r\n                else {\r\n                    setProperty(calssName, name, GoodsProperty.resCondition, resCondition + number);\r\n                    if (Shop._ShopList) {\r\n                        Shop._ShopList.refresh();\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        Shop.buyGoods = buyGoods;\r\n        function initShop() {\r\n            Shop.allSkin = Tools.jsonCompare('GameData/Shop/Skin.json', GoodsClass.Skin, GoodsProperty.name);\r\n            Shop.allProps = Tools.jsonCompare('GameData/Shop/Props.json', GoodsClass.Props, GoodsProperty.name);\r\n            Shop.allOther = Tools.jsonCompare('GameData/Shop/Other.json', GoodsClass.Other, GoodsProperty.name);\r\n        }\r\n        Shop.initShop = initShop;\r\n        let GoodsProperty;\r\n        (function (GoodsProperty) {\r\n            GoodsProperty[\"name\"] = \"name\";\r\n            GoodsProperty[\"getway\"] = \"getway\";\r\n            GoodsProperty[\"condition\"] = \"condition\";\r\n            GoodsProperty[\"resCondition\"] = \"resCondition\";\r\n            GoodsProperty[\"arrange\"] = \"arrange\";\r\n            GoodsProperty[\"getOder\"] = \"getOder\";\r\n            GoodsProperty[\"have\"] = \"have\";\r\n        })(GoodsProperty = Shop.GoodsProperty || (Shop.GoodsProperty = {}));\r\n        let Getway;\r\n        (function (Getway) {\r\n            Getway[\"free\"] = \"free\";\r\n            Getway[\"ads\"] = \"ads\";\r\n            Getway[\"adsXD\"] = \"adsXD\";\r\n            Getway[\"ineedwin\"] = \"ineedwin\";\r\n            Getway[\"gold\"] = \"gold\";\r\n            Getway[\"diamond\"] = \"diamond\";\r\n            Getway[\"easterEgg\"] = \"easterEgg\";\r\n            Getway[\"other\"] = \"other\";\r\n        })(Getway = Shop.Getway || (Shop.Getway = {}));\r\n        let GoodsClass;\r\n        (function (GoodsClass) {\r\n            GoodsClass[\"Skin\"] = \"Shop_Skin\";\r\n            GoodsClass[\"Props\"] = \"Shop_Props\";\r\n            GoodsClass[\"Other\"] = \"Shop_Other\";\r\n        })(GoodsClass = Shop.GoodsClass || (Shop.GoodsClass = {}));\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"select\"] = \"select\";\r\n        })(EventType = Shop.EventType || (Shop.EventType = {}));\r\n        class ShopScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n                Shop._ShopTap = this.self['MyTap'];\r\n                Shop._ShopList = this.self['MyList'];\r\n                if (!Shop.allSkin) {\r\n                    Shop.allSkin = Tools.jsonCompare('GameData/Shop/Skin.json', GoodsClass.Skin, GoodsProperty.name);\r\n                }\r\n                if (!Shop.allProps) {\r\n                    Shop.allProps = Tools.jsonCompare('GameData/Shop/Props.json', GoodsClass.Props, GoodsProperty.name);\r\n                }\r\n                if (!Shop.allOther) {\r\n                    Shop.allOther = Tools.jsonCompare('GameData/Shop/Other.json', GoodsClass.Other, GoodsProperty.name);\r\n                }\r\n                Shop.goodsClassArr = [Shop.allSkin, Shop.allProps, Shop.allOther];\r\n                Shop.classWarehouse = [GoodsClass.Skin, GoodsClass.Props, GoodsClass.Skin];\r\n            }\r\n            moduleOnEnable() {\r\n                this.myList_Create();\r\n                this.myTap_Create();\r\n            }\r\n            myTap_Create() {\r\n                Shop._ShopTap.selectHandler = new Laya.Handler(this, this.myTap_Select);\r\n            }\r\n            myTap_Select(index) { }\r\n            myList_Create() {\r\n                Shop._ShopList.selectEnable = true;\r\n                Shop._ShopList.selectHandler = new Laya.Handler(this, this.myList_Scelet);\r\n                Shop._ShopList.renderHandler = new Laya.Handler(this, this.myList_Update);\r\n                this.myList_refresh();\r\n            }\r\n            myList_Scelet(index) { }\r\n            myList_Update(cell, index) { }\r\n            myList_refresh() {\r\n                if (Shop._ShopList && Shop.goodsClassArr.length > 0) {\r\n                    Shop._ShopList.array = Shop.goodsClassArr[0];\r\n                    Shop._ShopList.refresh();\r\n                }\r\n            }\r\n        }\r\n        Shop.ShopScene = ShopScene;\r\n    })(Shop = lwg.Shop || (lwg.Shop = {}));\r\n    let VictoryBox;\r\n    (function (VictoryBox) {\r\n        VictoryBox._BoxArray = [];\r\n        VictoryBox._defaultOpenNum = 3;\r\n        VictoryBox._alreadyOpenNum = 0;\r\n        VictoryBox._adsMaxOpenNum = 6;\r\n        VictoryBox._openVictoryBoxNum = 0;\r\n        function getProperty(name, property) {\r\n            let pro = null;\r\n            for (let index = 0; index < VictoryBox._BoxArray.length; index++) {\r\n                const element = VictoryBox._BoxArray[index];\r\n                if (element['name'] === name) {\r\n                    pro = element[property];\r\n                    break;\r\n                }\r\n            }\r\n            if (pro !== null) {\r\n                return pro;\r\n            }\r\n            else {\r\n                console.log(name + '找不到属性:' + property, pro);\r\n                return null;\r\n            }\r\n        }\r\n        VictoryBox.getProperty = getProperty;\r\n        function setProperty(name, property, value) {\r\n            for (let index = 0; index < VictoryBox._BoxArray.length; index++) {\r\n                const element = VictoryBox._BoxArray[index];\r\n                if (element['name'] === name) {\r\n                    element[property] = value;\r\n                    break;\r\n                }\r\n            }\r\n            if (VictoryBox._BoxList) {\r\n                VictoryBox._BoxList.refresh();\r\n            }\r\n        }\r\n        VictoryBox.setProperty = setProperty;\r\n        let BoxProperty;\r\n        (function (BoxProperty) {\r\n            BoxProperty[\"name\"] = \"name\";\r\n            BoxProperty[\"rewardType\"] = \"rewardType\";\r\n            BoxProperty[\"rewardNum\"] = \"rewardNum\";\r\n            BoxProperty[\"openState\"] = \"openState\";\r\n            BoxProperty[\"ads\"] = \"ads\";\r\n            BoxProperty[\"select\"] = \"select\";\r\n        })(BoxProperty = VictoryBox.BoxProperty || (VictoryBox.BoxProperty = {}));\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"openBox\"] = \"openBox\";\r\n        })(EventType = VictoryBox.EventType || (VictoryBox.EventType = {}));\r\n        class VictoryBoxScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n                VictoryBox._BoxList = this.self['BoxList'];\r\n                VictoryBox._BoxArray = Tools.objArray_Copy(Laya.loader.getRes(\"GameData/VictoryBox/VictoryBox.json\")['RECORDS']);\r\n                VictoryBox._selectBox = null;\r\n                VictoryBox._defaultOpenNum = 3;\r\n                VictoryBox._openVictoryBoxNum++;\r\n                VictoryBox._adsMaxOpenNum = 6;\r\n                VictoryBox._alreadyOpenNum = 0;\r\n            }\r\n            moduleOnEnable() {\r\n                this.boxList_Create();\r\n            }\r\n            boxList_Create() {\r\n                VictoryBox._BoxList.selectEnable = true;\r\n                VictoryBox._BoxList.selectHandler = new Laya.Handler(this, this.boxList_Scelet);\r\n                VictoryBox._BoxList.renderHandler = new Laya.Handler(this, this.boxList_Update);\r\n                this.boxList_refresh();\r\n            }\r\n            boxList_Scelet(index) { }\r\n            boxList_Update(cell, index) { }\r\n            boxList_refresh() {\r\n                if (VictoryBox._BoxList) {\r\n                    VictoryBox._BoxList.array = VictoryBox._BoxArray;\r\n                    VictoryBox._BoxList.refresh();\r\n                }\r\n            }\r\n        }\r\n        VictoryBox.VictoryBoxScene = VictoryBoxScene;\r\n    })(VictoryBox = lwg.VictoryBox || (lwg.VictoryBox = {}));\r\n    let CheckIn;\r\n    (function (CheckIn) {\r\n        CheckIn._lastCheckDate = {\r\n            get date() {\r\n                return Laya.LocalStorage.getItem('Check_lastCheckDate') ? Number(Laya.LocalStorage.getItem('Check_lastCheckDate')) : -1;\r\n            },\r\n            set date(date) {\r\n                Laya.LocalStorage.setItem('Check_lastCheckDate', date.toString());\r\n            }\r\n        };\r\n        CheckIn._checkInNum = {\r\n            get number() {\r\n                return Laya.LocalStorage.getItem('Check_checkInNum') ? Number(Laya.LocalStorage.getItem('Check_checkInNum')) : 0;\r\n            },\r\n            set number(num) {\r\n                Laya.LocalStorage.setItem('Check_checkInNum', num.toString());\r\n            }\r\n        };\r\n        function getProperty(name, property) {\r\n            let pro = null;\r\n            for (let index = 0; index < CheckIn._checkArray.length; index++) {\r\n                const element = CheckIn._checkArray[index];\r\n                if (element['name'] === name) {\r\n                    pro = element[property];\r\n                    break;\r\n                }\r\n            }\r\n            if (pro !== null) {\r\n                return pro;\r\n            }\r\n            else {\r\n                console.log(name + '找不到属性:' + property, pro);\r\n                return null;\r\n            }\r\n        }\r\n        CheckIn.getProperty = getProperty;\r\n        function setProperty(className, name, property, value) {\r\n            for (let index = 0; index < CheckIn._checkArray.length; index++) {\r\n                const element = CheckIn._checkArray[index];\r\n                if (element['name'] === name) {\r\n                    element[property] = value;\r\n                    break;\r\n                }\r\n            }\r\n            let data = {};\r\n            data[className] = CheckIn._checkArray;\r\n            Laya.LocalStorage.setJSON(className, JSON.stringify(data));\r\n            if (CheckIn._checkList) {\r\n                CheckIn._checkList.refresh();\r\n            }\r\n        }\r\n        CheckIn.setProperty = setProperty;\r\n        function openCheckIn() {\r\n            let todayDate = (new Date).getDate();\r\n            let bool;\r\n            if (todayDate !== CheckIn._lastCheckDate.date) {\r\n                console.log('没有签到过，弹出签到页面！');\r\n                Admin._openScene(Admin.SceneName.UICheckIn);\r\n            }\r\n            else {\r\n                console.log('签到过了，今日不可以再签到');\r\n            }\r\n        }\r\n        CheckIn.openCheckIn = openCheckIn;\r\n        function todayCheckIn_7Days() {\r\n            let todayDate = (new Date).getDate();\r\n            CheckIn._lastCheckDate.date = todayDate;\r\n            CheckIn._checkInNum.number++;\r\n            setProperty(CheckClass.chek_7Days, 'day' + CheckIn._checkInNum.number, CheckProPerty.checkInState, true);\r\n            let rewardNum = getProperty('day' + CheckIn._checkInNum.number, CheckProPerty.rewardNum);\r\n            if (CheckIn._checkInNum.number === 7) {\r\n                CheckIn._checkInNum.number = 0;\r\n                Laya.LocalStorage.removeItem(CheckClass.chek_7Days);\r\n            }\r\n            return rewardNum;\r\n        }\r\n        CheckIn.todayCheckIn_7Days = todayCheckIn_7Days;\r\n        let CheckClass;\r\n        (function (CheckClass) {\r\n            CheckClass[\"chek_7Days\"] = \"Chek_7Days\";\r\n            CheckClass[\"chek_15Days\"] = \"Chek_15Days\";\r\n            CheckClass[\"chek_30Days\"] = \"Chek_30Days\";\r\n        })(CheckClass = CheckIn.CheckClass || (CheckIn.CheckClass = {}));\r\n        let CheckProPerty;\r\n        (function (CheckProPerty) {\r\n            CheckProPerty[\"name\"] = \"name\";\r\n            CheckProPerty[\"rewardType\"] = \"rewardType\";\r\n            CheckProPerty[\"rewardNum\"] = \"rewardNum\";\r\n            CheckProPerty[\"checkInState\"] = \"checkInState\";\r\n            CheckProPerty[\"arrange\"] = \"arrange\";\r\n        })(CheckProPerty = CheckIn.CheckProPerty || (CheckIn.CheckProPerty = {}));\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"removeCheckBtn\"] = \"removeCheckBtn\";\r\n        })(EventType = CheckIn.EventType || (CheckIn.EventType = {}));\r\n        class CheckInScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n                CheckIn._checkList = this.self['CheckList'];\r\n                CheckIn._checkArray = Tools.jsonCompare('GameData/CheckIn/CheckIn.json', CheckClass.chek_7Days, CheckProPerty.name);\r\n            }\r\n            moduleOnEnable() {\r\n                this.checkList_Create();\r\n            }\r\n            checkList_Create() {\r\n                CheckIn._checkList.selectEnable = true;\r\n                CheckIn._checkList.selectHandler = new Laya.Handler(this, this.checkList_Scelet);\r\n                CheckIn._checkList.renderHandler = new Laya.Handler(this, this.checkList_Update);\r\n                this.checkList_refresh();\r\n            }\r\n            checkList_Scelet(index) { }\r\n            checkList_Update(cell, index) { }\r\n            checkList_refresh() {\r\n                if (CheckIn._checkList) {\r\n                    CheckIn._checkList.array = CheckIn._checkArray;\r\n                    CheckIn._checkList.refresh();\r\n                }\r\n            }\r\n        }\r\n        CheckIn.CheckInScene = CheckInScene;\r\n    })(CheckIn = lwg.CheckIn || (lwg.CheckIn = {}));\r\n    let SkinQualified;\r\n    (function (SkinQualified) {\r\n        SkinQualified._adsNum = {\r\n            get value() {\r\n                return Laya.LocalStorage.getItem('XDSKin_adsNum') ? Number(Laya.LocalStorage.getItem('XDSKin_adsNum')) : 0;\r\n            },\r\n            set value(value) {\r\n                Laya.LocalStorage.setItem('XDSKin_adsNum', value.toString());\r\n            }\r\n        };\r\n        function openXDSkin(fromScene) {\r\n            if (SkinQualified._adsNum.value >= SkinQualified._needAdsNum) {\r\n                return;\r\n            }\r\n            else {\r\n                Admin._openScene(Admin.SceneName.UISkinXD);\r\n                SkinQualified._fromScene = fromScene;\r\n            }\r\n        }\r\n        SkinQualified.openXDSkin = openXDSkin;\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"acquisition\"] = \"acquisition\";\r\n        })(EventType = SkinQualified.EventType || (SkinQualified.EventType = {}));\r\n        class SkinQualifiedScene extends Admin.Scene {\r\n            moduleOnEnable() {\r\n                SkinQualified._needAdsNum = 3;\r\n            }\r\n        }\r\n        SkinQualified.SkinQualifiedScene = SkinQualifiedScene;\r\n    })(SkinQualified = lwg.SkinQualified || (lwg.SkinQualified = {}));\r\n    let Skin;\r\n    (function (Skin) {\r\n        Skin._skinClassArr = [];\r\n        Skin._headSkinArr = [];\r\n        Skin._currentHead = {\r\n            get name() {\r\n                return Laya.LocalStorage.getItem('Skin_currentHead') ? Laya.LocalStorage.getItem('Skin_currentHead') : null;\r\n            },\r\n            set name(name) {\r\n                Laya.LocalStorage.setItem('Skin_currentHead', name);\r\n            }\r\n        };\r\n        Skin._eyeSkinArr = [];\r\n        Skin._currentEye = {\r\n            get name() {\r\n                return Laya.LocalStorage.getItem('Skin_currentEye') ? Laya.LocalStorage.getItem('Skin_currentEye') : null;\r\n            },\r\n            set name(name) {\r\n                Laya.LocalStorage.setItem('Skin_currentEye', name);\r\n            }\r\n        };\r\n        let SkinClass;\r\n        (function (SkinClass) {\r\n            SkinClass[\"head\"] = \"head\";\r\n            SkinClass[\"eye\"] = \"eye\";\r\n            SkinClass[\"body\"] = \"body\";\r\n            SkinClass[\"upperBody\"] = \"upperBody\";\r\n            SkinClass[\"lowerBody\"] = \"lowerBody\";\r\n        })(SkinClass = Skin.SkinClass || (Skin.SkinClass = {}));\r\n        let SkinProperty;\r\n        (function (SkinProperty) {\r\n            SkinProperty[\"name\"] = \"name\";\r\n            SkinProperty[\"getway\"] = \"getway\";\r\n            SkinProperty[\"condition\"] = \"condition\";\r\n            SkinProperty[\"resCondition\"] = \"resCondition\";\r\n            SkinProperty[\"arrange\"] = \"arrange\";\r\n            SkinProperty[\"getOder\"] = \"getOder\";\r\n            SkinProperty[\"classify\"] = \"classify\";\r\n            SkinProperty[\"have\"] = \"have\";\r\n        })(SkinProperty = Skin.SkinProperty || (Skin.SkinProperty = {}));\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"purchase\"] = \"purchase\";\r\n            EventType[\"select\"] = \"select\";\r\n        })(EventType = Skin.EventType || (Skin.EventType = {}));\r\n        class SkinScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n                Skin._SkinTap = this.self['SkinTap'];\r\n                Skin._SkinList = this.self['SkinList'];\r\n                Skin._skinClassArr = [Skin._eyeSkinArr, Skin._headSkinArr];\r\n            }\r\n            moduleOnEnable() {\r\n                this.skinList_Create();\r\n                this.skinTap_Create();\r\n            }\r\n            skinTap_Create() {\r\n                Skin._SkinTap.selectHandler = new Laya.Handler(this, this.skinTap_Select);\r\n            }\r\n            skinTap_Select(index) { }\r\n            skinList_Create() {\r\n                Skin._SkinList.selectEnable = true;\r\n                Skin._SkinList.selectHandler = new Laya.Handler(this, this.skinList_Scelet);\r\n                Skin._SkinList.renderHandler = new Laya.Handler(this, this.skinList_Update);\r\n                this.skinList_refresh();\r\n            }\r\n            skinList_Scelet(index) { }\r\n            skinList_Update(cell, index) { }\r\n            skinList_refresh() {\r\n                if (Skin._SkinList && Skin._skinClassArr.length > 1) {\r\n                    Skin._SkinList.array = Skin._skinClassArr[0];\r\n                    Skin._SkinList.refresh();\r\n                }\r\n            }\r\n        }\r\n        Skin.SkinScene = SkinScene;\r\n    })(Skin = lwg.Skin || (lwg.Skin = {}));\r\n    let EasterEgg;\r\n    (function (EasterEgg) {\r\n        EasterEgg._easterEgg_1Arr = [];\r\n        EasterEgg._easterEgg_1 = {\r\n            get value() {\r\n                if (!Laya.LocalStorage.getItem('_easterEgg_01')) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            },\r\n            set value(val) {\r\n                Laya.LocalStorage.setItem('_easterEgg_01', val.toString());\r\n            }\r\n        };\r\n        function initEasterEgg() {\r\n            EasterEgg._easterEgg_1Arr = Tools.jsonCompare(\"GameData/EasterEgg/EasterEgg.json\", Classify.EasterEgg_01, Property.name);\r\n            Laya.loader.getRes(\"GameData/EasterEgg/EasterEgg.json\")['RECORDS'];\r\n        }\r\n        EasterEgg.initEasterEgg = initEasterEgg;\r\n        function getProperty(classify, name, property) {\r\n            let pro = null;\r\n            let arr = getClassArr(classify);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (element['name'] === name) {\r\n                    pro = element[property];\r\n                    break;\r\n                }\r\n            }\r\n            if (pro !== null) {\r\n                return pro;\r\n            }\r\n            else {\r\n                console.log(name + '找不到属性:' + property, pro);\r\n                return null;\r\n            }\r\n        }\r\n        EasterEgg.getProperty = getProperty;\r\n        function setProperty(classify, name, property, value) {\r\n            let arr = getClassArr(classify);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (element['name'] === name) {\r\n                    element[property] = value;\r\n                    break;\r\n                }\r\n            }\r\n            let data = {};\r\n            data[classify] = arr;\r\n            Laya.LocalStorage.setJSON(classify, JSON.stringify(data));\r\n        }\r\n        EasterEgg.setProperty = setProperty;\r\n        function getClassArr(classify) {\r\n            let arr = [];\r\n            switch (classify) {\r\n                case Classify.EasterEgg_01:\r\n                    arr = EasterEgg._easterEgg_1Arr;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return arr;\r\n        }\r\n        EasterEgg.getClassArr = getClassArr;\r\n        function doDetection(classify, name, number) {\r\n            if (!number) {\r\n                number = 0;\r\n            }\r\n            let resCondition = getProperty(classify, name, Property.resCondition);\r\n            let condition = getProperty(classify, name, Property.condition);\r\n            if (!getProperty(classify, name, Property.complete)) {\r\n                if (condition <= resCondition + number) {\r\n                    setProperty(classify, name, Property.resCondition, condition);\r\n                    setProperty(classify, name, Property.complete, true);\r\n                    console.log(getProperty(classify, name, Property.complete));\r\n                    return true;\r\n                }\r\n                else {\r\n                    setProperty(classify, name, Property.resCondition, resCondition + number);\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n        EasterEgg.doDetection = doDetection;\r\n        function detectAllTasks(classify) {\r\n            let num = 1;\r\n            let arr = getClassArr(classify);\r\n            for (const key in arr) {\r\n                if (arr.hasOwnProperty(key)) {\r\n                    const element = arr[key];\r\n                    let resCondition = getProperty(classify, element.name, Property.resCondition);\r\n                    let condition = getProperty(classify, element.name, Property.condition);\r\n                    if (condition > resCondition) {\r\n                        num = 0;\r\n                    }\r\n                }\r\n            }\r\n            if (num == 1) {\r\n                console.log(classify, '完成了！');\r\n            }\r\n            else {\r\n                console.log(classify, '没有完成！');\r\n            }\r\n            return num;\r\n        }\r\n        EasterEgg.detectAllTasks = detectAllTasks;\r\n        let rewardType;\r\n        (function (rewardType) {\r\n            rewardType[\"gold\"] = \"gold\";\r\n            rewardType[\"diamond\"] = \"diamond\";\r\n            rewardType[\"assembly\"] = \"assembly\";\r\n        })(rewardType = EasterEgg.rewardType || (EasterEgg.rewardType = {}));\r\n        let Property;\r\n        (function (Property) {\r\n            Property[\"name\"] = \"name\";\r\n            Property[\"explain\"] = \"explain\";\r\n            Property[\"condition\"] = \"condition\";\r\n            Property[\"resCondition\"] = \"resCondition\";\r\n            Property[\"complete\"] = \"complete\";\r\n        })(Property = EasterEgg.Property || (EasterEgg.Property = {}));\r\n        let Classify;\r\n        (function (Classify) {\r\n            Classify[\"EasterEgg_01\"] = \"EasterEgg_01\";\r\n        })(Classify = EasterEgg.Classify || (EasterEgg.Classify = {}));\r\n        let Name;\r\n        (function (Name) {\r\n            Name[\"assembly_1\"] = \"assembly_1\";\r\n            Name[\"assembly_2\"] = \"assembly_2\";\r\n            Name[\"assembly_3\"] = \"assembly_3\";\r\n            Name[\"assembly_4\"] = \"assembly_4\";\r\n            Name[\"assembly_5\"] = \"assembly_5\";\r\n        })(Name = EasterEgg.Name || (EasterEgg.Name = {}));\r\n        let EventType;\r\n        (function (EventType) {\r\n            EventType[\"trigger\"] = \"trigger\";\r\n            EventType[\"easterEggAds\"] = \"easterEggAds\";\r\n        })(EventType = EasterEgg.EventType || (EasterEgg.EventType = {}));\r\n        class EasterEggScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n            }\r\n            moduleOnEnable() {\r\n            }\r\n            moduleEventReg() {\r\n            }\r\n        }\r\n        EasterEgg.EasterEggScene = EasterEggScene;\r\n    })(EasterEgg = lwg.EasterEgg || (lwg.EasterEgg = {}));\r\n    let Victory;\r\n    (function (Victory) {\r\n        class VictoryScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n            }\r\n            ;\r\n            moduleEventReg() {\r\n            }\r\n            ;\r\n            moduleOnEnable() {\r\n            }\r\n            ;\r\n        }\r\n        Victory.VictoryScene = VictoryScene;\r\n    })(Victory = lwg.Victory || (lwg.Victory = {}));\r\n    let Defeated;\r\n    (function (Defeated) {\r\n        class DefeatedScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n            }\r\n            ;\r\n            moduleEventReg() {\r\n            }\r\n            ;\r\n            moduleOnEnable() {\r\n            }\r\n            ;\r\n        }\r\n        Defeated.DefeatedScene = DefeatedScene;\r\n    })(Defeated = lwg.Defeated || (lwg.Defeated = {}));\r\n    let Loding;\r\n    (function (Loding) {\r\n        Loding.list_3DScene = [];\r\n        Loding.list_3DPrefab = [];\r\n        Loding.list_3DMesh = [];\r\n        Loding.lolist_3DBaseMaterial = [];\r\n        Loding.list_3DTexture2D = [];\r\n        Loding.list_2DPic = [];\r\n        Loding.list_2DScene = [];\r\n        Loding.list_2DPrefab = [];\r\n        Loding.list_JsonData = [];\r\n        Loding.sumProgress = 0;\r\n        Loding.currentProgress = {\r\n            p: 0,\r\n            get value() {\r\n                return this.p;\r\n            },\r\n            set value(v) {\r\n                this.p = v;\r\n                if (this.p >= Loding.sumProgress) {\r\n                    console.log('当前进度条进度为:', Loding.currentProgress.value / Loding.sumProgress);\r\n                    console.log('进度条停止！');\r\n                    console.log('所有资源加载完成！此时所有资源可通过例如 Laya.loader.getRes(\"Data/levelsData.json\")获取');\r\n                    EventAdmin.notify(Loding.LodingType.complete);\r\n                }\r\n                else {\r\n                    let number = 0;\r\n                    for (let index = 0; index <= Loding.loadOrderIndex; index++) {\r\n                        number += Loding.loadOrder[index].length;\r\n                    }\r\n                    if (this.p === number) {\r\n                        Loding.loadOrderIndex++;\r\n                    }\r\n                    EventAdmin.notify(Loding.LodingType.loding);\r\n                }\r\n            },\r\n        };\r\n        let LodingType;\r\n        (function (LodingType) {\r\n            LodingType[\"complete\"] = \"complete\";\r\n            LodingType[\"loding\"] = \"loding\";\r\n            LodingType[\"progress\"] = \"progress\";\r\n        })(LodingType = Loding.LodingType || (Loding.LodingType = {}));\r\n        class LodingScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n                DateAdmin._loginNumber.value++;\r\n                console.log('玩家登陆的天数为：', DateAdmin._loginDate.value.length, '天');\r\n            }\r\n            moduleEventReg() {\r\n                EventAdmin.reg(LodingType.loding, this, () => { this.lodingRule(); });\r\n                EventAdmin.reg(LodingType.complete, this, () => {\r\n                    let time = this.lodingComplete();\r\n                    PalyAudio.playMusic();\r\n                    Laya.timer.once(time, this, () => { Admin._openScene(Admin.SceneName.LwgInit, this.self); });\r\n                });\r\n                EventAdmin.reg(LodingType.progress, this, (skip) => {\r\n                    Loding.currentProgress.value++;\r\n                    if (Loding.currentProgress.value < Loding.sumProgress) {\r\n                        console.log('当前进度条进度为:', Loding.currentProgress.value / Loding.sumProgress);\r\n                        this.lodingPhaseComplete();\r\n                    }\r\n                });\r\n            }\r\n            moduleOnEnable() {\r\n                Loding.loadOrder = [Loding.list_2DPic, Loding.list_2DScene, Loding.list_2DPrefab, Loding.list_3DScene, Loding.list_3DPrefab, Loding.list_JsonData];\r\n                for (let index = 0; index < Loding.loadOrder.length; index++) {\r\n                    Loding.sumProgress += Loding.loadOrder[index].length;\r\n                    if (Loding.loadOrder[index].length <= 0) {\r\n                        Loding.loadOrder.splice(index, 1);\r\n                        index--;\r\n                    }\r\n                }\r\n                Loding.loadOrderIndex = 0;\r\n                let time = this.lwgOpenAni();\r\n                if (time == null) {\r\n                    time = 0;\r\n                }\r\n                Laya.timer.once(time, this, () => {\r\n                    EventAdmin.notify(Loding.LodingType.loding);\r\n                });\r\n            }\r\n            lodingRule() {\r\n                if (Loding.loadOrder.length <= 0) {\r\n                    console.log('没有加载项');\r\n                    return;\r\n                }\r\n                let alreadyPro = 0;\r\n                for (let i = 0; i < Loding.loadOrderIndex; i++) {\r\n                    alreadyPro += Loding.loadOrder[i].length;\r\n                }\r\n                let index = Loding.currentProgress.value - alreadyPro;\r\n                switch (Loding.loadOrder[Loding.loadOrderIndex]) {\r\n                    case Loding.list_2DPic:\r\n                        Laya.loader.load(Loding.list_2DPic[index], Laya.Handler.create(this, (any) => {\r\n                            if (any == null) {\r\n                                console.log('XXXXXXXXXXX2D资源' + Loding.list_2DPic[index] + '加载失败！不会停止加载进程！', '数组下标为：', index, 'XXXXXXXXXXX');\r\n                            }\r\n                            else {\r\n                                console.log('2D图片' + Loding.list_2DPic[index] + '加载完成！', '数组下标为：', index);\r\n                            }\r\n                            EventAdmin.notify(LodingType.progress);\r\n                        }));\r\n                        break;\r\n                    case Loding.list_2DScene:\r\n                        Laya.loader.load(Loding.list_2DScene[index], Laya.Handler.create(this, (any) => {\r\n                            if (any == null) {\r\n                                console.log('XXXXXXXXXXX数据表' + Loding.list_2DScene[index] + '加载失败！不会停止加载进程！', '数组下标为：', index, 'XXXXXXXXXXX');\r\n                            }\r\n                            else {\r\n                                console.log('2D场景' + Loding.list_2DScene[index] + '加载完成！', '数组下标为：', index);\r\n                            }\r\n                            EventAdmin.notify(LodingType.progress);\r\n                        }), null, Laya.Loader.JSON);\r\n                        break;\r\n                    case Loding.list_2DPrefab:\r\n                        Laya.loader.load(Loding.list_2DPrefab[index], Laya.Handler.create(this, (any) => {\r\n                            if (any == null) {\r\n                                console.log('XXXXXXXXXXX数据表' + Loding.list_2DPrefab[index] + '加载失败！不会停止加载进程！', '数组下标为：', index, 'XXXXXXXXXXX');\r\n                            }\r\n                            else {\r\n                                console.log('2D预制体' + Loding.list_2DPrefab[index] + '加载完成！', '数组下标为：', index);\r\n                            }\r\n                            EventAdmin.notify(LodingType.progress);\r\n                        }), null, Laya.Loader.JSON);\r\n                        break;\r\n                    case Loding.list_3DScene:\r\n                        Laya.Scene3D.load(Loding.list_3DScene[index], Laya.Handler.create(this, (any) => {\r\n                            if (any == null) {\r\n                                console.log('XXXXXXXXXXX3D场景' + Loding.list_3DScene[index] + '加载失败！不会停止加载进程！', '数组下标为：', index, 'XXXXXXXXXXX');\r\n                            }\r\n                            else {\r\n                                console.log('3D场景' + Loding.list_3DScene[index] + '加载完成！', '数组下标为：', index);\r\n                            }\r\n                            EventAdmin.notify(LodingType.progress);\r\n                        }));\r\n                        break;\r\n                    case Loding.list_3DPrefab:\r\n                        Laya.Sprite3D.load(Loding.list_3DPrefab[index], Laya.Handler.create(this, (any) => {\r\n                            if (any == null) {\r\n                                console.log('XXXXXXXXXXX3D预设体' + Loding.list_3DPrefab[index] + '加载失败！不会停止加载进程！', '数组下标为：', index, 'XXXXXXXXXXX');\r\n                            }\r\n                            else {\r\n                                console.log('3D预制体' + Loding.list_3DPrefab[index] + '加载完成！', '数组下标为：', index);\r\n                            }\r\n                            EventAdmin.notify(LodingType.progress);\r\n                        }));\r\n                        break;\r\n                    case Loding.list_JsonData:\r\n                        Laya.loader.load(Loding.list_JsonData[index], Laya.Handler.create(this, (any) => {\r\n                            if (any == null) {\r\n                                console.log('XXXXXXXXXXX数据表' + Loding.list_JsonData[index] + '加载失败！不会停止加载进程！', '数组下标为：', index, 'XXXXXXXXXXX');\r\n                            }\r\n                            else {\r\n                                console.log('数据表' + Loding.list_JsonData[index] + '加载完成！', '数组下标为：', index);\r\n                            }\r\n                            EventAdmin.notify(LodingType.progress);\r\n                        }), null, Laya.Loader.JSON);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            lodingPhaseComplete() { }\r\n            lodingComplete() { return 0; }\r\n            ;\r\n        }\r\n        Loding.LodingScene = LodingScene;\r\n    })(Loding = lwg.Loding || (lwg.Loding = {}));\r\n    let Start;\r\n    (function (Start) {\r\n        class StartScene extends Admin.Scene {\r\n            moduleOnAwake() {\r\n            }\r\n            moduleOnEnable() {\r\n            }\r\n            moduleEventReg() {\r\n            }\r\n        }\r\n        Start.StartScene = StartScene;\r\n    })(Start = lwg.Start || (lwg.Start = {}));\r\n    let Tomato;\r\n    (function (Tomato) {\r\n        let scenePointType;\r\n        (function (scenePointType) {\r\n            scenePointType[\"open\"] = \"open\";\r\n            scenePointType[\"close\"] = \"close\";\r\n        })(scenePointType = Tomato.scenePointType || (Tomato.scenePointType = {}));\r\n        function scenePrintPoint(sceneName, type) {\r\n            switch (sceneName) {\r\n                case Admin.SceneName.UILoding:\r\n                    if (type === scenePointType.open) {\r\n                        ADManager.TAPoint(TaT.PageEnter, 'UIPreload');\r\n                    }\r\n                    else if (type === scenePointType.close) {\r\n                        ADManager.TAPoint(TaT.PageLeave, 'UIPreload');\r\n                    }\r\n                    break;\r\n                case Admin.SceneName.UIStart:\r\n                    if (type === scenePointType.open) {\r\n                        ADManager.TAPoint(TaT.PageEnter, 'mianpage');\r\n                    }\r\n                    else if (type === scenePointType.close) {\r\n                        ADManager.TAPoint(TaT.PageLeave, 'mianpage');\r\n                    }\r\n                    break;\r\n                case Admin.SceneName.UIVictory:\r\n                    if (type === scenePointType.open) {\r\n                        ADManager.TAPoint(TaT.PageEnter, 'successpage');\r\n                    }\r\n                    else if (type === scenePointType.close) {\r\n                        ADManager.TAPoint(TaT.PageLeave, 'successpage');\r\n                    }\r\n                    break;\r\n                case Admin.SceneName.UIDefeated:\r\n                    if (type === scenePointType.open) {\r\n                        ADManager.TAPoint(TaT.PageEnter, 'failpage');\r\n                    }\r\n                    else if (type === scenePointType.close) {\r\n                        ADManager.TAPoint(TaT.PageLeave, 'failpage');\r\n                    }\r\n                    break;\r\n                case Admin.SceneName.UIResurgence:\r\n                    if (type === scenePointType.open) {\r\n                        ADManager.TAPoint(TaT.PageEnter, 'revivepage');\r\n                    }\r\n                    else if (type === scenePointType.close) {\r\n                        ADManager.TAPoint(TaT.PageLeave, 'revivepage');\r\n                    }\r\n                    break;\r\n                case Admin.SceneName.UISkinXD:\r\n                    if (type === scenePointType.open) {\r\n                        ADManager.TAPoint(TaT.PageEnter, 'limmitpage');\r\n                    }\r\n                    else if (type === scenePointType.close) {\r\n                        ADManager.TAPoint(TaT.PageLeave, 'limmitpage');\r\n                    }\r\n                    break;\r\n                case Admin.SceneName.UIShare:\r\n                    if (type === scenePointType.open) {\r\n                        ADManager.TAPoint(TaT.PageEnter, 'sharepage');\r\n                    }\r\n                    else if (type === scenePointType.close) {\r\n                        ADManager.TAPoint(TaT.PageLeave, 'sharepage');\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        Tomato.scenePrintPoint = scenePrintPoint;\r\n        let btnPointType;\r\n        (function (btnPointType) {\r\n            btnPointType[\"show\"] = \"show\";\r\n            btnPointType[\"click\"] = \"click\";\r\n        })(btnPointType = Tomato.btnPointType || (Tomato.btnPointType = {}));\r\n        function btnPrintPoint() {\r\n        }\r\n        Tomato.btnPrintPoint = btnPrintPoint;\r\n    })(Tomato = lwg.Tomato || (lwg.Tomato = {}));\r\n})(lwg || (lwg = {}));\r\nexport default lwg;\r\nexport let Admin = lwg.Admin;\r\nexport let EventAdmin = lwg.EventAdmin;\r\nexport let DateAdmin = lwg.DateAdmin;\r\nexport let Pause = lwg.Pause;\r\nexport let Execution = lwg.Execution;\r\nexport let Gold = lwg.Gold;\r\nexport let Setting = lwg.Setting;\r\nexport let PalyAudio = lwg.PalyAudio;\r\nexport let Click = lwg.Click;\r\nexport let Effects = lwg.Effects;\r\nexport let Dialog = lwg.Dialog;\r\nexport let Animation2D = lwg.Animation2D;\r\nexport let Animation3D = lwg.Animation3D;\r\nexport let Tools = lwg.Tools;\r\nexport let Elect = lwg.Elect;\r\nexport let Loding = lwg.Loding;\r\nexport let LodeScene = lwg.Loding.LodingScene;\r\nexport let Shop = lwg.Shop;\r\nexport let ShopScene = lwg.Shop.ShopScene;\r\nexport let Task = lwg.Task;\r\nexport let TaskScene = lwg.Task.TaskScene;\r\nexport let VictoryBox = lwg.VictoryBox;\r\nexport let VictoryBoxScene = lwg.VictoryBox.VictoryBoxScene;\r\nexport let CheckIn = lwg.CheckIn;\r\nexport let CheckInScene = lwg.CheckIn.CheckInScene;\r\nexport let SkinQualified = lwg.SkinQualified;\r\nexport let SkinXDScene = lwg.SkinQualified.SkinQualifiedScene;\r\nexport let Skin = lwg.Skin;\r\nexport let SkinScene = lwg.Skin.SkinScene;\r\nexport let EasterEgg = lwg.EasterEgg;\r\nexport let Start = lwg.Start;\r\nexport let StartScene = lwg.Start.StartScene;\r\nexport let Victory = lwg.Victory;\r\nexport let VictoryScene = lwg.Victory.VictoryScene;\r\nexport let Defeated = lwg.Defeated;\r\nexport let DefeatedScene = lwg.Defeated.DefeatedScene;\r\nexport let Tomato = lwg.Tomato;\r\n",
  "references": [
    "D:/Game/project/Who/Project/Who/src/TJ/Admanager.ts"
  ]
}
